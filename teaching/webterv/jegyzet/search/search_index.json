{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Webtervez\u00e9s jegyzet \u00b6 Sz\u00fcks\u00e9ges alkalmaz\u00e1sok \u00b6 A kurzus folyam\u00e1n h\u00e1rom nyelvet tanulunk: HTML-t, CSS-t \u00e9s PHP-t. A HTML \u00e9s CSS k\u00f3d \u00edr\u00e1s\u00e1hoz egy tetsz\u0151leges szerkeszt\u0151programra, valamint egy webb\u00f6ng\u00e9sz\u0151re van sz\u00fcks\u00e9g\u00fcnk. A PHP programok futtat\u00e1s\u00e1hoz a XAMPP nev\u0171 szoftvercsomagot haszn\u00e1ljuk. Ez biztos\u00edt sz\u00e1munkra egy PHP \u00e9rtelmez\u0151t, valamint egy Apache webszervert. A telep\u00edt\u00e9s\u00e9r\u0151l \u00e9s haszn\u00e1lat\u00e1r\u00f3l a 6. gyakorlati jegyzet ben olvashatunk r\u00e9szletesebben. N\u00e9h\u00e1ny javasolt szerkeszt\u0151program \u00b6 Geany Sublime Text Editor Notepad++ Visual Studio Code JetBrains term\u00e9kek: WebStorm (HTML \u00e9s CSS), PhpStorm (PHP) A tant\u00e1rgy tematik\u00e1ja \u00b6 HTML \u00e9s CSS \u00b6 HTML \u00e9s CSS szintaxis \u00c1ltal\u00e1nos form\u00e1z\u00e1sok. A dobozmodell \u00e9s r\u00e9szeinek form\u00e1z\u00e1sa. Megjelen\u00edt\u00e9si jellemz\u0151k. St\u00edlusok k\u00f6lcs\u00f6nhat\u00e1sa. Helyzetmegad\u00e1s Weboldalak struktur\u00e1l\u00e1sa. Be\u00e1gyazott keretek (lebeg\u0151keretek) Sz\u00f6vegek jellemz\u0151i, struktur\u00e1lis egys\u00e9gei \u00e9s azok form\u00e1z\u00e1sa. Hivatkoz\u00e1sok elhelyez\u00e9se \u00e9s form\u00e1z\u00e1sa Felsorol\u00e1sok. Men\u00fck elhelyez\u00e9se \u00e9s form\u00e1z\u00e1sa T\u00e1bl\u00e1zatok k\u00e9sz\u00edt\u00e9se \u0170rlapok k\u00e9sz\u00edt\u00e9se. \u0170rlapelemek, elemfeliratok, m\u0171k\u00f6d\u00e9si jellemz\u0151k Multim\u00e9di\u00e1s elemek be\u00e1gyaz\u00e1sa A HTML \u00e9s CSS tov\u00e1bbi lehet\u0151s\u00e9gei Szerveroldali webprogramoz\u00e1s, PHP \u00b6 A kiszolg\u00e1l\u00f3- \u00e9s \u00fcgyf\u00e9loldali web programoz\u00e1s jellemz\u00e9se, kapcsolata, alkalmaz\u00e1si ter\u00fcletei A PHP nyelvi elemei \u0170rlapok kezel\u00e9se F\u00e1jlok haszn\u00e1lata \u00c1llapotok t\u00e1rol\u00e1sa. Menetk\u00f6vet\u00e9s Objektumorient\u00e1lts\u00e1g A PHP tov\u00e1bbi lehet\u0151s\u00e9gei Aj\u00e1nlott irodalom \u00b6 HTML \u00e9s CSS \u00b6 Jelen gyakorlati jegyzet Vancsics B\u00e9la \u00e1ltal gondozott gyakorlati jegyzet Abonyi-T\u00f3th Andor, ELTE IK: A weblapk\u00e9sz\u00edt\u00e9s technik\u00e1ja (HTML5, CSS3) \u00e9s ergon\u00f3mi\u00e1ja, elte.hu , tankonyvtar.hu HTML5 weboldalak k\u00e9sz\u00edt\u00e9se - webfejlesztes.gtportal.eu HTML \u00e9s CSS - Standardsmode.hu Web-fejleszt\u00e9s Holl\u00f3 Csaba: \u00dczleti webtechnol\u00f3gi\u00e1k , Typotex Kiad\u00f3, 2011. Virginia DeBolt: HTML \u00e9s CSS. Webszerkeszt\u00e9s st\u00edlusosan. Kiskapu Kft, 2005. (angol) HTML5 - MDN web docs (Mozilla) (angol) HTML5 Tutorial - w3schools.com (angol) Estelle Weyl: HTML5 v. XHTML5 PHP \u00b6 Jelen gyakorlati jegyzet Vancsics B\u00e9la \u00e1ltal gondozott gyakorlati jegyzet Nagy Guszt\u00e1v: Web programoz\u00e1s , Webes szabv\u00e1nyok PHP WIKI k\u00f6nyv PHP k\u00e9zik\u00f6nyv (r\u00e9gebbi) G\u00e1l Tibor: Web programoz\u00e1s, M\u00fbegyetemi kiad\u00f3, 2006. Matt Zandstra: Tanuljuk meg a PHP5 haszn\u00e1lat\u00e1t 24 \u00f3ra alatt, Kiskapu Kiad\u00f3, 2005. Blake Schwendiman: PHP4 Fejleszt\u00f5k k\u00e9zik\u00f6nyve (1. + 2. k\u00f6tet), Panem Kft., Budapest, 2001. Peter Moulding: PHP halad\u00f3knak, Fekete K\u00f6nyv sorozat, Perfact-Pro Kft., 2002. Schlossnagle, George: PHP fejleszt\u00e9s fels\u0151fokon, Kiskapu Kft., 2004. Ben Laurie, Peter Laurie: Apache, Kossuth Kiad\u00f3, 2001. L\u00e1szl\u00f3 J\u00f3zsef: Dinamikus weboldalak, CGI programoz\u00e1s Windows \u00e9s Linux rendszerekben, ComputerBooks, Budapest, 2002. (angol) PHP 5 Tutorial - W3Schools (angol) PHP: Documentation php.net (angol) PHP: The Right Way phptherightway.com (angol) Learn PHP Online - Code School Az elk\u00e9sz\u00fclt jegyzetr\u0151l, hib\u00e1k \u00b6 Hib\u00e1k \u00b6 A jegyzet folyamatosan k\u00e9sz\u00fcl, \u00edgy el\u0151fordulhatnak benne apr\u00f3bb hib\u00e1k, hi\u00e1nyoss\u00e1gok, el\u00edr\u00e1sok. Ha valaki esetleg ilyet tal\u00e1lna, k\u00e9rem \u00edrjon a Cservenak.Bence[kukac]stud.u-szeged.hu c\u00edmre, hogy mihamarabb jav\u00edthassuk. A t\u00e1rgyi t\u00e9ved\u00e9sek jelent\u00e9s\u00e9\u00e9rt cser\u00e9be pluszpontok szerz\u00e9s\u00e9re van lehet\u0151s\u00e9g, gyakorlatvezet\u0151t\u0151l f\u00fcggetlen\u00fcl. K\u00e9sz\u00edt\u0151k \u00b6 Cserven\u00e1k Bence Jogi nyilatkozat \u00b6 Nevezd meg! - Ne add el! - \u00cdgy add tov\u00e1bb! 4.0 Nemzetk\u00f6zi Gyors \u00f6sszefoglal\u00f3 a licenszr\u0151l, \u00e9s a teljes v\u00e1ltozat .","title":"Kezd\u0151lap"},{"location":"#webtervezes-jegyzet","text":"","title":"Webtervez\u00e9s jegyzet"},{"location":"#szukseges-alkalmazasok","text":"A kurzus folyam\u00e1n h\u00e1rom nyelvet tanulunk: HTML-t, CSS-t \u00e9s PHP-t. A HTML \u00e9s CSS k\u00f3d \u00edr\u00e1s\u00e1hoz egy tetsz\u0151leges szerkeszt\u0151programra, valamint egy webb\u00f6ng\u00e9sz\u0151re van sz\u00fcks\u00e9g\u00fcnk. A PHP programok futtat\u00e1s\u00e1hoz a XAMPP nev\u0171 szoftvercsomagot haszn\u00e1ljuk. Ez biztos\u00edt sz\u00e1munkra egy PHP \u00e9rtelmez\u0151t, valamint egy Apache webszervert. A telep\u00edt\u00e9s\u00e9r\u0151l \u00e9s haszn\u00e1lat\u00e1r\u00f3l a 6. gyakorlati jegyzet ben olvashatunk r\u00e9szletesebben.","title":"Sz\u00fcks\u00e9ges alkalmaz\u00e1sok"},{"location":"#nehany-javasolt-szerkesztoprogram","text":"Geany Sublime Text Editor Notepad++ Visual Studio Code JetBrains term\u00e9kek: WebStorm (HTML \u00e9s CSS), PhpStorm (PHP)","title":"N\u00e9h\u00e1ny javasolt szerkeszt\u0151program"},{"location":"#a-tantargy-tematikaja","text":"","title":"A tant\u00e1rgy tematik\u00e1ja"},{"location":"#html-es-css","text":"HTML \u00e9s CSS szintaxis \u00c1ltal\u00e1nos form\u00e1z\u00e1sok. A dobozmodell \u00e9s r\u00e9szeinek form\u00e1z\u00e1sa. Megjelen\u00edt\u00e9si jellemz\u0151k. St\u00edlusok k\u00f6lcs\u00f6nhat\u00e1sa. Helyzetmegad\u00e1s Weboldalak struktur\u00e1l\u00e1sa. Be\u00e1gyazott keretek (lebeg\u0151keretek) Sz\u00f6vegek jellemz\u0151i, struktur\u00e1lis egys\u00e9gei \u00e9s azok form\u00e1z\u00e1sa. Hivatkoz\u00e1sok elhelyez\u00e9se \u00e9s form\u00e1z\u00e1sa Felsorol\u00e1sok. Men\u00fck elhelyez\u00e9se \u00e9s form\u00e1z\u00e1sa T\u00e1bl\u00e1zatok k\u00e9sz\u00edt\u00e9se \u0170rlapok k\u00e9sz\u00edt\u00e9se. \u0170rlapelemek, elemfeliratok, m\u0171k\u00f6d\u00e9si jellemz\u0151k Multim\u00e9di\u00e1s elemek be\u00e1gyaz\u00e1sa A HTML \u00e9s CSS tov\u00e1bbi lehet\u0151s\u00e9gei","title":"HTML \u00e9s CSS"},{"location":"#szerveroldali-webprogramozas-php","text":"A kiszolg\u00e1l\u00f3- \u00e9s \u00fcgyf\u00e9loldali web programoz\u00e1s jellemz\u00e9se, kapcsolata, alkalmaz\u00e1si ter\u00fcletei A PHP nyelvi elemei \u0170rlapok kezel\u00e9se F\u00e1jlok haszn\u00e1lata \u00c1llapotok t\u00e1rol\u00e1sa. Menetk\u00f6vet\u00e9s Objektumorient\u00e1lts\u00e1g A PHP tov\u00e1bbi lehet\u0151s\u00e9gei","title":"Szerveroldali webprogramoz\u00e1s, PHP"},{"location":"#ajanlott-irodalom","text":"","title":"Aj\u00e1nlott irodalom"},{"location":"#html-es-css_1","text":"Jelen gyakorlati jegyzet Vancsics B\u00e9la \u00e1ltal gondozott gyakorlati jegyzet Abonyi-T\u00f3th Andor, ELTE IK: A weblapk\u00e9sz\u00edt\u00e9s technik\u00e1ja (HTML5, CSS3) \u00e9s ergon\u00f3mi\u00e1ja, elte.hu , tankonyvtar.hu HTML5 weboldalak k\u00e9sz\u00edt\u00e9se - webfejlesztes.gtportal.eu HTML \u00e9s CSS - Standardsmode.hu Web-fejleszt\u00e9s Holl\u00f3 Csaba: \u00dczleti webtechnol\u00f3gi\u00e1k , Typotex Kiad\u00f3, 2011. Virginia DeBolt: HTML \u00e9s CSS. Webszerkeszt\u00e9s st\u00edlusosan. Kiskapu Kft, 2005. (angol) HTML5 - MDN web docs (Mozilla) (angol) HTML5 Tutorial - w3schools.com (angol) Estelle Weyl: HTML5 v. XHTML5","title":"HTML \u00e9s CSS"},{"location":"#php","text":"Jelen gyakorlati jegyzet Vancsics B\u00e9la \u00e1ltal gondozott gyakorlati jegyzet Nagy Guszt\u00e1v: Web programoz\u00e1s , Webes szabv\u00e1nyok PHP WIKI k\u00f6nyv PHP k\u00e9zik\u00f6nyv (r\u00e9gebbi) G\u00e1l Tibor: Web programoz\u00e1s, M\u00fbegyetemi kiad\u00f3, 2006. Matt Zandstra: Tanuljuk meg a PHP5 haszn\u00e1lat\u00e1t 24 \u00f3ra alatt, Kiskapu Kiad\u00f3, 2005. Blake Schwendiman: PHP4 Fejleszt\u00f5k k\u00e9zik\u00f6nyve (1. + 2. k\u00f6tet), Panem Kft., Budapest, 2001. Peter Moulding: PHP halad\u00f3knak, Fekete K\u00f6nyv sorozat, Perfact-Pro Kft., 2002. Schlossnagle, George: PHP fejleszt\u00e9s fels\u0151fokon, Kiskapu Kft., 2004. Ben Laurie, Peter Laurie: Apache, Kossuth Kiad\u00f3, 2001. L\u00e1szl\u00f3 J\u00f3zsef: Dinamikus weboldalak, CGI programoz\u00e1s Windows \u00e9s Linux rendszerekben, ComputerBooks, Budapest, 2002. (angol) PHP 5 Tutorial - W3Schools (angol) PHP: Documentation php.net (angol) PHP: The Right Way phptherightway.com (angol) Learn PHP Online - Code School","title":"PHP"},{"location":"#az-elkeszult-jegyzetrol-hibak","text":"","title":"Az elk\u00e9sz\u00fclt jegyzetr\u0151l, hib\u00e1k"},{"location":"#hibak","text":"A jegyzet folyamatosan k\u00e9sz\u00fcl, \u00edgy el\u0151fordulhatnak benne apr\u00f3bb hib\u00e1k, hi\u00e1nyoss\u00e1gok, el\u00edr\u00e1sok. Ha valaki esetleg ilyet tal\u00e1lna, k\u00e9rem \u00edrjon a Cservenak.Bence[kukac]stud.u-szeged.hu c\u00edmre, hogy mihamarabb jav\u00edthassuk. A t\u00e1rgyi t\u00e9ved\u00e9sek jelent\u00e9s\u00e9\u00e9rt cser\u00e9be pluszpontok szerz\u00e9s\u00e9re van lehet\u0151s\u00e9g, gyakorlatvezet\u0151t\u0151l f\u00fcggetlen\u00fcl.","title":"Hib\u00e1k"},{"location":"#keszitok","text":"Cserven\u00e1k Bence","title":"K\u00e9sz\u00edt\u0151k"},{"location":"#jogi-nyilatkozat","text":"Nevezd meg! - Ne add el! - \u00cdgy add tov\u00e1bb! 4.0 Nemzetk\u00f6zi Gyors \u00f6sszefoglal\u00f3 a licenszr\u0151l, \u00e9s a teljes v\u00e1ltozat .","title":"Jogi nyilatkozat"},{"location":"menetrend/","text":"Gyakorlat sz\u00e1ma H\u00e9t A gyakorlat tematik\u00e1ja 1 2021.02.08-i h\u00e9t 2 2021.02.15-i h\u00e9t 3 2021.02.22-i h\u00e9t 4 2021.03.01-i h\u00e9t 5 2021.03.08-i h\u00e9t 6 2021.03.15-i h\u00e9t 7 2021.03.22-i h\u00e9t 8 2021.03.29-i h\u00e9t 9 2021.04.05-i h\u00e9t 10 2021.04.12-i h\u00e9t 11 2021.04.19-i h\u00e9t 12 2021.04.26-i h\u00e9t 13 2021.05.03-i h\u00e9t 14 2021.05.10-i h\u00e9t 15 2021.05.17-i h\u00e9t","title":"F\u00e9l\u00e9ves menetrend"},{"location":"gyakorlat/gyak1/","text":"1. gyakorlat \u00b6 A gyakorlat anyaga \u00b6 A k\u00f6vetelm\u00e9nyek ismertet\u00e9se. A kurzuson t\u00e1rgyalt h\u00e1rom nyelv (HTML, CSS \u00e9s PHP) \u00e1ltal\u00e1nos szerep\u00e9nek \u00e1ttekint\u00e9se, a HTML nyelv szintaxis\u00e1nak \u00e9s n\u00e9h\u00e1ny alapvet\u0151 elem\u00e9nek megismer\u00e9se. \u00c1ttekint\u00e9s \u00b6 A f\u00e9l\u00e9v sor\u00e1n a HTML, CSS \u00e9s PHP nyelvekkel fogunk megismerkedni. Az al\u00e1bbi t\u00e1bl\u00e1zatban r\u00f6viden \u00f6sszefoglaljuk ezeknek a nyelveknek az \u00e1ltal\u00e1nos szerep\u00e9t a webfejleszt\u00e9sben. HTML CSS PHP Micsoda? jel\u00f6l\u0151nyelv st\u00edlusle\u00edr\u00f3 nyelv szerveroldali szkriptnyelv Szerepe weboldalak tartalm\u00e1nak kialak\u00edt\u00e1sa, a tartalom struktur\u00e1l\u00e1sa weboldalak tartalm\u00e1nak form\u00e1z\u00e1sa tartalom dinamikus gener\u00e1l\u00e1sa, \u0171rlapfeldolgoz\u00e1s, adatb\u00e1zis-kezel\u00e9s, menetk\u00f6vet\u00e9s, f\u00e1jlkezel\u00e9s, OOP, ... HTML alapok I. \u00b6 Bevezet\u00e9s \u00b6 A HTML (HyperText Markup Language) egy le\u00edr\u00f3 nyelv, amelynek seg\u00edts\u00e9g\u00e9vel megmondhatjuk, hogy mi az, amit egy weboldalon l\u00e1tni szeretn\u00e9nk (pl. sz\u00f6vegek, k\u00e9pek, hivatkoz\u00e1sok, t\u00e1bl\u00e1zatok, multim\u00e9dia stb.). A HTML lehet\u0151s\u00e9get biztos\u00edt a weboldalak tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra is. Ezt k\u00fcl\u00f6nb\u00f6z\u0151 szakaszok, tartalmi egys\u00e9gek (pl. fejl\u00e9c, men\u00fcsor, f\u0151 tartalom, l\u00e1bl\u00e9c stb.) kialak\u00edt\u00e1s\u00e1val tehetj\u00fck meg. HTML k\u00f3d \u00edr\u00e1sa \u00b6 A HTML k\u00f3d \u00edr\u00e1sa roppant egyszer\u0171: a k\u00f3dot tetsz\u0151leges szerkeszt\u0151programba \u00edrjuk (pl. Gedit, Notepad++, Sublime Text, Webstorm, Visual Studio Code stb.) az \u00e1llom\u00e1nyt .html kiterjeszt\u00e9ssel mentj\u00fck el v\u00e9g\u00fcl a f\u00e1jlt megnyitjuk egy szimpatikus b\u00f6ng\u00e9sz\u0151vel, \u00e9s m\u00e1r l\u00e1thatjuk is az eredm\u00e9nyt. Megjegyz\u00e9s Ugyanazt a HTML k\u00f3dot k\u00fcl\u00f6nb\u00f6z\u0151 b\u00f6ng\u00e9sz\u0151k (illetve b\u00f6ng\u00e9sz\u0151verzi\u00f3k) elt\u00e9r\u0151 m\u00f3don jelen\u00edthetik meg. Szabv\u00e1nyok \u00b6 A weboldalak k\u00e9sz\u00edt\u00e9s\u00e9re vonatkoz\u00f3an a W3C (World Wide Web Consortium) nev\u0171 szervezet ad ki el\u0151\u00edr\u00e1sokat, szabv\u00e1nyokat. A fontosabb HTML szabv\u00e1nyok: HTML 4.01 (1999) XHTML 1.0 Strict (2000) a kor\u00e1bbi HTML 4 szabv\u00e1ny \"\u00fajra\u00edr\u00e1sa\" XML alapokon szigor\u00fa szab\u00e1lyok jellemzik HTML dokumentumok egys\u00e9gess\u00e9 t\u00e9tele, egyszer\u0171bb feldolgozhat\u00f3s\u00e1g programmal HTML5 (2014) kev\u00e9sb\u00e9 szigor\u00fa az XHTML 1.0 Strict-hez k\u00e9pest programmal valamelyest nehezebb feldolgozni sz\u00e1mos \u00fajdons\u00e1got tartalmaz el\u0151djeihez k\u00e9pest (pl. szemantikus elemek, multim\u00e9dia, grafikus elemek, \u00faj \u0171rlapmez\u0151 t\u00edpusok). A gyakorlaton a HTML5 \u00e9s CSS3 szabv\u00e1nyokkal fogunk foglalkozni. A webfejleszt\u00e9s sor\u00e1n \u00e9rdemes t\u00f6rekedn\u00fcnk arra, hogy az \u00e1ltalunk v\u00e1lasztott szabv\u00e1ny el\u0151\u00edr\u00e1sait betartsuk! Szabv\u00e1nyoss\u00e1g ellen\u0151rz\u00e9se \u00b6 Egy HTML vagy CSS f\u00e1jl szabv\u00e1nyoss\u00e1g\u00e1t legegyszer\u0171bben b\u00f6ng\u00e9sz\u0151 plug-inekkel vagy az al\u00e1bbi online valid\u00e1tor szoftverek seg\u00edts\u00e9g\u00e9vel ellen\u0151rizhetj\u00fck: HTML validator CSS validator . V\u00e1lasszuk a \"Validate by File Upload\" opci\u00f3t, majd t\u00f6lts\u00fck fel az ellen\u0151rizni k\u00edv\u00e1nt HTML f\u00e1jlt! Amennyiben az \u00e1ltalunk \u00edrt k\u00f3d nem szabv\u00e1nyos, a valid\u00e1tor k\u00fcl\u00f6nb\u00f6z\u0151 megjegyz\u00e9seket bocs\u00e1t rendelkez\u00e9s\u00fcnkre: A piros h\u00e1tter\u0171 Error -ok s\u00falyosabb valid\u00e1l\u00e1si hib\u00e1kat jelentenek, amiket mindenk\u00e9ppen jav\u00edtanunk kell. A hiba\u00fczenetb\u0151l egy kis angoltud\u00e1ssal egyszer\u0171en r\u00e1j\u00f6het\u00fcnk a probl\u00e9ma ok\u00e1ra (ha esetleg nem j\u00f6tt\u00f6k r\u00e1, nyugodtan keress\u00e9tek a gyakorlatvezet\u0151t\u00f6ket). A s\u00e1rga h\u00e1tter\u0171 Warning -ok kev\u00e9sb\u00e9 s\u00falyos figyelmeztet\u00e9sek, amelyek \u00e1ltal\u00e1ban megfontoland\u00f3ak. Ezeknek a marad\u00e9ktalan kijav\u00edt\u00e1sa viszont nem elv\u00e1rt ezen a kurzuson. P\u00e9lda: Egy valid\u00e1tor \u00e1ltal jelzett valid\u00e1l\u00e1si hiba \u00e9s figyelmeztet\u00e9s Tipp A beadand\u00f3 projekt szabv\u00e1nyoss\u00e1g\u00e1t is egyszer\u0171en ellen\u0151rizhetitek a valid\u00e1tor seg\u00edts\u00e9g\u00e9vel. HTML alapfogalmak \u00b6 Tagek \u00b6 A HTML f\u00e1jlok alapvet\u0151 \u00e9p\u00edt\u0151elemei a tagek (ejtsd: \"tegek\"). Ezek < \u00e9s > k\u00f6z\u00e9 \u00edrt, speci\u00e1lis jelent\u00e9ssel b\u00edr\u00f3 HTML objektumok. A HTML nyelv egy el\u0151re defini\u00e1lt tagk\u00e9szlettel rendelkezik. A legt\u00f6bb HTML tag p\u00e1ros tag , ami azt jelenti, hogy egy nyit\u00f3tagb\u0151l \u00e9s egy z\u00e1r\u00f3tagb\u0151l \u00e1ll. A z\u00e1r\u00f3taget \u00fagy k\u00e9pezz\u00fck a nyit\u00f3tagb\u0151l, hogy a tag neve el\u00e9, azaz k\u00f6zvetlen\u00fcl a < ut\u00e1n egy perjelet tesz\u00fcnk. Ilyen p\u00e1ros tag p\u00e9ld\u00e1ul a bekezd\u00e9sek besz\u00far\u00e1s\u00e1ra alkalmas <p> tag. 1 < p > Ide j\u00f6n valami sz\u00f6veg... </ p > Vannak viszont p\u00e1ratlan tagek (m\u00e1s n\u00e9ven \u00fcres tagek ) is, amelyek csak nyit\u00f3tagb\u0151l \u00e1llnak. Ilyen p\u00e9ld\u00e1ul a sort\u00f6r\u00e9s besz\u00far\u00e1s\u00e1ra alkalmas <br> tag. 1 Els\u0151 sor < br > M\u00e1sodik sor A p\u00e1ratlan tagek v\u00e9g\u00e9re opcion\u00e1lisan perjelet is tehet\u00fcnk (teh\u00e1t p\u00e9ld\u00e1ul <br> helyett azt is \u00edrhatjuk, hogy <br/> ). Ebben a jegyzetben minden p\u00e1ratlan tag eset\u00e9n kitessz\u00fck ezt a perjelet, noha ez a HTML5 szabv\u00e1nyban szabadon elhagyhat\u00f3. A HTML tageket lehet\u0151s\u00e9g\u00fcnk van egym\u00e1sba \u00e1gyazni. Ekkor fontos, hogy az egym\u00e1sba \u00e1gyazott tageket bel\u00fclr\u0151l kifel\u00e9 haladva kell lez\u00e1rnunk. P\u00e9lda: Tagek egym\u00e1sba \u00e1gyaz\u00e1sa: el\u0151sz\u00f6r lez\u00e1rjuk a legbels\u0151 <span> taget, majd az \u0151t be\u00e1gyaz\u00f3 <p> taget, v\u00e9g\u00fcl pedig a legk\u00fcls\u0151 <div> taget 1 < div >< p > Ide j\u00f6n valami < span > sz\u00f6veg... </ span ></ p ></ div > Attrib\u00fatumok \u00b6 A tagekhez tartozhatnak bizonyos speci\u00e1lis tulajdons\u00e1gok, \u00fagynevezett attrib\u00fatumok is, amelyekhez speci\u00e1lis \u00e9rt\u00e9keket rendelhet\u00fcnk. Az egyes tagekhez tartoz\u00f3 attrib\u00fatum-\u00e9rt\u00e9k p\u00e1rokat a nyit\u00f3tag neve ut\u00e1n \u00edrjuk, sz\u00f3k\u00f6zzel elv\u00e1lasztva. P\u00e9lda: Egy p\u00e1ros <a> tag, amely a href \u00e9s target attrib\u00fatumokkal rendelkezik 1 < a href = \"https://www.google.com\" target = \"_blank\" > Google </ a > P\u00e9lda: Egy p\u00e1ratlan <img> tag, amely az src , alt \u00e9s width attrib\u00fatumokkal rendelkezik 1 < img src = \"cat.jpg\" alt = \"Macska\" width = \"100\" /> A HTML dokumentum fel\u00e9p\u00edt\u00e9se \u00b6 Minden HTML dokumentumunk meg\u00edr\u00e1sa az al\u00e1bbi k\u00f3ddal fog kezd\u0151dni: 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Weboldal c\u00edme... </ title > < meta charset = \"UTF-8\" /> </ head > < body > </ body > </ html > Tipp A fenti (vagy ahhoz hasonl\u00f3) alap HTML k\u00f3dot n\u00e9h\u00e1ny szerkeszt\u0151programmal le is gener\u00e1ltathatjuk: A WebStorm automatikusan gener\u00e1lja a k\u00f3dot HTML f\u00e1jlok eset\u00e9n Sublime Text-ben leg\u00e9pelj\u00fck, hogy html , majd k\u00f6zvetlen ut\u00e1na nyomunk egy Tab -ot Visual Studio Code-ban le\u00edrunk egy felki\u00e1lt\u00f3jelet ( ! ), majd k\u00f6zvetlen ut\u00e1na nyomunk egy Tab -ot. N\u00e9zz\u00fck meg, hogy az egyes sorok mit is jelentenek a k\u00f3dban! <!DOCTYPE html> : k\u00f6z\u00f6lj\u00fck a b\u00f6ng\u00e9sz\u0151vel, hogy a HTML5 szabv\u00e1ny szerint \u00edrtuk a k\u00f3dot <html>...</html> : ez \u00edrja le mag\u00e1t a weboldalt a lang attrib\u00fatummal megadhatjuk a weboldalon szerepl\u0151 tartalom nyelv\u00e9t (pl. hu = magyar, en = angol, de = n\u00e9met stb.) <head>...</head> : fejr\u00e9sz - az oldalon nem megjelen\u0151 metainform\u00e1ci\u00f3k, f\u00e1jlcsatol\u00e1sok, CSS- \u00e9s szkriptbe\u00e1gyaz\u00e1sok helye <title>...</title> : a b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 c\u00edm <meta charset=\"UTF-8\"/> : UTF-8 karakterk\u00f3dol\u00e1s be\u00e1ll\u00edt\u00e1sa <body>...</body> : t\u00f6rzsr\u00e9sz - a megjelen\u0151 tartalom, struktur\u00e1lis elemek \u00e9s szkriptek helye Kommentek \u00b6 A HTML f\u00e1jlokba lehet\u0151s\u00e9g\u00fcnk van kommenteket (megjegyz\u00e9seket) \u00edrni az al\u00e1bbi szintaxissal: 1 <!-- Ez egy komment a HTML k\u00f3dban --> A kommentek sz\u00f6vege a weboldalon term\u00e9szetesen nem jelenik meg, viszont a weboldal HTML forr\u00e1sk\u00f3dj\u00e1ban (amit b\u00f6ng\u00e9sz\u0151ben a Ctrl + Shift + I billenty\u0171kombin\u00e1ci\u00f3val egyszer\u0171en megtekinthet\u00fcnk) ezek a kommentek l\u00e1that\u00f3ak lesznek. A head fontosabb tagjei \u00b6 Az al\u00e1bbiakban felsoroljuk a HTML dokumentum fejr\u00e9sz\u00e9ben ( <head> \u00e9s </head> k\u00f6z\u00f6tt) haszn\u00e1latos fontosabb tageket. <title>...</title> : a b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 c\u00edm (ezt mindig adjuk meg!) <meta charset=\"UTF-8\"/> : UTF-8 karakterk\u00f3dol\u00e1s be\u00e1ll\u00edt\u00e1sa (ezt mindig adjuk meg!) <meta name=\"author\" content=\"Gipsz Jakab\"/> : a weboldal szerz\u0151je <meta name=\"description\" content=\"Jakab blogoldala\"/> : a weboldal le\u00edr\u00e1sa <meta name=\"keywords\" content=\"webtervez\u00e9s,webterv,HTML,CSS,PHP\"/> : kulcsszavak megad\u00e1sa (c\u00e9lja a tal\u00e1lati es\u00e9lyeink jav\u00edt\u00e1sa) <link rel=\"stylesheet\" href=\"valami.css\"/> : k\u00fcls\u0151 CSS f\u00e1jl be\u00e1gyaz\u00e1sa <link rel=\"icon\" href=\"valami.png\"/> : b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 ikon <style>...</style> : CSS form\u00e1z\u00e1s besz\u00far\u00e1sa <script>...</script> : szkript (pl. JavaScript) besz\u00far\u00e1sa A body fontosabb tagjei \u00b6 Az al\u00e1bbiakban megismerked\u00fcnk n\u00e9h\u00e1ny, a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9ben ( <body> \u00e9s </body> k\u00f6z\u00f6tt) haszn\u00e1latos taggel. Bekezd\u00e9sek, c\u00edmsorok \u00b6 <p>...</p> : bekezd\u00e9s <h1>...</h1> : 1. szint\u0171 c\u00edmsor (legfontosabb) <h2>...</h2> : 2. szint\u0171 c\u00edmsor <h3>...</h3> : 3. szint\u0171 c\u00edmsor <h4>...</h4> : 4. szint\u0171 c\u00edmsor <h5>...</h5> : 5. szint\u0171 c\u00edmsor <h6>...</h6> : 6. szint\u0171 c\u00edmsor (legkev\u00e9sb\u00e9 fontos) P\u00e9lda: C\u00edmsorokat \u00e9s egy bekezd\u00e9st tartalmaz\u00f3 HTML k\u00f3d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Bekezd\u00e9sek, c\u00edmsorok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > 1. szint\u0171 c\u00edmsor </ h1 > < h2 > 2. szint\u0171 c\u00edmsor </ h2 > < h3 > 3. szint\u0171 c\u00edmsor </ h3 > < h4 > 4. szint\u0171 c\u00edmsor </ h4 > < h5 > 5. szint\u0171 c\u00edmsor </ h5 > < h6 > 6. szint\u0171 c\u00edmsor </ h6 > < p > Ez egy bekezd\u00e9s... </ p > </ body > </ html > A fenti k\u00f3dot tartalmaz\u00f3 HTML f\u00e1jlt b\u00f6ng\u00e9sz\u0151ben megnyitva a k\u00f6vetkez\u0151 kimenetet kapjuk: Karakterentit\u00e1sok \u00b6 Mivel HTML-ben vannak speci\u00e1lis c\u00e9lokra lefoglalt karakterek (pl. a < \u00e9s > karakterek), ez\u00e9rt ezeket valahogy m\u00e1shogy kell \u00edrnunk, ha meg szeretn\u00e9nk \u0151ket jelen\u00edteni a weboldalunkon. Az ilyen karakterek megad\u00e1s\u00e1ra szolg\u00e1lnak a karakterentit\u00e1sok . N\u00e9h\u00e1ny gyakrabban haszn\u00e1lt karakterentit\u00e1s (teljes lista itt ): Karakterentit\u00e1s Megjelen\u00edt\u00e9s Elnevez\u00e9s nbsp; sz\u00f3k\u00f6z &lt; < kisebb mint &gt; > nagyobb mint &amp; & \u00e9s-jel apos; ' aposztr\u00f3f &quot; \" id\u00e9z\u0151jel &copy; \u00a9 copyright P\u00e9lda: Ha egy bekezd\u00e9sbe azt szeretn\u00e9nk \u00edrni, hogy 5 < 10 > 8 , akkor ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg karakterentit\u00e1sok haszn\u00e1lat\u00e1val 1 < p > 5 &lt; 10 &gt; 8 </ p > K\u00e9pek \u00b6 Ha a weboldalunkra egy k\u00e9pet szeretn\u00e9nk besz\u00farni, akkor ezt az <img/> nev\u0171 p\u00e1ratlan taggel tudjuk megtenni. A tag fontosabb attrib\u00fatumai: src : a k\u00e9p el\u00e9r\u00e9si \u00fatvonala alt : helyettes\u00edt\u0151 sz\u00f6veg, ha a k\u00e9p bet\u00f6lt\u00e9se sikertelen title : a k\u00e9p c\u00edme, ami akkor jelenik meg, ha a kurzor a k\u00e9p f\u00f6l\u00f6tt \u00e1ll width : a k\u00e9p sz\u00e9less\u00e9ge (pixelben) height : a k\u00e9p magass\u00e1ga (pixelben). Ha a width \u00e9s height attrib\u00fatumok k\u00f6z\u00fcl csak az egyiket adjuk meg, akkor a m\u00e1sik a k\u00e9p eredeti m\u00e9retar\u00e1nyaib\u00f3l sz\u00e1mol\u00f3dik. Teh\u00e1t p\u00e9ld\u00e1ul ha egy 400x300-as (400 pixel sz\u00e9les, 300 pixel magas) k\u00e9p sz\u00e9less\u00e9g\u00e9t 800 pixelre \u00e1ll\u00edtjuk (megdupl\u00e1zzuk), akkor a magass\u00e1ga automatikusan 600 pixel lesz. P\u00e9lda: A HTML f\u00e1jllal egy mapp\u00e1ban van egy img mappa, amiben tal\u00e1lhat\u00f3 egy cat.jpg k\u00e9p. Sz\u00farjuk be a k\u00e9pet a weboldalunkra \u00fagy, hogy a sz\u00e9less\u00e9ge 400 pixel legyen! 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > K\u00e9p besz\u00far\u00e1sa </ title > < meta charset = \"UTF-8\" /> </ head > < body > < img src = \"img/cat.jpg\" alt = \"Macska\" title = \"Ez egy macska\" width = \"400\" /> </ body > </ html > Az id \u00e9s class attrib\u00fatumok \u00b6 Minden HTML objektumnak adhat\u00f3 egyedi azonos\u00edt\u00f3, illetve minden HTML objektum csoportos\u00edthat\u00f3 oszt\u00e1lyokba. Ezek alapvet\u0151en majd CSS-ben lesznek hasznosak, amikor egy-egy objektumra vagy objektumok csoportj\u00e1ra szeretn\u00e9nk hivatkozni. Az egyedi azonos\u00edt\u00f3 ( id attrib\u00fatum) egy adott HTML elem azonos\u00edt\u00e1s\u00e1ra szolg\u00e1l. \u00c9rt\u00e9ke a dokumentumon bel\u00fcl szab\u00e1lyosan egyedi kell, hogy legyen, emellett az attrib\u00fatum \u00e9rt\u00e9ke nem tartalmazhat sz\u00f3k\u00f6zt. Az oszt\u00e1ly ( class attrib\u00fatum) jellemz\u0151en t\u00f6bb HTML elem csoportos\u00edt\u00e1s\u00e1ra haszn\u00e1latos. A class attrib\u00fatum \u00e9rt\u00e9ke nem kell, hogy egyedi legyen (s\u0151t \u00e1ltal\u00e1ban nem az). \u00c9rt\u00e9k\u00e9\u00fcl sz\u00f3k\u00f6zzel elv\u00e1lasztva megadhat\u00f3 t\u00f6bb oszt\u00e1ly neve is, amihez az adott elem tartozik. P\u00e9lda: id \u00e9s class attrib\u00fatumok haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > id, class </ title > < meta charset = \"UTF-8\" /> </ head > < body > <!-- Egy \"asd\" egyedi azonos\u00edt\u00f3val rendelkez\u0151 bekezd\u00e9s, ami a \"foo\" oszt\u00e1lyhoz tartozik --> < p id = \"asd\" class = \"foo\" > Ide j\u00f6n valami sz\u00f6veg... </ p > <!-- Egy k\u00e9p, ami a \"foo\" \u00e9s \"bar\" oszt\u00e1lyokhoz tartozik --> < img class = \"foo bar\" src = \"my-image.png\" alt = \"Valami k\u00e9p...\" /> </ body > </ html > Hivatkoz\u00e1sok (Linkek) \u00b6 Hivatkoz\u00e1sokat (avagy linkeket) az <a>...</a> p\u00e1ros tag seg\u00edts\u00e9g\u00e9vel sz\u00farhatunk be a weboldalunkra. A tag fontosabb attrib\u00fatumai: href : c\u00e9l, ahova a hivatkoz\u00e1sra kattintva jutunk lehet egy m\u00e1sik weboldal - pl. <a href=\"https://www.google.com\">Google</a> lehet egy m\u00e1sik f\u00e1jl - pl. <a href=\"bevasarlolista.txt\">Bev\u00e1s\u00e1rl\u00f3lista</a> lehet lapon bel\u00fcli hivatkoz\u00e1s - pl. <a href=\"#top\">Vissza a tetej\u00e9re</a> (ez az id=\"top\" attrib\u00fatummal rendelkez\u0151 elemre mutat) target : hol legyen megnyitva a hivatkozott c\u00e9l _self : ugyanott, ahol r\u00e1kattintottunk (alap\u00e9rtelmezett) _blank : \u00faj lapon vagy ablakban title : hivatkoz\u00e1s c\u00edme, ami akkor jelenik meg, ha a kurzor a hivatkoz\u00e1s f\u00f6l\u00f6tt \u00e1ll. P\u00e9lda: Hivatkoz\u00e1sok besz\u00far\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Hivatkoz\u00e1sok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 id = \"top-of-page\" > Hivatkoz\u00e1sok (linkek) </ h1 > <!-- Egy hivatkoz\u00e1s, ami egy m\u00e1sik weboldalt nyit meg egy \u00faj lapon --> < p >< a href = \"https://youtu.be/dQw4w9WgXcQ\" target = \"_blank\" > Valami klassz dolog </ a ></ p > <!-- Egy hivatkoz\u00e1s, ami egy k\u00e9pet nyit meg ugyanott, ahol a linkre kattintottunk --> < a href = \"img/cat.jpg\" title = \"Megtekint\u00e9s nagyobb m\u00e9retben\" > < img src = \"img/cat.jpg\" alt = \"Macska\" width = \"400\" /> </ a > <!-- Egy hivatkoz\u00e1s, ami az id=\"top-of-page\" attrib\u00fatummal rendelkez\u0151 elemre mutat --> < p >< a href = \"#top-of-page\" > Vissza a lap tetej\u00e9re </ a ></ p > </ body > </ html > Szakaszok \u00b6 HTML-ben lehet\u0151s\u00e9g\u00fcnk van a weboldal tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra is. Ezt szakaszok, tartalmi egys\u00e9gek kialak\u00edt\u00e1s\u00e1val tehetj\u00fck meg. A <div>...</div> \u00e1ltal\u00e1nos c\u00e9l\u00fa blokkszint\u0171 (block) szakasz. A blokkszint\u0171 elemek mindig \u00faj sorban kezd\u0151dnek, \u00e9s kihaszn\u00e1lj\u00e1k a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get. A <span>...</span> \u00e1tal\u00e1nos c\u00e9l\u00fa sorszint\u0171 (inline) szakasz. A sorszint\u0171 elemek nem kezd\u0151dnek \u00faj sorban, illetve sz\u00e9less\u00e9g\u00fck csak akkora, mint amekkora helyre sz\u00fcks\u00e9g\u00fck van. P\u00e9lda: A <span> \u00e9s <div> tagek haszn\u00e1lata (a k\u00f3d kimenet\u00e9ben a szeml\u00e9letess\u00e9g kedv\u00e9\u00e9rt vil\u00e1gosk\u00e9k h\u00e1tt\u00e9rrel jel\u00f6lt\u00fck a k\u00e9t tag \u00e1ltal l\u00e9trehozott szakaszokat) 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Szakaszok </ title > < meta charset = \"UTF-8\" /> </ head > < body > A < span > span tag </ span > \u00e9s a < div > div tag </ div > szakaszok kialak\u00edt\u00e1s\u00e1ra alkalmas. </ body > </ html >","title":"1. gyakorlat"},{"location":"gyakorlat/gyak1/#1-gyakorlat","text":"","title":"1. gyakorlat"},{"location":"gyakorlat/gyak1/#a-gyakorlat-anyaga","text":"A k\u00f6vetelm\u00e9nyek ismertet\u00e9se. A kurzuson t\u00e1rgyalt h\u00e1rom nyelv (HTML, CSS \u00e9s PHP) \u00e1ltal\u00e1nos szerep\u00e9nek \u00e1ttekint\u00e9se, a HTML nyelv szintaxis\u00e1nak \u00e9s n\u00e9h\u00e1ny alapvet\u0151 elem\u00e9nek megismer\u00e9se.","title":"A gyakorlat anyaga"},{"location":"gyakorlat/gyak1/#attekintes","text":"A f\u00e9l\u00e9v sor\u00e1n a HTML, CSS \u00e9s PHP nyelvekkel fogunk megismerkedni. Az al\u00e1bbi t\u00e1bl\u00e1zatban r\u00f6viden \u00f6sszefoglaljuk ezeknek a nyelveknek az \u00e1ltal\u00e1nos szerep\u00e9t a webfejleszt\u00e9sben. HTML CSS PHP Micsoda? jel\u00f6l\u0151nyelv st\u00edlusle\u00edr\u00f3 nyelv szerveroldali szkriptnyelv Szerepe weboldalak tartalm\u00e1nak kialak\u00edt\u00e1sa, a tartalom struktur\u00e1l\u00e1sa weboldalak tartalm\u00e1nak form\u00e1z\u00e1sa tartalom dinamikus gener\u00e1l\u00e1sa, \u0171rlapfeldolgoz\u00e1s, adatb\u00e1zis-kezel\u00e9s, menetk\u00f6vet\u00e9s, f\u00e1jlkezel\u00e9s, OOP, ...","title":"\u00c1ttekint\u00e9s"},{"location":"gyakorlat/gyak1/#html-alapok-i","text":"","title":"HTML alapok I."},{"location":"gyakorlat/gyak1/#bevezetes","text":"A HTML (HyperText Markup Language) egy le\u00edr\u00f3 nyelv, amelynek seg\u00edts\u00e9g\u00e9vel megmondhatjuk, hogy mi az, amit egy weboldalon l\u00e1tni szeretn\u00e9nk (pl. sz\u00f6vegek, k\u00e9pek, hivatkoz\u00e1sok, t\u00e1bl\u00e1zatok, multim\u00e9dia stb.). A HTML lehet\u0151s\u00e9get biztos\u00edt a weboldalak tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra is. Ezt k\u00fcl\u00f6nb\u00f6z\u0151 szakaszok, tartalmi egys\u00e9gek (pl. fejl\u00e9c, men\u00fcsor, f\u0151 tartalom, l\u00e1bl\u00e9c stb.) kialak\u00edt\u00e1s\u00e1val tehetj\u00fck meg.","title":"Bevezet\u00e9s"},{"location":"gyakorlat/gyak1/#html-kod-irasa","text":"A HTML k\u00f3d \u00edr\u00e1sa roppant egyszer\u0171: a k\u00f3dot tetsz\u0151leges szerkeszt\u0151programba \u00edrjuk (pl. Gedit, Notepad++, Sublime Text, Webstorm, Visual Studio Code stb.) az \u00e1llom\u00e1nyt .html kiterjeszt\u00e9ssel mentj\u00fck el v\u00e9g\u00fcl a f\u00e1jlt megnyitjuk egy szimpatikus b\u00f6ng\u00e9sz\u0151vel, \u00e9s m\u00e1r l\u00e1thatjuk is az eredm\u00e9nyt. Megjegyz\u00e9s Ugyanazt a HTML k\u00f3dot k\u00fcl\u00f6nb\u00f6z\u0151 b\u00f6ng\u00e9sz\u0151k (illetve b\u00f6ng\u00e9sz\u0151verzi\u00f3k) elt\u00e9r\u0151 m\u00f3don jelen\u00edthetik meg.","title":"HTML k\u00f3d \u00edr\u00e1sa"},{"location":"gyakorlat/gyak1/#szabvanyok","text":"A weboldalak k\u00e9sz\u00edt\u00e9s\u00e9re vonatkoz\u00f3an a W3C (World Wide Web Consortium) nev\u0171 szervezet ad ki el\u0151\u00edr\u00e1sokat, szabv\u00e1nyokat. A fontosabb HTML szabv\u00e1nyok: HTML 4.01 (1999) XHTML 1.0 Strict (2000) a kor\u00e1bbi HTML 4 szabv\u00e1ny \"\u00fajra\u00edr\u00e1sa\" XML alapokon szigor\u00fa szab\u00e1lyok jellemzik HTML dokumentumok egys\u00e9gess\u00e9 t\u00e9tele, egyszer\u0171bb feldolgozhat\u00f3s\u00e1g programmal HTML5 (2014) kev\u00e9sb\u00e9 szigor\u00fa az XHTML 1.0 Strict-hez k\u00e9pest programmal valamelyest nehezebb feldolgozni sz\u00e1mos \u00fajdons\u00e1got tartalmaz el\u0151djeihez k\u00e9pest (pl. szemantikus elemek, multim\u00e9dia, grafikus elemek, \u00faj \u0171rlapmez\u0151 t\u00edpusok). A gyakorlaton a HTML5 \u00e9s CSS3 szabv\u00e1nyokkal fogunk foglalkozni. A webfejleszt\u00e9s sor\u00e1n \u00e9rdemes t\u00f6rekedn\u00fcnk arra, hogy az \u00e1ltalunk v\u00e1lasztott szabv\u00e1ny el\u0151\u00edr\u00e1sait betartsuk!","title":"Szabv\u00e1nyok"},{"location":"gyakorlat/gyak1/#szabvanyossag-ellenorzese","text":"Egy HTML vagy CSS f\u00e1jl szabv\u00e1nyoss\u00e1g\u00e1t legegyszer\u0171bben b\u00f6ng\u00e9sz\u0151 plug-inekkel vagy az al\u00e1bbi online valid\u00e1tor szoftverek seg\u00edts\u00e9g\u00e9vel ellen\u0151rizhetj\u00fck: HTML validator CSS validator . V\u00e1lasszuk a \"Validate by File Upload\" opci\u00f3t, majd t\u00f6lts\u00fck fel az ellen\u0151rizni k\u00edv\u00e1nt HTML f\u00e1jlt! Amennyiben az \u00e1ltalunk \u00edrt k\u00f3d nem szabv\u00e1nyos, a valid\u00e1tor k\u00fcl\u00f6nb\u00f6z\u0151 megjegyz\u00e9seket bocs\u00e1t rendelkez\u00e9s\u00fcnkre: A piros h\u00e1tter\u0171 Error -ok s\u00falyosabb valid\u00e1l\u00e1si hib\u00e1kat jelentenek, amiket mindenk\u00e9ppen jav\u00edtanunk kell. A hiba\u00fczenetb\u0151l egy kis angoltud\u00e1ssal egyszer\u0171en r\u00e1j\u00f6het\u00fcnk a probl\u00e9ma ok\u00e1ra (ha esetleg nem j\u00f6tt\u00f6k r\u00e1, nyugodtan keress\u00e9tek a gyakorlatvezet\u0151t\u00f6ket). A s\u00e1rga h\u00e1tter\u0171 Warning -ok kev\u00e9sb\u00e9 s\u00falyos figyelmeztet\u00e9sek, amelyek \u00e1ltal\u00e1ban megfontoland\u00f3ak. Ezeknek a marad\u00e9ktalan kijav\u00edt\u00e1sa viszont nem elv\u00e1rt ezen a kurzuson. P\u00e9lda: Egy valid\u00e1tor \u00e1ltal jelzett valid\u00e1l\u00e1si hiba \u00e9s figyelmeztet\u00e9s Tipp A beadand\u00f3 projekt szabv\u00e1nyoss\u00e1g\u00e1t is egyszer\u0171en ellen\u0151rizhetitek a valid\u00e1tor seg\u00edts\u00e9g\u00e9vel.","title":"Szabv\u00e1nyoss\u00e1g ellen\u0151rz\u00e9se"},{"location":"gyakorlat/gyak1/#html-alapfogalmak","text":"","title":"HTML alapfogalmak"},{"location":"gyakorlat/gyak1/#tagek","text":"A HTML f\u00e1jlok alapvet\u0151 \u00e9p\u00edt\u0151elemei a tagek (ejtsd: \"tegek\"). Ezek < \u00e9s > k\u00f6z\u00e9 \u00edrt, speci\u00e1lis jelent\u00e9ssel b\u00edr\u00f3 HTML objektumok. A HTML nyelv egy el\u0151re defini\u00e1lt tagk\u00e9szlettel rendelkezik. A legt\u00f6bb HTML tag p\u00e1ros tag , ami azt jelenti, hogy egy nyit\u00f3tagb\u0151l \u00e9s egy z\u00e1r\u00f3tagb\u0151l \u00e1ll. A z\u00e1r\u00f3taget \u00fagy k\u00e9pezz\u00fck a nyit\u00f3tagb\u0151l, hogy a tag neve el\u00e9, azaz k\u00f6zvetlen\u00fcl a < ut\u00e1n egy perjelet tesz\u00fcnk. Ilyen p\u00e1ros tag p\u00e9ld\u00e1ul a bekezd\u00e9sek besz\u00far\u00e1s\u00e1ra alkalmas <p> tag. 1 < p > Ide j\u00f6n valami sz\u00f6veg... </ p > Vannak viszont p\u00e1ratlan tagek (m\u00e1s n\u00e9ven \u00fcres tagek ) is, amelyek csak nyit\u00f3tagb\u0151l \u00e1llnak. Ilyen p\u00e9ld\u00e1ul a sort\u00f6r\u00e9s besz\u00far\u00e1s\u00e1ra alkalmas <br> tag. 1 Els\u0151 sor < br > M\u00e1sodik sor A p\u00e1ratlan tagek v\u00e9g\u00e9re opcion\u00e1lisan perjelet is tehet\u00fcnk (teh\u00e1t p\u00e9ld\u00e1ul <br> helyett azt is \u00edrhatjuk, hogy <br/> ). Ebben a jegyzetben minden p\u00e1ratlan tag eset\u00e9n kitessz\u00fck ezt a perjelet, noha ez a HTML5 szabv\u00e1nyban szabadon elhagyhat\u00f3. A HTML tageket lehet\u0151s\u00e9g\u00fcnk van egym\u00e1sba \u00e1gyazni. Ekkor fontos, hogy az egym\u00e1sba \u00e1gyazott tageket bel\u00fclr\u0151l kifel\u00e9 haladva kell lez\u00e1rnunk. P\u00e9lda: Tagek egym\u00e1sba \u00e1gyaz\u00e1sa: el\u0151sz\u00f6r lez\u00e1rjuk a legbels\u0151 <span> taget, majd az \u0151t be\u00e1gyaz\u00f3 <p> taget, v\u00e9g\u00fcl pedig a legk\u00fcls\u0151 <div> taget 1 < div >< p > Ide j\u00f6n valami < span > sz\u00f6veg... </ span ></ p ></ div >","title":"Tagek"},{"location":"gyakorlat/gyak1/#attributumok","text":"A tagekhez tartozhatnak bizonyos speci\u00e1lis tulajdons\u00e1gok, \u00fagynevezett attrib\u00fatumok is, amelyekhez speci\u00e1lis \u00e9rt\u00e9keket rendelhet\u00fcnk. Az egyes tagekhez tartoz\u00f3 attrib\u00fatum-\u00e9rt\u00e9k p\u00e1rokat a nyit\u00f3tag neve ut\u00e1n \u00edrjuk, sz\u00f3k\u00f6zzel elv\u00e1lasztva. P\u00e9lda: Egy p\u00e1ros <a> tag, amely a href \u00e9s target attrib\u00fatumokkal rendelkezik 1 < a href = \"https://www.google.com\" target = \"_blank\" > Google </ a > P\u00e9lda: Egy p\u00e1ratlan <img> tag, amely az src , alt \u00e9s width attrib\u00fatumokkal rendelkezik 1 < img src = \"cat.jpg\" alt = \"Macska\" width = \"100\" />","title":"Attrib\u00fatumok"},{"location":"gyakorlat/gyak1/#a-html-dokumentum-felepitese","text":"Minden HTML dokumentumunk meg\u00edr\u00e1sa az al\u00e1bbi k\u00f3ddal fog kezd\u0151dni: 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Weboldal c\u00edme... </ title > < meta charset = \"UTF-8\" /> </ head > < body > </ body > </ html > Tipp A fenti (vagy ahhoz hasonl\u00f3) alap HTML k\u00f3dot n\u00e9h\u00e1ny szerkeszt\u0151programmal le is gener\u00e1ltathatjuk: A WebStorm automatikusan gener\u00e1lja a k\u00f3dot HTML f\u00e1jlok eset\u00e9n Sublime Text-ben leg\u00e9pelj\u00fck, hogy html , majd k\u00f6zvetlen ut\u00e1na nyomunk egy Tab -ot Visual Studio Code-ban le\u00edrunk egy felki\u00e1lt\u00f3jelet ( ! ), majd k\u00f6zvetlen ut\u00e1na nyomunk egy Tab -ot. N\u00e9zz\u00fck meg, hogy az egyes sorok mit is jelentenek a k\u00f3dban! <!DOCTYPE html> : k\u00f6z\u00f6lj\u00fck a b\u00f6ng\u00e9sz\u0151vel, hogy a HTML5 szabv\u00e1ny szerint \u00edrtuk a k\u00f3dot <html>...</html> : ez \u00edrja le mag\u00e1t a weboldalt a lang attrib\u00fatummal megadhatjuk a weboldalon szerepl\u0151 tartalom nyelv\u00e9t (pl. hu = magyar, en = angol, de = n\u00e9met stb.) <head>...</head> : fejr\u00e9sz - az oldalon nem megjelen\u0151 metainform\u00e1ci\u00f3k, f\u00e1jlcsatol\u00e1sok, CSS- \u00e9s szkriptbe\u00e1gyaz\u00e1sok helye <title>...</title> : a b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 c\u00edm <meta charset=\"UTF-8\"/> : UTF-8 karakterk\u00f3dol\u00e1s be\u00e1ll\u00edt\u00e1sa <body>...</body> : t\u00f6rzsr\u00e9sz - a megjelen\u0151 tartalom, struktur\u00e1lis elemek \u00e9s szkriptek helye","title":"A HTML dokumentum fel\u00e9p\u00edt\u00e9se"},{"location":"gyakorlat/gyak1/#kommentek","text":"A HTML f\u00e1jlokba lehet\u0151s\u00e9g\u00fcnk van kommenteket (megjegyz\u00e9seket) \u00edrni az al\u00e1bbi szintaxissal: 1 <!-- Ez egy komment a HTML k\u00f3dban --> A kommentek sz\u00f6vege a weboldalon term\u00e9szetesen nem jelenik meg, viszont a weboldal HTML forr\u00e1sk\u00f3dj\u00e1ban (amit b\u00f6ng\u00e9sz\u0151ben a Ctrl + Shift + I billenty\u0171kombin\u00e1ci\u00f3val egyszer\u0171en megtekinthet\u00fcnk) ezek a kommentek l\u00e1that\u00f3ak lesznek.","title":"Kommentek"},{"location":"gyakorlat/gyak1/#a-head-fontosabb-tagjei","text":"Az al\u00e1bbiakban felsoroljuk a HTML dokumentum fejr\u00e9sz\u00e9ben ( <head> \u00e9s </head> k\u00f6z\u00f6tt) haszn\u00e1latos fontosabb tageket. <title>...</title> : a b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 c\u00edm (ezt mindig adjuk meg!) <meta charset=\"UTF-8\"/> : UTF-8 karakterk\u00f3dol\u00e1s be\u00e1ll\u00edt\u00e1sa (ezt mindig adjuk meg!) <meta name=\"author\" content=\"Gipsz Jakab\"/> : a weboldal szerz\u0151je <meta name=\"description\" content=\"Jakab blogoldala\"/> : a weboldal le\u00edr\u00e1sa <meta name=\"keywords\" content=\"webtervez\u00e9s,webterv,HTML,CSS,PHP\"/> : kulcsszavak megad\u00e1sa (c\u00e9lja a tal\u00e1lati es\u00e9lyeink jav\u00edt\u00e1sa) <link rel=\"stylesheet\" href=\"valami.css\"/> : k\u00fcls\u0151 CSS f\u00e1jl be\u00e1gyaz\u00e1sa <link rel=\"icon\" href=\"valami.png\"/> : b\u00f6ng\u00e9sz\u0151f\u00fcl\u00f6n megjelen\u0151 ikon <style>...</style> : CSS form\u00e1z\u00e1s besz\u00far\u00e1sa <script>...</script> : szkript (pl. JavaScript) besz\u00far\u00e1sa","title":"A head fontosabb tagjei"},{"location":"gyakorlat/gyak1/#a-body-fontosabb-tagjei","text":"Az al\u00e1bbiakban megismerked\u00fcnk n\u00e9h\u00e1ny, a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9ben ( <body> \u00e9s </body> k\u00f6z\u00f6tt) haszn\u00e1latos taggel.","title":"A body fontosabb tagjei"},{"location":"gyakorlat/gyak1/#bekezdesek-cimsorok","text":"<p>...</p> : bekezd\u00e9s <h1>...</h1> : 1. szint\u0171 c\u00edmsor (legfontosabb) <h2>...</h2> : 2. szint\u0171 c\u00edmsor <h3>...</h3> : 3. szint\u0171 c\u00edmsor <h4>...</h4> : 4. szint\u0171 c\u00edmsor <h5>...</h5> : 5. szint\u0171 c\u00edmsor <h6>...</h6> : 6. szint\u0171 c\u00edmsor (legkev\u00e9sb\u00e9 fontos) P\u00e9lda: C\u00edmsorokat \u00e9s egy bekezd\u00e9st tartalmaz\u00f3 HTML k\u00f3d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Bekezd\u00e9sek, c\u00edmsorok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > 1. szint\u0171 c\u00edmsor </ h1 > < h2 > 2. szint\u0171 c\u00edmsor </ h2 > < h3 > 3. szint\u0171 c\u00edmsor </ h3 > < h4 > 4. szint\u0171 c\u00edmsor </ h4 > < h5 > 5. szint\u0171 c\u00edmsor </ h5 > < h6 > 6. szint\u0171 c\u00edmsor </ h6 > < p > Ez egy bekezd\u00e9s... </ p > </ body > </ html > A fenti k\u00f3dot tartalmaz\u00f3 HTML f\u00e1jlt b\u00f6ng\u00e9sz\u0151ben megnyitva a k\u00f6vetkez\u0151 kimenetet kapjuk:","title":"Bekezd\u00e9sek, c\u00edmsorok"},{"location":"gyakorlat/gyak1/#karakterentitasok","text":"Mivel HTML-ben vannak speci\u00e1lis c\u00e9lokra lefoglalt karakterek (pl. a < \u00e9s > karakterek), ez\u00e9rt ezeket valahogy m\u00e1shogy kell \u00edrnunk, ha meg szeretn\u00e9nk \u0151ket jelen\u00edteni a weboldalunkon. Az ilyen karakterek megad\u00e1s\u00e1ra szolg\u00e1lnak a karakterentit\u00e1sok . N\u00e9h\u00e1ny gyakrabban haszn\u00e1lt karakterentit\u00e1s (teljes lista itt ): Karakterentit\u00e1s Megjelen\u00edt\u00e9s Elnevez\u00e9s nbsp; sz\u00f3k\u00f6z &lt; < kisebb mint &gt; > nagyobb mint &amp; & \u00e9s-jel apos; ' aposztr\u00f3f &quot; \" id\u00e9z\u0151jel &copy; \u00a9 copyright P\u00e9lda: Ha egy bekezd\u00e9sbe azt szeretn\u00e9nk \u00edrni, hogy 5 < 10 > 8 , akkor ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg karakterentit\u00e1sok haszn\u00e1lat\u00e1val 1 < p > 5 &lt; 10 &gt; 8 </ p >","title":"Karakterentit\u00e1sok"},{"location":"gyakorlat/gyak1/#kepek","text":"Ha a weboldalunkra egy k\u00e9pet szeretn\u00e9nk besz\u00farni, akkor ezt az <img/> nev\u0171 p\u00e1ratlan taggel tudjuk megtenni. A tag fontosabb attrib\u00fatumai: src : a k\u00e9p el\u00e9r\u00e9si \u00fatvonala alt : helyettes\u00edt\u0151 sz\u00f6veg, ha a k\u00e9p bet\u00f6lt\u00e9se sikertelen title : a k\u00e9p c\u00edme, ami akkor jelenik meg, ha a kurzor a k\u00e9p f\u00f6l\u00f6tt \u00e1ll width : a k\u00e9p sz\u00e9less\u00e9ge (pixelben) height : a k\u00e9p magass\u00e1ga (pixelben). Ha a width \u00e9s height attrib\u00fatumok k\u00f6z\u00fcl csak az egyiket adjuk meg, akkor a m\u00e1sik a k\u00e9p eredeti m\u00e9retar\u00e1nyaib\u00f3l sz\u00e1mol\u00f3dik. Teh\u00e1t p\u00e9ld\u00e1ul ha egy 400x300-as (400 pixel sz\u00e9les, 300 pixel magas) k\u00e9p sz\u00e9less\u00e9g\u00e9t 800 pixelre \u00e1ll\u00edtjuk (megdupl\u00e1zzuk), akkor a magass\u00e1ga automatikusan 600 pixel lesz. P\u00e9lda: A HTML f\u00e1jllal egy mapp\u00e1ban van egy img mappa, amiben tal\u00e1lhat\u00f3 egy cat.jpg k\u00e9p. Sz\u00farjuk be a k\u00e9pet a weboldalunkra \u00fagy, hogy a sz\u00e9less\u00e9ge 400 pixel legyen! 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > K\u00e9p besz\u00far\u00e1sa </ title > < meta charset = \"UTF-8\" /> </ head > < body > < img src = \"img/cat.jpg\" alt = \"Macska\" title = \"Ez egy macska\" width = \"400\" /> </ body > </ html >","title":"K\u00e9pek"},{"location":"gyakorlat/gyak1/#az-id-es-class-attributumok","text":"Minden HTML objektumnak adhat\u00f3 egyedi azonos\u00edt\u00f3, illetve minden HTML objektum csoportos\u00edthat\u00f3 oszt\u00e1lyokba. Ezek alapvet\u0151en majd CSS-ben lesznek hasznosak, amikor egy-egy objektumra vagy objektumok csoportj\u00e1ra szeretn\u00e9nk hivatkozni. Az egyedi azonos\u00edt\u00f3 ( id attrib\u00fatum) egy adott HTML elem azonos\u00edt\u00e1s\u00e1ra szolg\u00e1l. \u00c9rt\u00e9ke a dokumentumon bel\u00fcl szab\u00e1lyosan egyedi kell, hogy legyen, emellett az attrib\u00fatum \u00e9rt\u00e9ke nem tartalmazhat sz\u00f3k\u00f6zt. Az oszt\u00e1ly ( class attrib\u00fatum) jellemz\u0151en t\u00f6bb HTML elem csoportos\u00edt\u00e1s\u00e1ra haszn\u00e1latos. A class attrib\u00fatum \u00e9rt\u00e9ke nem kell, hogy egyedi legyen (s\u0151t \u00e1ltal\u00e1ban nem az). \u00c9rt\u00e9k\u00e9\u00fcl sz\u00f3k\u00f6zzel elv\u00e1lasztva megadhat\u00f3 t\u00f6bb oszt\u00e1ly neve is, amihez az adott elem tartozik. P\u00e9lda: id \u00e9s class attrib\u00fatumok haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > id, class </ title > < meta charset = \"UTF-8\" /> </ head > < body > <!-- Egy \"asd\" egyedi azonos\u00edt\u00f3val rendelkez\u0151 bekezd\u00e9s, ami a \"foo\" oszt\u00e1lyhoz tartozik --> < p id = \"asd\" class = \"foo\" > Ide j\u00f6n valami sz\u00f6veg... </ p > <!-- Egy k\u00e9p, ami a \"foo\" \u00e9s \"bar\" oszt\u00e1lyokhoz tartozik --> < img class = \"foo bar\" src = \"my-image.png\" alt = \"Valami k\u00e9p...\" /> </ body > </ html >","title":"Az id \u00e9s class attrib\u00fatumok"},{"location":"gyakorlat/gyak1/#hivatkozasok-linkek","text":"Hivatkoz\u00e1sokat (avagy linkeket) az <a>...</a> p\u00e1ros tag seg\u00edts\u00e9g\u00e9vel sz\u00farhatunk be a weboldalunkra. A tag fontosabb attrib\u00fatumai: href : c\u00e9l, ahova a hivatkoz\u00e1sra kattintva jutunk lehet egy m\u00e1sik weboldal - pl. <a href=\"https://www.google.com\">Google</a> lehet egy m\u00e1sik f\u00e1jl - pl. <a href=\"bevasarlolista.txt\">Bev\u00e1s\u00e1rl\u00f3lista</a> lehet lapon bel\u00fcli hivatkoz\u00e1s - pl. <a href=\"#top\">Vissza a tetej\u00e9re</a> (ez az id=\"top\" attrib\u00fatummal rendelkez\u0151 elemre mutat) target : hol legyen megnyitva a hivatkozott c\u00e9l _self : ugyanott, ahol r\u00e1kattintottunk (alap\u00e9rtelmezett) _blank : \u00faj lapon vagy ablakban title : hivatkoz\u00e1s c\u00edme, ami akkor jelenik meg, ha a kurzor a hivatkoz\u00e1s f\u00f6l\u00f6tt \u00e1ll. P\u00e9lda: Hivatkoz\u00e1sok besz\u00far\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Hivatkoz\u00e1sok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 id = \"top-of-page\" > Hivatkoz\u00e1sok (linkek) </ h1 > <!-- Egy hivatkoz\u00e1s, ami egy m\u00e1sik weboldalt nyit meg egy \u00faj lapon --> < p >< a href = \"https://youtu.be/dQw4w9WgXcQ\" target = \"_blank\" > Valami klassz dolog </ a ></ p > <!-- Egy hivatkoz\u00e1s, ami egy k\u00e9pet nyit meg ugyanott, ahol a linkre kattintottunk --> < a href = \"img/cat.jpg\" title = \"Megtekint\u00e9s nagyobb m\u00e9retben\" > < img src = \"img/cat.jpg\" alt = \"Macska\" width = \"400\" /> </ a > <!-- Egy hivatkoz\u00e1s, ami az id=\"top-of-page\" attrib\u00fatummal rendelkez\u0151 elemre mutat --> < p >< a href = \"#top-of-page\" > Vissza a lap tetej\u00e9re </ a ></ p > </ body > </ html >","title":"Hivatkoz\u00e1sok (Linkek)"},{"location":"gyakorlat/gyak1/#szakaszok","text":"HTML-ben lehet\u0151s\u00e9g\u00fcnk van a weboldal tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra is. Ezt szakaszok, tartalmi egys\u00e9gek kialak\u00edt\u00e1s\u00e1val tehetj\u00fck meg. A <div>...</div> \u00e1ltal\u00e1nos c\u00e9l\u00fa blokkszint\u0171 (block) szakasz. A blokkszint\u0171 elemek mindig \u00faj sorban kezd\u0151dnek, \u00e9s kihaszn\u00e1lj\u00e1k a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get. A <span>...</span> \u00e1tal\u00e1nos c\u00e9l\u00fa sorszint\u0171 (inline) szakasz. A sorszint\u0171 elemek nem kezd\u0151dnek \u00faj sorban, illetve sz\u00e9less\u00e9g\u00fck csak akkora, mint amekkora helyre sz\u00fcks\u00e9g\u00fck van. P\u00e9lda: A <span> \u00e9s <div> tagek haszn\u00e1lata (a k\u00f3d kimenet\u00e9ben a szeml\u00e9letess\u00e9g kedv\u00e9\u00e9rt vil\u00e1gosk\u00e9k h\u00e1tt\u00e9rrel jel\u00f6lt\u00fck a k\u00e9t tag \u00e1ltal l\u00e9trehozott szakaszokat) 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Szakaszok </ title > < meta charset = \"UTF-8\" /> </ head > < body > A < span > span tag </ span > \u00e9s a < div > div tag </ div > szakaszok kialak\u00edt\u00e1s\u00e1ra alkalmas. </ body > </ html >","title":"Szakaszok"},{"location":"gyakorlat/gyak10/","text":"10. gyakorlat \u00b6 TODO","title":"10. gyakorlat"},{"location":"gyakorlat/gyak10/#10-gyakorlat","text":"TODO","title":"10. gyakorlat"},{"location":"gyakorlat/gyak11/","text":"11. gyakorlat \u00b6 TODO","title":"11. gyakorlat"},{"location":"gyakorlat/gyak11/#11-gyakorlat","text":"TODO","title":"11. gyakorlat"},{"location":"gyakorlat/gyak12/","text":"12. gyakorlat \u00b6 TODO","title":"12. gyakorlat"},{"location":"gyakorlat/gyak12/#12-gyakorlat","text":"TODO","title":"12. gyakorlat"},{"location":"gyakorlat/gyak2/","text":"2. gyakorlat \u00b6 A gyakorlat anyaga \u00b6 A fontosabb HTML elemekkel val\u00f3 ismerked\u00e9s folytat\u00e1sa. A CSS nyelv szintaxis\u00e1nak \u00e9s n\u00e9h\u00e1ny alapvet\u0151 form\u00e1z\u00e1si lehet\u0151s\u00e9g\u00e9nek megismer\u00e9se. HTML alapok II. \u00b6 Ebben a r\u00e9szben folytatjuk a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9ben ( body ) haszn\u00e1latos tagekkel val\u00f3 ismerked\u00e9st. N\u00e9h\u00e1ny fontosabb sz\u00f6vegelem \u00b6 <h1>...</h1> , <h2>...</h2> , ..., <h6>...</h6> : c\u00edmsorok <p>...</p> : bekezd\u00e9s <br/> : sort\u00f6r\u00e9s (p\u00e1ratlan tag) <hr/> : elv\u00e1laszt\u00f3 vonal (p\u00e1ratlan tag) <pre>...</pre> : el\u0151re form\u00e1zott sz\u00f6veg alakh\u0171 megjelen\u00e9st biztos\u00edt: az ilyen taggel megadott sz\u00f6vegek meg\u0151rzik a whitespace karaktereket (sz\u00f3k\u00f6z\u00f6ket, tabul\u00e1torokat, sort\u00f6r\u00e9seket) akkor haszn\u00e1ljuk, ha a sz\u00f6veg jelleg\u00e9b\u0151l szemantikusan k\u00f6vetkezik a tartalom sz\u00f3k\u00f6z\u00f6kkel, t\u00e9rk\u00f6z\u00f6kkel val\u00f3 form\u00e1z\u00e1sa (pl. ASCII-\u00e1br\u00e1k, k\u00f3dr\u00e9szletek, k\u00e9pversek) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Piramis </ h1 > < hr /> < pre > 0 0 0 0 0 0 0 0 0 0 </ pre > < p > A piramis egy n\u00e9gyzet alap\u00fa < br /> g\u00fala alak\u00fa \u00e9p\u00edtm\u00e9ny. </ p > </ body > </ html > <em>...</em> : tartalom hangs\u00falyoz\u00e1sa szemantikus jelent\u00e9ssel b\u00edr a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban d\u0151lt bet\u0171kkel jelen\u00edtik meg <strong>...</strong> : er\u0151s kiemel\u00e9s szemantikus jelent\u00e9ssel b\u00edr a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban f\u00e9lk\u00f6v\u00e9r bet\u0171kkel jelen\u00edtik meg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p >< em > Ricsi </ em > ma vizsg\u00e1zik Prog2-b\u0151l. </ p > <!-- Ki vizsg\u00e1zik? --> < p > Ricsi < em > ma </ em > vizsg\u00e1zik Prog2-b\u0151l. </ p > <!-- Mikor vizsg\u00e1zik? --> < p > Ricsi ma vizsg\u00e1zik < em > Prog2-b\u0151l </ em > . </ p > <!-- Mib\u0151l vizsg\u00e1zik? --> < p >< strong > Figyelem! </ strong > A ketrecbe beny\u00falni vesz\u00e9lyes! </ p > </ body > </ html > Figyelem A HTML tageket NE haszn\u00e1ljuk form\u00e1z\u00e1si c\u00e9lokra! Ha egy sz\u00f6veget f\u00e9lk\u00f6v\u00e9rr\u00e9 vagy d\u0151ltt\u00e9 szeretn\u00e9nk tenni, haszn\u00e1ljunk CSS-t! <sub>...</sub> : als\u00f3 index <sup>...</sup> : fels\u0151 index <q>...</q> : id\u00e9zet (az id\u00e9z\u0151jeleket automatikusan kiteszi) <blockquote>...</blockquote> : id\u00e9zetblokk <code>...</code> : k\u00f3dr\u00e9szlet <mark>...</mark> : vizu\u00e1lis sz\u00f6vegkiemel\u00e9s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p > Als\u00f3 index: x < sub > 2 </ sub > , fels\u0151 index: x < sup > 2 </ sup ></ p > < p >< q > A Webtervez\u00e9s m\u00e9g k\u00f6nny\u0171 t\u00e1rgynak sz\u00e1m\u00edt </ q ></ p > < blockquote > Never gonna give you up < br /> Never gonna let you down < br /> Never gonna run around < br /> And desert you </ blockquote > < p > Egy C program bel\u00e9p\u00e9si pontja: < code > int main(int argc, char **argv) </ code ></ p > < p > bla bla bla < mark > ez itt a l\u00e9nyeg </ mark > bla bla bla </ p > </ body > </ html > Iframe-ek \u00b6 Az <iframe>...</iframe> taggel besz\u00farhatunk a weboldalunkra egy \u00fagynevezett lebeg\u0151keretet (inline frame, r\u00f6viden iframe). Ezekben a lebeg\u0151keretekben lehet\u0151s\u00e9g\u00fcnk van megnyitni egy m\u00e1sik weboldalt. Az <iframe> tag fontosabb attrib\u00fatumai: src : a megnyitni k\u00edv\u00e1nt weboldal URL-je width : a keret sz\u00e9less\u00e9ge (pixelben) height : a keret magass\u00e1ga (pixelben). P\u00e9lda: Sz\u00farjuk be a TTIK honlapj\u00e1t a weboldalunkra egy 600x600-as iframe-ben! 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Iframe p\u00e9lda </ title > < meta charset = \"UTF-8\" /> </ head > < body > < iframe src = \"https://sci.u-szeged.hu/\" width = \"600\" height = \"600\" ></ iframe > </ body > </ html > List\u00e1k \u00b6 A HTML list\u00e1k lehet\u0151s\u00e9get biztos\u00edtanak arra, hogy egym\u00e1shoz kapcsol\u00f3d\u00f3 inform\u00e1ci\u00f3kat egy csoportba gy\u0171jtve sorolhassunk fel. K\u00e9t fontos listat\u00edpus: <ul>...</ul> : rendezetlen (sz\u00e1mozatlan) lista akkor haszn\u00e1ljuk, ha a listaelemek k\u00f6z\u00f6tt nincs meg\u00e1llap\u00edthat\u00f3 sorrend a listaelemeket a <li>...</li> taggel adhatjuk meg <ol>...</ol> : rendezett (sz\u00e1mozott) lista akkor haszn\u00e1ljuk, ha sz\u00e1m\u00edt a listaelemek sorrendje a listaelemeket a <li>...</li> taggel adhatjuk meg fontosabb attrib\u00fatumok: reversed : ford\u00edtott sz\u00e1moz\u00e1s start : sz\u00e1moz\u00e1s kezd\u0151sorsz\u00e1ma type : felsorol\u00e1sjel t\u00edpusa lehets\u00e9ges \u00e9rt\u00e9kei: 1 : arab sz\u00e1m, i : \"kisbet\u0171s\" r\u00f3mai sz\u00e1m, I : \"nagybet\u0171s\" r\u00f3mai sz\u00e1m, a : kisbet\u0171, A : nagybet\u0171 P\u00e9lda: Rendezetlen \u00e9s rendezett lista 1 2 3 4 5 6 7 8 9 10 11 12 13 <!-- Rendezetlen (sz\u00e1mozatlan) lista --> < ul > < li > Keny\u00e9r </ li > < li > Tej </ li > < li > Felv\u00e1gott </ li > </ ul > <!-- Rendezett (sz\u00e1mozott) lista --> < ol > < li > Nyisd ki a szemed! </ li > < li > Nyomd ki az \u00e9breszt\u0151t! </ li > < li > Aludj vissza! </ li > </ ol > A fenti listat\u00edpusokb\u00f3l k\u00e9sz\u00edthet\u00fcnk ak\u00e1r t\u00f6bbszint\u0171 list\u00e1t is. Ennek a l\u00e9nyege, hogy egy listaelembe egy m\u00e1sik list\u00e1t \u00e1gyazunk be. P\u00e9lda: T\u00f6bbszint\u0171 lista 1 2 3 4 5 6 7 8 9 10 11 < ol > < li > Rendezett listaelem </ li > < li > Rendezett listaelem < ul > < li > Rendezetlen listaelem </ li > < li > Rendezetlen listaelem </ li > </ ul > </ li > < li > Rendezett listaelem </ li > </ ol > T\u00e1bl\u00e1zatok \u00b6 A <table>...</table> taggel egy t\u00e1bl\u00e1zatot sz\u00farhatunk be a weboldalunkra. A t\u00e1bl\u00e1zat egy sor\u00e1t a <tr>...</tr> tag seg\u00edts\u00e9g\u00e9vel adhatjuk meg. Az egyes sorokon bel\u00fcl l\u00e9trehozhatunk fejl\u00e9ccell\u00e1kat ( <th>...</th> ), illetve adatcell\u00e1kat ( <td>...</td> ). Ha szeretn\u00e9nk a t\u00e1bl\u00e1zatnak c\u00edmet adni, akkor ezt a <caption>...</caption> taggel tehetj\u00fck meg. Ezt a taget mindig k\u00f6zvetlen\u00fcl a <table> ut\u00e1n kell \u00edrnunk. P\u00e9lda: Egy egyszer\u0171 t\u00e1bl\u00e1zat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < table > < caption > K\u00edn\u00e1latunk </ caption > < tr > < th > Pizza neve </ th > < th > \u00c1r </ th > </ tr > < tr > < td > Sonk\u00e1s-kukoric\u00e1s </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > N\u00e9gysajtos </ td > < td > 2000 Ft </ td > </ tr > </ table > Lehet\u0151s\u00e9g\u00fcnk van arra is, hogy sor- \u00e9s oszlop\u00f6sszevon\u00e1sokat v\u00e9gezz\u00fcnk egy t\u00e1bl\u00e1zatban: a cell\u00e1knak adott rowspan attrib\u00fatummal megadhatjuk az \u00f6sszevonni k\u00edv\u00e1nt sorok sz\u00e1m\u00e1t a colspan attrib\u00fatummal pedig az \u00f6sszevonni k\u00edv\u00e1nt oszlopok sz\u00e1m\u00e1t adjuk meg. Azt is meg tudjuk mondani, hogy egy t\u00e1bl\u00e1zatcella mely fejl\u00e9ccell\u00e1(k)hoz tartozik. Ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg: a fejl\u00e9ccell\u00e1knak adunk egy-egy id attrib\u00fatumot (egyedi azonos\u00edt\u00f3t) a cell\u00e1k headers attrib\u00fatumak\u00e9nt megadjuk azon fejl\u00e9ccell\u00e1(k)nak az id -\u00e9rt\u00e9k\u00e9t, ami(k)hez az adott cella tartozik. P\u00e9lda: Az el\u0151z\u0151 t\u00e1bl\u00e1zat kieg\u00e9sz\u00edt\u00e9se sor- \u00e9s oszlop\u00f6sszevon\u00e1ssal, valamint fejl\u00e9ccella-t\u00e1rs\u00edt\u00e1ssal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 < table > < caption > K\u00edn\u00e1latunk </ caption > < tr > < th id = \"nev\" > Pizza neve </ th > < th id = \"ar\" > \u00c1r </ th > < th id = \"extra\" > Rendel\u00e9s eset\u00e9n j\u00e1r m\u00e9g </ th > </ tr > < tr > < td headers = \"nev\" > Sonk\u00e1s-kukoric\u00e1s </ td > < td headers = \"ar\" > 1800 Ft </ td > < td headers = \"extra\" rowspan = \"2\" > Aj\u00e1nd\u00e9k sz\u00f3sz \u00e9s \u00fcd\u00edt\u0151 </ td > </ tr > < tr > < td headers = \"nev\" > N\u00e9gysajtos </ td > < td headers = \"ar\" > 2000 Ft </ td > </ tr > < tr > < td headers = \"nev\" > Hawaii </ td > < td headers = \"ar extra\" colspan = \"2\" > NEM RENDELHET\u0150! </ td > </ tr > </ table > A HTML t\u00e1bl\u00e1zatok sorait lehet\u0151s\u00e9g\u00fcnk van 3 f\u0151 egys\u00e9gre bontani: <thead>...</thead> : fejl\u00e9csorok csoportja <tbody>...</tbody> : adatsorok csoportja, a t\u00e1bl\u00e1zat t\u00f6rzse <tfoot>...</tfoot> : l\u00e1bl\u00e9csorok csoportja. A fenti tagek haszn\u00e1lata opcion\u00e1lis, nem k\u00f6telez\u0151. Haszn\u00e1latuk eset\u00e9n, ha pap\u00edrra nyomtatjuk ki a weboldal tartalm\u00e1t, akkor a hosszabb, t\u00f6bb lapon \u00e1t\u00edvel\u0151 t\u00e1bl\u00e1zatok eset\u00e9n a <thead> \u00e9s a <tfoot> minden nyomtatott oldalon megjelenik. Ha szeretn\u00e9nk a t\u00e1bl\u00e1zat oszlopait csoportos\u00edtani (pl. form\u00e1z\u00e1s c\u00e9lj\u00e1b\u00f3l), akkor ezt a <colgroup>...</colgroup> taggel tehetj\u00fck meg. Ezt k\u00f6zvetlen\u00fcl a <caption> ut\u00e1n (ha van caption) \u00e9s a <thead> el\u00e9 (ha van thead) \u00edrjuk. Az oszlopcsoportos\u00edt\u00e1son bel\u00fcl a <col/> p\u00e1ratlan tag jel\u00f6l egy oszlopot. Ha egyszerre t\u00f6bb, mondjuk N darab oszlopot szeretn\u00e9nk kijel\u00f6lni a csoportos\u00edt\u00e1sban, akkor ezt a <col span=\"N\"/> seg\u00edts\u00e9g\u00e9vel tudjuk megtenni. P\u00e9lda: Az el\u0151z\u0151 t\u00e1bl\u00e1zat kieg\u00e9sz\u00edt\u00e9se a sorok \u00e9s oszlopok csoportos\u00edt\u00e1s\u00e1val 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 < table > < caption > K\u00edn\u00e1latunk </ caption > < colgroup > <!-- az els\u0151 oszlop vil\u00e1gospiros h\u00e1tt\u00e9rsz\u00edn\u0171 lesz --> < col style = \"background-color: salmon;\" /> <!-- a k\u00f6vetkez\u0151 2 oszlop vil\u00e1gosz\u00f6ld h\u00e1tt\u00e9rsz\u00ednt kap --> < col style = \"background-color: lightgreen;\" span = \"2\" /> </ colgroup > < thead > < tr > < th id = \"nev\" > Pizza neve </ th > < th id = \"ar\" > \u00c1r </ th > < th id = \"extra\" > Rendel\u00e9s eset\u00e9n j\u00e1r m\u00e9g </ th > </ tr > </ thead > < tbody > < tr > < td headers = \"nev\" > Sonk\u00e1s-kukoric\u00e1s </ td > < td headers = \"ar\" > 1800 Ft </ td > < td headers = \"extra\" rowspan = \"2\" > Aj\u00e1nd\u00e9k sz\u00f3sz \u00e9s \u00fcd\u00edt\u0151 </ td > </ tr > < tr > < td headers = \"nev\" > N\u00e9gysajtos </ td > < td headers = \"ar\" > 2000 Ft </ td > </ tr > < tr > < td headers = \"nev\" > Hawaii </ td > < td headers = \"ar extra\" colspan = \"2\" > NEM RENDELHET\u0150! </ td > </ tr > </ tbody > <!-- itt m\u00e9g lehetne ak\u00e1r egy <tfoot> is, viszont ez opcion\u00e1lis... --> </ table > CSS alapok \u00b6 Az eddigiek sor\u00e1n t\u00e1rgyalt HTML nyelvet a weboldal tartalm\u00e1nak kialak\u00edt\u00e1s\u00e1ra \u00e9s struktur\u00e1l\u00e1s\u00e1ra haszn\u00e1ltuk. Ha a tartalmat form\u00e1zni szeretn\u00e9nk, akkor ezt CSS (Cascading Style Sheets) seg\u00edts\u00e9g\u00e9vel tudjuk megtenni. Szintaxis \u00b6 A CSS utas\u00edt\u00e1sok szintaxisa a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki: 1 2 3 4 5 szelektor { tulajdons\u00e1g1: \u00e9rt\u00e9k1; tulajdons\u00e1g2: \u00e9rt\u00e9k2; ... } A szelektor (m\u00e1s n\u00e9ven kijel\u00f6l\u0151 ) seg\u00edts\u00e9g\u00e9vel megmondjuk, hogy a weboldal mely elem\u00e9t (vagy elemeit) szeretn\u00e9nk form\u00e1zni. Ezut\u00e1n kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00f6tt, pontosvessz\u0151vel elv\u00e1lasztva megadjuk az elv\u00e9gzend\u0151 form\u00e1z\u00e1sokat tulajdons\u00e1g: \u00e9rt\u00e9k form\u00e1ban. A tulajdons\u00e1g az adott elem form\u00e1zand\u00f3 tulajdons\u00e1ga (pl. h\u00e1tt\u00e9rsz\u00edn, bet\u0171t\u00edpus, t\u00e9rk\u00f6z stb.), az \u00e9rt\u00e9k pedig az adott tulajdons\u00e1ghoz tartoz\u00f3, be\u00e1ll\u00edtani k\u00edv\u00e1nt \u00e9rt\u00e9k. A CSS k\u00f3dba \u00edrhatunk kommentek et (megjegyz\u00e9seket) is az al\u00e1bbi szintaxissal: 1 /* Ez egy komment a CSS k\u00f3dban */ P\u00e9lda: Egy konkr\u00e9t CSS k\u00f3dr\u00e9szlet 1 2 3 4 5 6 7 8 9 10 11 12 13 /* egy egyszer\u0171bb szelektor \u00e9s n\u00e9h\u00e1ny form\u00e1z\u00e1s */ body { margin : 0 ; /* marg\u00f3 */ padding : 0 ; /* t\u00e9rk\u00f6z */ background-color : #f0f0f0 ; /* h\u00e1tt\u00e9rsz\u00edn */ } /* egy \u00f6sszetettebb szelektor */ # main-content . centered { text-align : center ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1s */ } CSS be\u00e1gyaz\u00e1sa \u00b6 Egy HTML k\u00f3dba t\u00f6bbf\u00e9lek\u00e9ppen is be\u00e1gyazhatunk CSS form\u00e1z\u00e1sokat. Inline CSS eset\u00e9n a tagek style attrib\u00fatum\u00e1nak \u00e9rt\u00e9kek\u00e9nt adjuk meg a CSS utas\u00edt\u00e1sokat. Ekkor a form\u00e1z\u00e1s mindig csak az adott objektumra lesz \u00e9rv\u00e9nyes. 1 < p style = \"color: blue;\" > I'm blue da ba dee da ba die... </ p > Figyelem Az inline CSS nem hat\u00e9kony, valamint a k\u00f3d \u00e1tl\u00e1that\u00f3s\u00e1g\u00e1t is rontja. Emiatt ha csak lehet, ker\u00fclj\u00fck a haszn\u00e1lat\u00e1t! A lapon bel\u00fcli (internal) CSS -t a <head> -ben adjuk meg, <style> \u00e9s </style> k\u00f6z\u00f6tt. Az \u00edgy kiadott form\u00e1z\u00e1sok az aktu\u00e1lis HTML dokumentumra lesznek \u00e9rv\u00e9nyesek. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS alapok </ title > < meta charset = \"UTF-8\" /> < style > /* az itt kiadott CSS utas\u00edt\u00e1sok az aktu\u00e1lis HTML f\u00e1jlra vonatkoznak */ p { color : blue ; } </ style > </ head > < body > < p > I'm blue da ba dee da ba die... </ p > < p > Da ba dee da ba die... </ p > </ body > </ html > A k\u00fcls\u0151 (external) CSS l\u00e9nyege, hogy a CSS form\u00e1z\u00e1sokat egy k\u00fcls\u0151 (.css kiterjeszt\u00e9s\u0171) f\u00e1jlba \u00edrjuk, majd ezt a f\u00e1jlt \u00e1gyazzuk be a HTML \u00e1llom\u00e1nyunk <head> r\u00e9sz\u00e9ben, a <link/> p\u00e1ratlan tag seg\u00edts\u00e9g\u00e9vel. Ekkor a k\u00fcls\u0151 CSS f\u00e1jlban l\u00e9v\u0151 form\u00e1z\u00e1sok minden olyan HTML dokumentumra \u00e9rv\u00e9nyesek lesznek, amelyek ezt a CSS f\u00e1jlt be\u00e1gyazz\u00e1k. 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS alapok </ title > < meta charset = \"UTF-8\" /> <!-- a main.css nev\u0171 k\u00fcls\u0151 CSS f\u00e1jl be\u00e1gyaz\u00e1sa --> < link rel = \"stylesheet\" href = \"main.css\" /> </ head > < body > <!-- a weboldal tartalma... --> </ body > </ html > Tipp A k\u00fcls\u0151 (external) CSS k\u00fcl\u00f6n\u00f6sen hasznos akkor, amikor egy weboldal t\u00f6bb lapj\u00e1nak szeretn\u00e9nk ugyanazt a form\u00e1z\u00e1st adni. Alapvet\u0151 szelektorok \u00b6 Ebben a r\u00e9szben megismerked\u00fcnk a n\u00e9gy legalapvet\u0151bb CSS szelektort\u00edpussal, amikkel HTML objektumokat jel\u00f6lhet\u00fcnk ki. A k\u00f6vetkez\u0151 leck\u00e9ben ezek felhaszn\u00e1l\u00e1s\u00e1val \u00f6sszetettebb szelektorokat is k\u00e9sz\u00edt\u00fcnk majd. Elem szelektor : tagn\u00e9v alapj\u00e1n jel\u00f6li ki az \u00f6sszes ugyanolyan t\u00edpus\u00fa HTML elemet Class szelektor : azokat az elemeket jel\u00f6li ki, amelyek az adott class \u00e9rt\u00e9kkel rendelkeznek; az ilyen szelektort ponttal ( . ) kezdj\u00fck Id szelektor : az adott id \u00e9rt\u00e9kkel rendelkez\u0151 elemet jel\u00f6li ki; az ilyen szelektort kett\u0151s kereszttel ( # ) kezdj\u00fck Univerz\u00e1lis szelektor : a * szelektorral az \u00f6sszes HTML objektumot kijel\u00f6lhetj\u00fck P\u00e9lda: A n\u00e9gy alapvet\u0151 szelektor: elem szelektor, class szelektor, id szelektor \u00e9s univerz\u00e1lis szelektor 1 2 3 4 5 6 7 div { /* az itt megadott form\u00e1z\u00e1s minden <div> objektumra vonatkozik */ } . foo { /* az itt megadott form\u00e1z\u00e1s a class=\"foo\" attrib\u00fatummal rendelkez\u0151 elemekre vonatkozik */ } # bar { /* az itt megadott form\u00e1z\u00e1s az id=\"foo\" attrib\u00fatum\u00fa elemre vonatkozik */ } * { /* az itt megadott form\u00e1z\u00e1s minden HTML objektumra vonatkozik */ } \u00c9rt\u00e9kek, m\u00e9rt\u00e9kegys\u00e9gek \u00b6 Miel\u0151tt megismern\u00e9nk az els\u0151 konkr\u00e9t, HTML elemek form\u00e1z\u00e1s\u00e1ra szolg\u00e1l\u00f3 CSS utas\u00edt\u00e1sainkat, \u00e9rdemes \u00e1ttekinteni a CSS-ben haszn\u00e1latos fontosabb m\u00e9rt\u00e9kegys\u00e9geket. Hossz\u00fas\u00e1g megad\u00e1sa: abszol\u00fat hossz\u00fas\u00e1g: mm (millim\u00e9ter), cm (centim\u00e9ter), in (inch), pt (pont), pc (pica) relat\u00edv hossz\u00fas\u00e1g: % (m\u00e1s \u00e9rt\u00e9kekb\u0151l sz\u00e1mol\u00f3dik), px (pixel), em (bet\u0171m\u00e9rethez viszony\u00edt), rem (gy\u00f6k\u00e9relem bet\u0171m\u00e9ret\u00e9hez viszony\u00edt), vw (ablaksz\u00e9less\u00e9g 1%-\u00e1hoz viszony\u00edt), vh (ablakmagass\u00e1g 1%-\u00e1hoz viszony\u00edt) Sz\u00f6gek megad\u00e1sa: deg (fok), rad (radi\u00e1n), grad (gradi\u00e1n) Sz\u00ednek megad\u00e1sa: angol n\u00e9vvel - pl. blue decim\u00e1lis RGB-k\u00f3ddal - pl. rgb(0, 0, 255) hexadecim\u00e1lis RGB-k\u00f3ddal - pl. #0000FF A decim\u00e1lis \u00e9s hexadecim\u00e1lis RGB-k\u00f3dokr\u00f3l r\u00e9szletesebben Az addit\u00edv sz\u00ednkever\u00e9s a v\u00f6r\u00f6s ( R ed), z\u00f6ld ( G reen) \u00e9s k\u00e9k ( B lue) alapsz\u00ednekkel dolgozik, \u00e9s ezekb\u0151l kever ki k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00edneket. Az RGB-k\u00f3d (a decim\u00e1lis \u00e9s hexadecim\u00e1lis RGB-k\u00f3d is) azt k\u00f3dolja, hogy az egyes alapsz\u00ednekb\u0151l rendre mekkora mennyis\u00e9get haszn\u00e1ltunk fel egy adott sz\u00edn kikever\u00e9s\u00e9hez. A decim\u00e1lis RGB-k\u00f3d n\u00e1l mindh\u00e1rom sz\u00edn mennyis\u00e9ge 0 \u00e9s 255 k\u00f6z\u00f6tti lehet. P\u00e9ld\u00e1ul az rgb(0, 0, 255) az jelenti, hogy a v\u00f6r\u00f6s (Red) sz\u00edn mennyis\u00e9ge 0, a z\u00f6ld (Green) sz\u00edn mennyis\u00e9ge szint\u00e9n 0, a k\u00e9k (Blue) sz\u00edn mennyis\u00e9ge pedig a maxim\u00e1lis 255 (teh\u00e1t ez a sz\u00ednk\u00f3d \u00e9ppen a k\u00e9k sz\u00ednt k\u00f3dolja). Az egyes sz\u00ednek mennyis\u00e9g\u00e9t itt megadhatjuk sz\u00e1zal\u00e9kosan is, ekkor \u00e9rtelemszer\u0171en 0% \u00e9s 100% k\u00f6z\u00f6tti \u00e9rt\u00e9keket \u00edrunk mindenhova. P\u00e9ld\u00e1ul sz\u00e1zal\u00e9kos megad\u00e1s eset\u00e9n a k\u00e9k sz\u00edn k\u00f3dja a k\u00f6vetkez\u0151 lesz: rgb(0%, 0%, 100%) . A hexadecim\u00e1lis RGB-k\u00f3d is pontosan ugyan\u00edgy m\u0171k\u00f6dik, csak tal\u00e1n els\u0151 r\u00e1n\u00e9z\u00e9sre ez nem annyira vil\u00e1gos. A hexadecim\u00e1lis RGB-k\u00f3dban # (kett\u0151s kereszt) ut\u00e1n 6 darab, tizenhatos sz\u00e1mrendszerbeli sz\u00e1mjegyet adunk meg (teh\u00e1t minden sz\u00e1mjegy 0 \u00e9s F (= 15) k\u00f6z\u00f6tti). Az els\u0151 k\u00e9t sz\u00e1mjegy a v\u00f6r\u00f6s (Red), a m\u00e1sodik kett\u0151 a z\u00f6ld (Green), az utols\u00f3 kett\u0151 pedig a k\u00e9k (Blue) sz\u00edn mennyis\u00e9g\u00e9t k\u00f3dolja. P\u00e9ld\u00e1ul a #0000FF a k\u00e9k sz\u00ednt k\u00f3dolja, hiszen a v\u00f6r\u00f6s \u00e9s z\u00f6ld mennyis\u00e9ge 0, a k\u00e9k mennyis\u00e9ge pedig a maxim\u00e1lis (FF). Ha az adott (v\u00f6r\u00f6s, z\u00f6ld vagy k\u00e9k) sz\u00ednhez tartoz\u00f3 2 sz\u00e1mjegy megegyezik, akkor ezt r\u00f6vid\u00edtve is \u00edrhatjuk. P\u00e9ld\u00e1ul #0066FF helyett azt is \u00edrhatjuk, hogy #06F . A hexadecim\u00e1lis sz\u00ednk\u00f3d nem \u00e9rz\u00e9keny a kis- \u00e9s nagybet\u0171kre (teh\u00e1t p\u00e9ld\u00e1ul #12BD0F \u00e9s #12bd0f ugyanaz). Tipp Nyilv\u00e1n senki nem akarja fejb\u0151l megtanulni az \u00f6sszes l\u00e9tez\u0151 sz\u00ednk\u00f3dot. Szerencs\u00e9re vannak olyan online szoftverek (p\u00e9ld\u00e1ul ez ), amelyekkel manu\u00e1lisan kiv\u00e1laszthatunk egy nek\u00fcnk tetsz\u0151 sz\u00ednt a sz\u00ednpalett\u00e1r\u00f3l, \u00e9s megtudhatjuk annak az RGB-k\u00f3dj\u00e1t. Sz\u00f6vegek form\u00e1z\u00e1sa \u00b6 Az al\u00e1bbiakban \u00e1ttekintj\u00fck a sz\u00f6vegekkel kapcsolatos fontosabb CSS form\u00e1z\u00e1sokat. font-family : bet\u0171t\u00edpus \u00e9rt\u00e9kek\u00e9nt t\u00f6bb bet\u0171t\u00edpus is felsorolhat\u00f3 vessz\u0151vel elv\u00e1lasztva - ekkor a felsoroltak k\u00f6z\u00fcl a legels\u0151 telep\u00edtett bet\u0171t\u00edpus lesz be\u00e1ll\u00edtva a t\u00f6bb sz\u00f3b\u00f3l \u00e1ll\u00f3 bet\u0171t\u00edpusok nev\u00e9t (pl. Courier New) aposztr\u00f3fok k\u00f6z\u00f6tt ( '...' ) adjuk meg font-size : bet\u0171m\u00e9ret font-weight : bet\u0171vastags\u00e1g lehets\u00e9ges \u00e9rt\u00e9kei: normal (alap\u00e9rtelmezett vastags\u00e1g), bold (vastag), bolder (vastagabb), lighter (v\u00e9konyabb), 100 \u00e9s 900 k\u00f6z\u00f6tti sz\u00e1m font-style: italic - d\u0151lt bet\u0171ss\u00e9 t\u00e9tel color : bet\u0171sz\u00edn text-align : sz\u00f6veg v\u00edzszintes igaz\u00edt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: left (balra), right (jobbra), center (k\u00f6z\u00e9pre), justify (sorkiz\u00e1rt) text-transform : sz\u00f6veg \u00e1talak\u00edt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: uppercase (csupa nagybet\u0171s), lowercase (csupa kisbet\u0171s), capitalize (minden sz\u00f3 els\u0151 bet\u0171je nagybet\u0171), none (alap\u00e9rtelmezett) P\u00e9lda: N\u00e9h\u00e1ny sz\u00f6vegform\u00e1z\u00e1s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Sz\u00f6vegform\u00e1z\u00e1sok </ title > < meta charset = \"UTF-8\" /> < style > p { font-family : Arial , Verdana , sans-serif ; font-size : 20 px ; font-weight : bold ; color : darkblue ; } span { font-family : 'Courier New' ; font-style : italic ; color : #F00 ; /* v\u00f6r\u00f6s */ } </ style > </ head > < body > < p > A h\u00e1zimacska < span > (Felis silvestris catus) </ span > \u00e9letm\u00f3dja \u00e9s viselked\u00e9se </ p > </ body > </ html > A dobozmodell \u00b6 Minden HTML objektum felfoghat\u00f3 egy t\u00e9glalap alak\u00fa dobozk\u00e9nt. CSS-ben gyakran haszn\u00e1ljuk a dobozmodell fogalmat, amikor elemek elrendez\u00e9s\u00e9r\u0151l \u00e9s diz\u00e1jnol\u00e1s\u00e1r\u00f3l besz\u00e9l\u00fcnk. N\u00e9zz\u00fck meg az al\u00e1bbi \u00e1br\u00e1n, hogy mik is ennek a dobozmodellnek a r\u00e9szei! A content jelenti a doboz tartalm\u00e1t, ami \u00e1ltal\u00e1ban az elem sz\u00f6veges tartalma vagy egy k\u00e9p. A padding a tartalom k\u00f6r\u00fcl tal\u00e1lhat\u00f3 bels\u0151 t\u00e9rk\u00f6z. A border a tartalmon \u00e9s a bels\u0151 t\u00e9rk\u00f6z\u00f6n k\u00edv\u00fcl elhelyezkd\u0151 szeg\u00e9ly. A margin a szeg\u00e9lyen k\u00edv\u00fcl tal\u00e1lhat\u00f3 k\u00fcls\u0151 marg\u00f3. Elemek m\u00e9retez\u00e9se \u00b6 Miut\u00e1n megismert\u00fck a CSS dobozmodellt, besz\u00e9lhet\u00fcnk a HTML elemek m\u00e9ret\u00e9r\u0151l (sz\u00e9less\u00e9g\u00e9r\u0151l \u00e9s magass\u00e1g\u00e1r\u00f3l). Egy elem sz\u00e9less\u00e9g\u00e9t a width , magass\u00e1g\u00e1t pedig a height CSS tulajdons\u00e1ggal adhatjuk meg. Ezek \u00e9rt\u00e9kek\u00e9nt megadhat\u00f3 a fentebb t\u00e1rgyalt abszol\u00fat \u00e9s relat\u00edv hossz\u00fas\u00e1gm\u00e9rt\u00e9kek valamelyike, vagy az auto speci\u00e1lis \u00e9rt\u00e9k (ekkor a b\u00f6ng\u00e9sz\u0151 hat\u00e1rozza meg a m\u00e9retet). Ehhez hasonl\u00f3an a min-width , max-width , min-height \u00e9s max-height tulajdons\u00e1gokkal rendre megadhatjuk egy elem minim\u00e1lis \u00e9s maxim\u00e1lis sz\u00e9less\u00e9g\u00e9t, valamint minim\u00e1lis \u00e9s maxim\u00e1lis magass\u00e1g\u00e1t. \u00c9rdemes megjegyezni, hogy egy HTML elem t\u00e9nyleges m\u00e9ret\u00e9be a tartalom, a bels\u0151 t\u00e9rk\u00f6z\u00f6k ( padding ) \u00e9s a szeg\u00e9lyek ( border ) is belesz\u00e1m\u00edtanak. N\u00e9zz\u00fck meg egy egyszer\u0171 p\u00e9ld\u00e1n, hogy mit jelent ez! P\u00e9lda Legyen adott egy 300 pixel sz\u00e9les HTML elem, amelyet egy minden ir\u00e1nyb\u00f3l 10 pixel sz\u00e9les bels\u0151 t\u00e9rk\u00f6z (padding) vesz k\u00f6rbe! Ezen k\u00edv\u00fcl rendelkezzen ez az elem egy minden ir\u00e1nyb\u00f3l 5 pixel vastag szeg\u00e9llyel is! Ekkor az elem t\u00e9nyleges sz\u00e9less\u00e9ge 330 pixel lesz. Ez \u00fagy j\u00f6n ki, hogy \u00f6sszeadjuk az eredeti sz\u00e9less\u00e9get (300 pixel), a bal \u00e9s jobb oldali, egyenk\u00e9nt 10 pixel sz\u00e9les padding-et (20 pixel), valamint a bal \u00e9s jobb oldali, egyenk\u00e9nt 5 pixel sz\u00e9les szeg\u00e9lyt (10 pixel). Az \u00f6sszeg val\u00f3ban 300+20+10 = 330 pixel lesz. T\u00e9rk\u00f6z\u00f6k megad\u00e1sa \u00b6 A padding-top , padding-right , padding-bottom \u00e9s padding-left CSS tulajdons\u00e1gokkal be\u00e1ll\u00edthatjuk egy elem fels\u0151, jobb oldali, als\u00f3 \u00e9s bal oldali t\u00e9rk\u00f6z\u00e9nek a m\u00e9rt\u00e9k\u00e9t. Ezek a jellemz\u0151k \u00f6sszevonva is megadhat\u00f3k a padding tulajdons\u00e1ggal, amelynek \u00e9rt\u00e9kek\u00e9nt megadjuk sorban a fels\u0151, jobb, als\u00f3 \u00e9s v\u00e9g\u00fcl a bal t\u00e9rk\u00f6z m\u00e9rt\u00e9k\u00e9t. Ha ezek k\u00f6z\u00fcl valamelyik param\u00e9tert elhagyjuk, akkor az a szemk\u00f6zti oldalt\u00f3l fogja \u00f6r\u00f6k\u00f6lni az \u00e9rt\u00e9ket. P\u00e9lda: T\u00e9rk\u00f6z megad\u00e1sa a padding tulajdons\u00e1ggal 1 2 3 4 5 6 7 8 9 10 . pelda1 { /* fels\u0151 t\u00e9rk\u00f6z: 10px, jobb t\u00e9rk\u00f6z: 20px, als\u00f3 t\u00e9rk\u00f6z: 30px, bal t\u00e9rk\u00f6z: 40px */ padding : 10 px 20 px 30 px 40 px ; } . pelda2 { /* fels\u0151 t\u00e9rk\u00f6z: 0px, jobb t\u00e9rk\u00f6z: 10px, als\u00f3 t\u00e9rk\u00f6z: 0px, bal t\u00e9rk\u00f6z: 10px */ /* (mert az als\u00f3 t\u00e9rk\u00f6z a fels\u0151t\u0151l, a bal t\u00e9rk\u00f6z a jobbt\u00f3l \u00f6r\u00f6kli a m\u00e9retet) */ padding : 0 10 px ; } Marg\u00f3k megad\u00e1sa \u00b6 Nagyon hasonl\u00f3an, mint ahogy azt a t\u00e9rk\u00f6z\u00f6kn\u00e9l l\u00e1ttuk, a marg\u00f3k is megadhat\u00f3k... ...k\u00fcl\u00f6n-k\u00fcl\u00f6n, a margin-top , margin-right , margin-bottom \u00e9s margin-left tulajdons\u00e1gokkal ...\u00f6sszevonva, a margin tulajdons\u00e1ggal (fels\u0151-jobb-als\u00f3-bal sorrendben itt is - ha valamelyik marg\u00f3 m\u00e9ret\u00e9t nem adjuk meg, akkor a szemk\u00f6zti oldalt\u00f3l \u00f6r\u00f6kli azt). A margin-left \u00e9s margin-right tulajdons\u00e1gokn\u00e1l az auto \u00e9rt\u00e9ket felhaszn\u00e1lhatjuk az elem v\u00edzszintes igaz\u00edt\u00e1s\u00e1ra: margin-left: auto : v\u00edzszintesen jobbra igaz\u00edtja az elemet margin-right: auto : v\u00edzszintesen balra igaz\u00edtja az elemet ha mind a bal, mind a jobb marg\u00f3 \u00e9rt\u00e9ke auto , akkor v\u00edzszintesen k\u00f6z\u00e9pre igazodik az elem. P\u00e9lda: Elem v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A CSS dobozmodell </ title > < meta charset = \"UTF-8\" /> < style > div { border : 3 px solid black ; /* szeg\u00e9ly (a szeml\u00e9letess\u00e9g kedv\u00e9\u00e9rt) */ } . centered { width : 300 px ; /* az elem sz\u00e9less\u00e9g\u00e9t 300 pixelre cs\u00f6kkentj\u00fck */ margin-left : auto ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edtjuk az elemet */ margin-right : auto ; text-align : center ; /* a sz\u00f6veges tartalmat is k\u00f6z\u00e9pre igaz\u00edtjuk */ } </ style > </ head > < body > < div class = \"centered\" > Ezt akarjuk k\u00f6z\u00e9pre igaz\u00edtani... </ div > </ body > </ html > Szeg\u00e9lyek megad\u00e1sa \u00b6 A HTML elem k\u00f6r\u00fcli szeg\u00e9lyek be\u00e1ll\u00edt\u00e1s\u00e1ra a border CSS tulajdons\u00e1g szolg\u00e1l. Ennek \u00e9rt\u00e9kek\u00e9nt 3 param\u00e9tert adunk meg: rendre a szeg\u00e9ly vastags\u00e1g\u00e1t, st\u00edlus\u00e1t \u00e9s sz\u00edn\u00e9t. Ezeket egy\u00e9bk\u00e9nt k\u00fcl\u00f6n-k\u00fcl\u00f6n is megadhatjuk a border-width , border-style \u00e9s border-color tulajdons\u00e1gokkal. A szeg\u00e9ly vastags\u00e1ga ( border-width ) lehet a thin (v\u00e9kony), medium (k\u00f6zepes) \u00e9s thick (vastag) kulcsszavak valamelyike, de ha enn\u00e9l pontosabbak szeretn\u00e9nk lenni, akkor ak\u00e1r pixelben is megadhatjuk a szeg\u00e9lyvastags\u00e1got. A szeg\u00e9ly st\u00edlus\u00e1nak ( border-style ) \u00e9rt\u00e9ke lehet solid (folytonos), dashed (szaggatott), dotted (pontozott), double (dupla), groove (faragott), ridge (kidomborod\u00f3), outset (kiemelked\u0151), inset (s\u00fcllyesztett), none (nincs szeg\u00e9ly) vagy hidden (rejtett). Ha nem szeretn\u00e9nk minden ir\u00e1nyb\u00f3l szeg\u00e9lyt adni egy objektumnak, akkor a border-top , border-right , border-bottom \u00e9s border-left tulajdons\u00e1gokkal k\u00fcl\u00f6n-k\u00fcl\u00f6n is megadhatjuk a fels\u0151, jobb, als\u00f3 \u00e9s bal szeg\u00e9lyek \u00e9rt\u00e9k\u00e9t. P\u00e9lda: Szeg\u00e9lyek megad\u00e1sa 1 2 3 4 5 6 7 8 9 . pelda1 { /* 3 pixel vastag, folytonos fekete szeg\u00e9ly minden ir\u00e1nyb\u00f3l */ border : 3 px solid black ; } . pelda2 { /* vastag, dupla vonalas, piros sz\u00edn\u0171 als\u00f3 szeg\u00e9ly */ border-bottom : thick double red ; } A h\u00e1tt\u00e9r form\u00e1z\u00e1sa \u00b6 Ebben a r\u00e9szben megismerked\u00fcnk n\u00e9h\u00e1ny fontosabb, a h\u00e1tt\u00e9r form\u00e1z\u00e1s\u00e1val kapcsolatos CSS tulajdons\u00e1ggal. background-color : h\u00e1tt\u00e9rsz\u00edn \u00e9rt\u00e9kek\u00e9nt megadhat\u00f3 egy sz\u00edn vagy a transparent (\u00e1tl\u00e1tsz\u00f3) kulcssz\u00f3 background-image : h\u00e1tt\u00e9rk\u00e9p a h\u00e1tt\u00e9rk\u00e9nt be\u00e1ll\u00edtani k\u00edv\u00e1nt k\u00e9p el\u00e9r\u00e9si \u00fatvonal\u00e1t az url('el\u00e9r\u00e9si_\u00fatvonal') seg\u00edts\u00e9g\u00e9vel adjuk meg background-repeat : h\u00e1tt\u00e9rk\u00e9p ism\u00e9tl\u0151d\u00e9se lehets\u00e9ges \u00e9rt\u00e9kek: repeat (v\u00edzszintes \u00e9s f\u00fcgg\u0151leges ism\u00e9tl\u0151d\u00e9s, alap\u00e9rtelmezett), repeat-x (v\u00edzszintes ism\u00e9tl\u0151d\u00e9s), repeat-y (f\u00fcgg\u0151leges ism\u00e9tl\u0151d\u00e9s), no-repeat (nem ism\u00e9tli) background-position : h\u00e1tt\u00e9rk\u00e9p poz\u00edci\u00f3ja k\u00e9t \u00e9rt\u00e9ket v\u00e1r: rendre a v\u00edzszintes \u00e9s a f\u00fcgg\u0151leges poz\u00edci\u00f3t a v\u00edzszintes poz\u00edci\u00f3 \u00e9rt\u00e9kei: left (bal), right (jobb), center (k\u00f6z\u00e9pre) a f\u00fcgg\u0151leges poz\u00edci\u00f3 \u00e9rt\u00e9kei: top (fent), bottom (lent), center (k\u00f6z\u00e9pre) a fenti kulcsszavak helyett megadhat\u00f3k sz\u00e1zal\u00e9kos \u00e9rt\u00e9kek is a poz\u00edci\u00f3k hely\u00e9n nem k\u00f6telez\u0151 mindk\u00e9t \u00e9rt\u00e9ket megadni (ha elhagyjuk a m\u00e1sodik param\u00e9tert, akkor f\u00fcgg\u0151legesen k\u00f6z\u00e9pre lesz poz\u00edcion\u00e1lva az elem) background-size : h\u00e1tt\u00e9rk\u00e9p m\u00e9rete k\u00e9t \u00e9rt\u00e9ket v\u00e1r: rendre a v\u00edzszintes \u00e9s a f\u00fcgg\u0151leges m\u00e9retet nem k\u00f6telez\u0151 mindk\u00e9t \u00e9rt\u00e9ket megadni megadhat\u00f3 abszol\u00fat vagy relat\u00edv hossz, vagy a lenti kulcsszavak valamelyike auto : automatikus (alap\u00e9rtelmezett) cover : kit\u00f6lti a h\u00e1tteret az eredeti m\u00e9retar\u00e1nyok megtart\u00e1s\u00e1val contain : a legnagyobb m\u00e9retre sk\u00e1l\u00e1z, az eredeti m\u00e9retar\u00e1nyok megtart\u00e1s\u00e1val Tipp A h\u00e1tt\u00e9r tulajdons\u00e1gai \u00f6sszevonva is megadhat\u00f3k a background CSS tulajdons\u00e1ggal. B\u0151vebben itt . A linear-gradient() \u00e9s radial-gradient() f\u00fcggv\u00e9nyek seg\u00edts\u00e9g\u00e9vel sz\u00edn\u00e1tmenetes h\u00e1ttereket is haszn\u00e1lhatunk. B\u0151vebb le\u00edr\u00e1s itt \u00e9s itt . P\u00e9lda: Teljes k\u00e9perny\u0151s h\u00e1tt\u00e9rk\u00e9p 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Teljes k\u00e9perny\u0151s h\u00e1tt\u00e9rk\u00e9p </ title > < meta charset = \"UTF-8\" /> < style > html , body { height : 100 % ; margin : 0 ; } body { background : url ( 'bg.jpg' ) center / cover no-repeat ; } h1 { background-color : darkblue ; /* a r\u00e9gebbi b\u00f6ng\u00e9sz\u0151k lehet, hogy nem ismerik a linear-gradient()-et */ background : linear-gradient ( 90 deg , darkblue , blue ); color : #fff ; text-align : center ; margin-top : 0 ; font-family : Arial , sans-serif ; } </ style > </ head > < body > < h1 > \u00dcdv\u00f6z\u00f6llek a weboldalamon! </ h1 > </ body > </ html > Elem megjelen\u00edt\u00e9se \u00b6 A HTML elemek megjelen\u00edt\u00e9s\u00e9t a display CSS tulajdons\u00e1ggal szab\u00e1lyozhatjuk. N\u00e9h\u00e1ny lehets\u00e9ges \u00e9rt\u00e9ke: inline : sorszint\u0171 elem (sz\u00e9less\u00e9g\u00e9t a tartalom sz\u00e9less\u00e9ge hat\u00e1rozza meg, nem kezd\u0151dik \u00faj sorban) block : blokkszint\u0171 elem (sz\u00e9less\u00e9ge a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9g, \u00faj sorban kezd\u0151dik) inline-block : inline, de megadhat\u00f3k a m\u00e9retei (sz\u00e9less\u00e9ge, magass\u00e1ga) none : elem elt\u00fcntet\u00e9se manaps\u00e1g nagy n\u00e9pszer\u0171s\u00e9gnek \u00f6rvend m\u00e9g a flexbox \u00e9s a grid . P\u00e9lda: K\u00e9p v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa, elem elt\u00fcntet\u00e9se 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A display tulajdons\u00e1g </ title > < meta charset = \"UTF-8\" /> < style > /* k\u00e9p v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa */ # my-pic { display : block ; /* el\u0151sz\u00f6r blokkszint\u0171v\u00e9 tessz\u00fck */ margin : 0 auto ; /* azt\u00e1n a v\u00edzszintes marg\u00f3kat auto-ra \u00e1ll\u00edtjuk */ } /* elem elt\u00fcntet\u00e9se */ . magical { display : none ; } </ style > </ head > < body > < img id = \"my-pic\" src = \"cat.jpg\" alt = \"Egy klassz macsek\" /> < p class = \"magical\" > Sitty-sutty, elt\u00fcntem </ p > < p > \u00c9n pedig itt maradtam </ p > </ body > </ html >","title":"2. gyakorlat"},{"location":"gyakorlat/gyak2/#2-gyakorlat","text":"","title":"2. gyakorlat"},{"location":"gyakorlat/gyak2/#a-gyakorlat-anyaga","text":"A fontosabb HTML elemekkel val\u00f3 ismerked\u00e9s folytat\u00e1sa. A CSS nyelv szintaxis\u00e1nak \u00e9s n\u00e9h\u00e1ny alapvet\u0151 form\u00e1z\u00e1si lehet\u0151s\u00e9g\u00e9nek megismer\u00e9se.","title":"A gyakorlat anyaga"},{"location":"gyakorlat/gyak2/#html-alapok-ii","text":"Ebben a r\u00e9szben folytatjuk a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9ben ( body ) haszn\u00e1latos tagekkel val\u00f3 ismerked\u00e9st.","title":"HTML alapok II."},{"location":"gyakorlat/gyak2/#nehany-fontosabb-szovegelem","text":"<h1>...</h1> , <h2>...</h2> , ..., <h6>...</h6> : c\u00edmsorok <p>...</p> : bekezd\u00e9s <br/> : sort\u00f6r\u00e9s (p\u00e1ratlan tag) <hr/> : elv\u00e1laszt\u00f3 vonal (p\u00e1ratlan tag) <pre>...</pre> : el\u0151re form\u00e1zott sz\u00f6veg alakh\u0171 megjelen\u00e9st biztos\u00edt: az ilyen taggel megadott sz\u00f6vegek meg\u0151rzik a whitespace karaktereket (sz\u00f3k\u00f6z\u00f6ket, tabul\u00e1torokat, sort\u00f6r\u00e9seket) akkor haszn\u00e1ljuk, ha a sz\u00f6veg jelleg\u00e9b\u0151l szemantikusan k\u00f6vetkezik a tartalom sz\u00f3k\u00f6z\u00f6kkel, t\u00e9rk\u00f6z\u00f6kkel val\u00f3 form\u00e1z\u00e1sa (pl. ASCII-\u00e1br\u00e1k, k\u00f3dr\u00e9szletek, k\u00e9pversek) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Piramis </ h1 > < hr /> < pre > 0 0 0 0 0 0 0 0 0 0 </ pre > < p > A piramis egy n\u00e9gyzet alap\u00fa < br /> g\u00fala alak\u00fa \u00e9p\u00edtm\u00e9ny. </ p > </ body > </ html > <em>...</em> : tartalom hangs\u00falyoz\u00e1sa szemantikus jelent\u00e9ssel b\u00edr a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban d\u0151lt bet\u0171kkel jelen\u00edtik meg <strong>...</strong> : er\u0151s kiemel\u00e9s szemantikus jelent\u00e9ssel b\u00edr a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban f\u00e9lk\u00f6v\u00e9r bet\u0171kkel jelen\u00edtik meg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p >< em > Ricsi </ em > ma vizsg\u00e1zik Prog2-b\u0151l. </ p > <!-- Ki vizsg\u00e1zik? --> < p > Ricsi < em > ma </ em > vizsg\u00e1zik Prog2-b\u0151l. </ p > <!-- Mikor vizsg\u00e1zik? --> < p > Ricsi ma vizsg\u00e1zik < em > Prog2-b\u0151l </ em > . </ p > <!-- Mib\u0151l vizsg\u00e1zik? --> < p >< strong > Figyelem! </ strong > A ketrecbe beny\u00falni vesz\u00e9lyes! </ p > </ body > </ html > Figyelem A HTML tageket NE haszn\u00e1ljuk form\u00e1z\u00e1si c\u00e9lokra! Ha egy sz\u00f6veget f\u00e9lk\u00f6v\u00e9rr\u00e9 vagy d\u0151ltt\u00e9 szeretn\u00e9nk tenni, haszn\u00e1ljunk CSS-t! <sub>...</sub> : als\u00f3 index <sup>...</sup> : fels\u0151 index <q>...</q> : id\u00e9zet (az id\u00e9z\u0151jeleket automatikusan kiteszi) <blockquote>...</blockquote> : id\u00e9zetblokk <code>...</code> : k\u00f3dr\u00e9szlet <mark>...</mark> : vizu\u00e1lis sz\u00f6vegkiemel\u00e9s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Fontosabb sz\u00f6vegelemek </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p > Als\u00f3 index: x < sub > 2 </ sub > , fels\u0151 index: x < sup > 2 </ sup ></ p > < p >< q > A Webtervez\u00e9s m\u00e9g k\u00f6nny\u0171 t\u00e1rgynak sz\u00e1m\u00edt </ q ></ p > < blockquote > Never gonna give you up < br /> Never gonna let you down < br /> Never gonna run around < br /> And desert you </ blockquote > < p > Egy C program bel\u00e9p\u00e9si pontja: < code > int main(int argc, char **argv) </ code ></ p > < p > bla bla bla < mark > ez itt a l\u00e9nyeg </ mark > bla bla bla </ p > </ body > </ html >","title":"N\u00e9h\u00e1ny fontosabb sz\u00f6vegelem"},{"location":"gyakorlat/gyak2/#iframe-ek","text":"Az <iframe>...</iframe> taggel besz\u00farhatunk a weboldalunkra egy \u00fagynevezett lebeg\u0151keretet (inline frame, r\u00f6viden iframe). Ezekben a lebeg\u0151keretekben lehet\u0151s\u00e9g\u00fcnk van megnyitni egy m\u00e1sik weboldalt. Az <iframe> tag fontosabb attrib\u00fatumai: src : a megnyitni k\u00edv\u00e1nt weboldal URL-je width : a keret sz\u00e9less\u00e9ge (pixelben) height : a keret magass\u00e1ga (pixelben). P\u00e9lda: Sz\u00farjuk be a TTIK honlapj\u00e1t a weboldalunkra egy 600x600-as iframe-ben! 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Iframe p\u00e9lda </ title > < meta charset = \"UTF-8\" /> </ head > < body > < iframe src = \"https://sci.u-szeged.hu/\" width = \"600\" height = \"600\" ></ iframe > </ body > </ html >","title":"Iframe-ek"},{"location":"gyakorlat/gyak2/#listak","text":"A HTML list\u00e1k lehet\u0151s\u00e9get biztos\u00edtanak arra, hogy egym\u00e1shoz kapcsol\u00f3d\u00f3 inform\u00e1ci\u00f3kat egy csoportba gy\u0171jtve sorolhassunk fel. K\u00e9t fontos listat\u00edpus: <ul>...</ul> : rendezetlen (sz\u00e1mozatlan) lista akkor haszn\u00e1ljuk, ha a listaelemek k\u00f6z\u00f6tt nincs meg\u00e1llap\u00edthat\u00f3 sorrend a listaelemeket a <li>...</li> taggel adhatjuk meg <ol>...</ol> : rendezett (sz\u00e1mozott) lista akkor haszn\u00e1ljuk, ha sz\u00e1m\u00edt a listaelemek sorrendje a listaelemeket a <li>...</li> taggel adhatjuk meg fontosabb attrib\u00fatumok: reversed : ford\u00edtott sz\u00e1moz\u00e1s start : sz\u00e1moz\u00e1s kezd\u0151sorsz\u00e1ma type : felsorol\u00e1sjel t\u00edpusa lehets\u00e9ges \u00e9rt\u00e9kei: 1 : arab sz\u00e1m, i : \"kisbet\u0171s\" r\u00f3mai sz\u00e1m, I : \"nagybet\u0171s\" r\u00f3mai sz\u00e1m, a : kisbet\u0171, A : nagybet\u0171 P\u00e9lda: Rendezetlen \u00e9s rendezett lista 1 2 3 4 5 6 7 8 9 10 11 12 13 <!-- Rendezetlen (sz\u00e1mozatlan) lista --> < ul > < li > Keny\u00e9r </ li > < li > Tej </ li > < li > Felv\u00e1gott </ li > </ ul > <!-- Rendezett (sz\u00e1mozott) lista --> < ol > < li > Nyisd ki a szemed! </ li > < li > Nyomd ki az \u00e9breszt\u0151t! </ li > < li > Aludj vissza! </ li > </ ol > A fenti listat\u00edpusokb\u00f3l k\u00e9sz\u00edthet\u00fcnk ak\u00e1r t\u00f6bbszint\u0171 list\u00e1t is. Ennek a l\u00e9nyege, hogy egy listaelembe egy m\u00e1sik list\u00e1t \u00e1gyazunk be. P\u00e9lda: T\u00f6bbszint\u0171 lista 1 2 3 4 5 6 7 8 9 10 11 < ol > < li > Rendezett listaelem </ li > < li > Rendezett listaelem < ul > < li > Rendezetlen listaelem </ li > < li > Rendezetlen listaelem </ li > </ ul > </ li > < li > Rendezett listaelem </ li > </ ol >","title":"List\u00e1k"},{"location":"gyakorlat/gyak2/#tablazatok","text":"A <table>...</table> taggel egy t\u00e1bl\u00e1zatot sz\u00farhatunk be a weboldalunkra. A t\u00e1bl\u00e1zat egy sor\u00e1t a <tr>...</tr> tag seg\u00edts\u00e9g\u00e9vel adhatjuk meg. Az egyes sorokon bel\u00fcl l\u00e9trehozhatunk fejl\u00e9ccell\u00e1kat ( <th>...</th> ), illetve adatcell\u00e1kat ( <td>...</td> ). Ha szeretn\u00e9nk a t\u00e1bl\u00e1zatnak c\u00edmet adni, akkor ezt a <caption>...</caption> taggel tehetj\u00fck meg. Ezt a taget mindig k\u00f6zvetlen\u00fcl a <table> ut\u00e1n kell \u00edrnunk. P\u00e9lda: Egy egyszer\u0171 t\u00e1bl\u00e1zat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < table > < caption > K\u00edn\u00e1latunk </ caption > < tr > < th > Pizza neve </ th > < th > \u00c1r </ th > </ tr > < tr > < td > Sonk\u00e1s-kukoric\u00e1s </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > N\u00e9gysajtos </ td > < td > 2000 Ft </ td > </ tr > </ table > Lehet\u0151s\u00e9g\u00fcnk van arra is, hogy sor- \u00e9s oszlop\u00f6sszevon\u00e1sokat v\u00e9gezz\u00fcnk egy t\u00e1bl\u00e1zatban: a cell\u00e1knak adott rowspan attrib\u00fatummal megadhatjuk az \u00f6sszevonni k\u00edv\u00e1nt sorok sz\u00e1m\u00e1t a colspan attrib\u00fatummal pedig az \u00f6sszevonni k\u00edv\u00e1nt oszlopok sz\u00e1m\u00e1t adjuk meg. Azt is meg tudjuk mondani, hogy egy t\u00e1bl\u00e1zatcella mely fejl\u00e9ccell\u00e1(k)hoz tartozik. Ezt a k\u00f6vetkez\u0151k\u00e9ppen tehetj\u00fck meg: a fejl\u00e9ccell\u00e1knak adunk egy-egy id attrib\u00fatumot (egyedi azonos\u00edt\u00f3t) a cell\u00e1k headers attrib\u00fatumak\u00e9nt megadjuk azon fejl\u00e9ccell\u00e1(k)nak az id -\u00e9rt\u00e9k\u00e9t, ami(k)hez az adott cella tartozik. P\u00e9lda: Az el\u0151z\u0151 t\u00e1bl\u00e1zat kieg\u00e9sz\u00edt\u00e9se sor- \u00e9s oszlop\u00f6sszevon\u00e1ssal, valamint fejl\u00e9ccella-t\u00e1rs\u00edt\u00e1ssal 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 < table > < caption > K\u00edn\u00e1latunk </ caption > < tr > < th id = \"nev\" > Pizza neve </ th > < th id = \"ar\" > \u00c1r </ th > < th id = \"extra\" > Rendel\u00e9s eset\u00e9n j\u00e1r m\u00e9g </ th > </ tr > < tr > < td headers = \"nev\" > Sonk\u00e1s-kukoric\u00e1s </ td > < td headers = \"ar\" > 1800 Ft </ td > < td headers = \"extra\" rowspan = \"2\" > Aj\u00e1nd\u00e9k sz\u00f3sz \u00e9s \u00fcd\u00edt\u0151 </ td > </ tr > < tr > < td headers = \"nev\" > N\u00e9gysajtos </ td > < td headers = \"ar\" > 2000 Ft </ td > </ tr > < tr > < td headers = \"nev\" > Hawaii </ td > < td headers = \"ar extra\" colspan = \"2\" > NEM RENDELHET\u0150! </ td > </ tr > </ table > A HTML t\u00e1bl\u00e1zatok sorait lehet\u0151s\u00e9g\u00fcnk van 3 f\u0151 egys\u00e9gre bontani: <thead>...</thead> : fejl\u00e9csorok csoportja <tbody>...</tbody> : adatsorok csoportja, a t\u00e1bl\u00e1zat t\u00f6rzse <tfoot>...</tfoot> : l\u00e1bl\u00e9csorok csoportja. A fenti tagek haszn\u00e1lata opcion\u00e1lis, nem k\u00f6telez\u0151. Haszn\u00e1latuk eset\u00e9n, ha pap\u00edrra nyomtatjuk ki a weboldal tartalm\u00e1t, akkor a hosszabb, t\u00f6bb lapon \u00e1t\u00edvel\u0151 t\u00e1bl\u00e1zatok eset\u00e9n a <thead> \u00e9s a <tfoot> minden nyomtatott oldalon megjelenik. Ha szeretn\u00e9nk a t\u00e1bl\u00e1zat oszlopait csoportos\u00edtani (pl. form\u00e1z\u00e1s c\u00e9lj\u00e1b\u00f3l), akkor ezt a <colgroup>...</colgroup> taggel tehetj\u00fck meg. Ezt k\u00f6zvetlen\u00fcl a <caption> ut\u00e1n (ha van caption) \u00e9s a <thead> el\u00e9 (ha van thead) \u00edrjuk. Az oszlopcsoportos\u00edt\u00e1son bel\u00fcl a <col/> p\u00e1ratlan tag jel\u00f6l egy oszlopot. Ha egyszerre t\u00f6bb, mondjuk N darab oszlopot szeretn\u00e9nk kijel\u00f6lni a csoportos\u00edt\u00e1sban, akkor ezt a <col span=\"N\"/> seg\u00edts\u00e9g\u00e9vel tudjuk megtenni. P\u00e9lda: Az el\u0151z\u0151 t\u00e1bl\u00e1zat kieg\u00e9sz\u00edt\u00e9se a sorok \u00e9s oszlopok csoportos\u00edt\u00e1s\u00e1val 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 < table > < caption > K\u00edn\u00e1latunk </ caption > < colgroup > <!-- az els\u0151 oszlop vil\u00e1gospiros h\u00e1tt\u00e9rsz\u00edn\u0171 lesz --> < col style = \"background-color: salmon;\" /> <!-- a k\u00f6vetkez\u0151 2 oszlop vil\u00e1gosz\u00f6ld h\u00e1tt\u00e9rsz\u00ednt kap --> < col style = \"background-color: lightgreen;\" span = \"2\" /> </ colgroup > < thead > < tr > < th id = \"nev\" > Pizza neve </ th > < th id = \"ar\" > \u00c1r </ th > < th id = \"extra\" > Rendel\u00e9s eset\u00e9n j\u00e1r m\u00e9g </ th > </ tr > </ thead > < tbody > < tr > < td headers = \"nev\" > Sonk\u00e1s-kukoric\u00e1s </ td > < td headers = \"ar\" > 1800 Ft </ td > < td headers = \"extra\" rowspan = \"2\" > Aj\u00e1nd\u00e9k sz\u00f3sz \u00e9s \u00fcd\u00edt\u0151 </ td > </ tr > < tr > < td headers = \"nev\" > N\u00e9gysajtos </ td > < td headers = \"ar\" > 2000 Ft </ td > </ tr > < tr > < td headers = \"nev\" > Hawaii </ td > < td headers = \"ar extra\" colspan = \"2\" > NEM RENDELHET\u0150! </ td > </ tr > </ tbody > <!-- itt m\u00e9g lehetne ak\u00e1r egy <tfoot> is, viszont ez opcion\u00e1lis... --> </ table >","title":"T\u00e1bl\u00e1zatok"},{"location":"gyakorlat/gyak2/#css-alapok","text":"Az eddigiek sor\u00e1n t\u00e1rgyalt HTML nyelvet a weboldal tartalm\u00e1nak kialak\u00edt\u00e1s\u00e1ra \u00e9s struktur\u00e1l\u00e1s\u00e1ra haszn\u00e1ltuk. Ha a tartalmat form\u00e1zni szeretn\u00e9nk, akkor ezt CSS (Cascading Style Sheets) seg\u00edts\u00e9g\u00e9vel tudjuk megtenni.","title":"CSS alapok"},{"location":"gyakorlat/gyak2/#szintaxis","text":"A CSS utas\u00edt\u00e1sok szintaxisa a k\u00f6vetkez\u0151k\u00e9ppen n\u00e9z ki: 1 2 3 4 5 szelektor { tulajdons\u00e1g1: \u00e9rt\u00e9k1; tulajdons\u00e1g2: \u00e9rt\u00e9k2; ... } A szelektor (m\u00e1s n\u00e9ven kijel\u00f6l\u0151 ) seg\u00edts\u00e9g\u00e9vel megmondjuk, hogy a weboldal mely elem\u00e9t (vagy elemeit) szeretn\u00e9nk form\u00e1zni. Ezut\u00e1n kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00f6tt, pontosvessz\u0151vel elv\u00e1lasztva megadjuk az elv\u00e9gzend\u0151 form\u00e1z\u00e1sokat tulajdons\u00e1g: \u00e9rt\u00e9k form\u00e1ban. A tulajdons\u00e1g az adott elem form\u00e1zand\u00f3 tulajdons\u00e1ga (pl. h\u00e1tt\u00e9rsz\u00edn, bet\u0171t\u00edpus, t\u00e9rk\u00f6z stb.), az \u00e9rt\u00e9k pedig az adott tulajdons\u00e1ghoz tartoz\u00f3, be\u00e1ll\u00edtani k\u00edv\u00e1nt \u00e9rt\u00e9k. A CSS k\u00f3dba \u00edrhatunk kommentek et (megjegyz\u00e9seket) is az al\u00e1bbi szintaxissal: 1 /* Ez egy komment a CSS k\u00f3dban */ P\u00e9lda: Egy konkr\u00e9t CSS k\u00f3dr\u00e9szlet 1 2 3 4 5 6 7 8 9 10 11 12 13 /* egy egyszer\u0171bb szelektor \u00e9s n\u00e9h\u00e1ny form\u00e1z\u00e1s */ body { margin : 0 ; /* marg\u00f3 */ padding : 0 ; /* t\u00e9rk\u00f6z */ background-color : #f0f0f0 ; /* h\u00e1tt\u00e9rsz\u00edn */ } /* egy \u00f6sszetettebb szelektor */ # main-content . centered { text-align : center ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1s */ }","title":"Szintaxis"},{"location":"gyakorlat/gyak2/#css-beagyazasa","text":"Egy HTML k\u00f3dba t\u00f6bbf\u00e9lek\u00e9ppen is be\u00e1gyazhatunk CSS form\u00e1z\u00e1sokat. Inline CSS eset\u00e9n a tagek style attrib\u00fatum\u00e1nak \u00e9rt\u00e9kek\u00e9nt adjuk meg a CSS utas\u00edt\u00e1sokat. Ekkor a form\u00e1z\u00e1s mindig csak az adott objektumra lesz \u00e9rv\u00e9nyes. 1 < p style = \"color: blue;\" > I'm blue da ba dee da ba die... </ p > Figyelem Az inline CSS nem hat\u00e9kony, valamint a k\u00f3d \u00e1tl\u00e1that\u00f3s\u00e1g\u00e1t is rontja. Emiatt ha csak lehet, ker\u00fclj\u00fck a haszn\u00e1lat\u00e1t! A lapon bel\u00fcli (internal) CSS -t a <head> -ben adjuk meg, <style> \u00e9s </style> k\u00f6z\u00f6tt. Az \u00edgy kiadott form\u00e1z\u00e1sok az aktu\u00e1lis HTML dokumentumra lesznek \u00e9rv\u00e9nyesek. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS alapok </ title > < meta charset = \"UTF-8\" /> < style > /* az itt kiadott CSS utas\u00edt\u00e1sok az aktu\u00e1lis HTML f\u00e1jlra vonatkoznak */ p { color : blue ; } </ style > </ head > < body > < p > I'm blue da ba dee da ba die... </ p > < p > Da ba dee da ba die... </ p > </ body > </ html > A k\u00fcls\u0151 (external) CSS l\u00e9nyege, hogy a CSS form\u00e1z\u00e1sokat egy k\u00fcls\u0151 (.css kiterjeszt\u00e9s\u0171) f\u00e1jlba \u00edrjuk, majd ezt a f\u00e1jlt \u00e1gyazzuk be a HTML \u00e1llom\u00e1nyunk <head> r\u00e9sz\u00e9ben, a <link/> p\u00e1ratlan tag seg\u00edts\u00e9g\u00e9vel. Ekkor a k\u00fcls\u0151 CSS f\u00e1jlban l\u00e9v\u0151 form\u00e1z\u00e1sok minden olyan HTML dokumentumra \u00e9rv\u00e9nyesek lesznek, amelyek ezt a CSS f\u00e1jlt be\u00e1gyazz\u00e1k. 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS alapok </ title > < meta charset = \"UTF-8\" /> <!-- a main.css nev\u0171 k\u00fcls\u0151 CSS f\u00e1jl be\u00e1gyaz\u00e1sa --> < link rel = \"stylesheet\" href = \"main.css\" /> </ head > < body > <!-- a weboldal tartalma... --> </ body > </ html > Tipp A k\u00fcls\u0151 (external) CSS k\u00fcl\u00f6n\u00f6sen hasznos akkor, amikor egy weboldal t\u00f6bb lapj\u00e1nak szeretn\u00e9nk ugyanazt a form\u00e1z\u00e1st adni.","title":"CSS be\u00e1gyaz\u00e1sa"},{"location":"gyakorlat/gyak2/#alapveto-szelektorok","text":"Ebben a r\u00e9szben megismerked\u00fcnk a n\u00e9gy legalapvet\u0151bb CSS szelektort\u00edpussal, amikkel HTML objektumokat jel\u00f6lhet\u00fcnk ki. A k\u00f6vetkez\u0151 leck\u00e9ben ezek felhaszn\u00e1l\u00e1s\u00e1val \u00f6sszetettebb szelektorokat is k\u00e9sz\u00edt\u00fcnk majd. Elem szelektor : tagn\u00e9v alapj\u00e1n jel\u00f6li ki az \u00f6sszes ugyanolyan t\u00edpus\u00fa HTML elemet Class szelektor : azokat az elemeket jel\u00f6li ki, amelyek az adott class \u00e9rt\u00e9kkel rendelkeznek; az ilyen szelektort ponttal ( . ) kezdj\u00fck Id szelektor : az adott id \u00e9rt\u00e9kkel rendelkez\u0151 elemet jel\u00f6li ki; az ilyen szelektort kett\u0151s kereszttel ( # ) kezdj\u00fck Univerz\u00e1lis szelektor : a * szelektorral az \u00f6sszes HTML objektumot kijel\u00f6lhetj\u00fck P\u00e9lda: A n\u00e9gy alapvet\u0151 szelektor: elem szelektor, class szelektor, id szelektor \u00e9s univerz\u00e1lis szelektor 1 2 3 4 5 6 7 div { /* az itt megadott form\u00e1z\u00e1s minden <div> objektumra vonatkozik */ } . foo { /* az itt megadott form\u00e1z\u00e1s a class=\"foo\" attrib\u00fatummal rendelkez\u0151 elemekre vonatkozik */ } # bar { /* az itt megadott form\u00e1z\u00e1s az id=\"foo\" attrib\u00fatum\u00fa elemre vonatkozik */ } * { /* az itt megadott form\u00e1z\u00e1s minden HTML objektumra vonatkozik */ }","title":"Alapvet\u0151 szelektorok"},{"location":"gyakorlat/gyak2/#ertekek-mertekegysegek","text":"Miel\u0151tt megismern\u00e9nk az els\u0151 konkr\u00e9t, HTML elemek form\u00e1z\u00e1s\u00e1ra szolg\u00e1l\u00f3 CSS utas\u00edt\u00e1sainkat, \u00e9rdemes \u00e1ttekinteni a CSS-ben haszn\u00e1latos fontosabb m\u00e9rt\u00e9kegys\u00e9geket. Hossz\u00fas\u00e1g megad\u00e1sa: abszol\u00fat hossz\u00fas\u00e1g: mm (millim\u00e9ter), cm (centim\u00e9ter), in (inch), pt (pont), pc (pica) relat\u00edv hossz\u00fas\u00e1g: % (m\u00e1s \u00e9rt\u00e9kekb\u0151l sz\u00e1mol\u00f3dik), px (pixel), em (bet\u0171m\u00e9rethez viszony\u00edt), rem (gy\u00f6k\u00e9relem bet\u0171m\u00e9ret\u00e9hez viszony\u00edt), vw (ablaksz\u00e9less\u00e9g 1%-\u00e1hoz viszony\u00edt), vh (ablakmagass\u00e1g 1%-\u00e1hoz viszony\u00edt) Sz\u00f6gek megad\u00e1sa: deg (fok), rad (radi\u00e1n), grad (gradi\u00e1n) Sz\u00ednek megad\u00e1sa: angol n\u00e9vvel - pl. blue decim\u00e1lis RGB-k\u00f3ddal - pl. rgb(0, 0, 255) hexadecim\u00e1lis RGB-k\u00f3ddal - pl. #0000FF A decim\u00e1lis \u00e9s hexadecim\u00e1lis RGB-k\u00f3dokr\u00f3l r\u00e9szletesebben Az addit\u00edv sz\u00ednkever\u00e9s a v\u00f6r\u00f6s ( R ed), z\u00f6ld ( G reen) \u00e9s k\u00e9k ( B lue) alapsz\u00ednekkel dolgozik, \u00e9s ezekb\u0151l kever ki k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00edneket. Az RGB-k\u00f3d (a decim\u00e1lis \u00e9s hexadecim\u00e1lis RGB-k\u00f3d is) azt k\u00f3dolja, hogy az egyes alapsz\u00ednekb\u0151l rendre mekkora mennyis\u00e9get haszn\u00e1ltunk fel egy adott sz\u00edn kikever\u00e9s\u00e9hez. A decim\u00e1lis RGB-k\u00f3d n\u00e1l mindh\u00e1rom sz\u00edn mennyis\u00e9ge 0 \u00e9s 255 k\u00f6z\u00f6tti lehet. P\u00e9ld\u00e1ul az rgb(0, 0, 255) az jelenti, hogy a v\u00f6r\u00f6s (Red) sz\u00edn mennyis\u00e9ge 0, a z\u00f6ld (Green) sz\u00edn mennyis\u00e9ge szint\u00e9n 0, a k\u00e9k (Blue) sz\u00edn mennyis\u00e9ge pedig a maxim\u00e1lis 255 (teh\u00e1t ez a sz\u00ednk\u00f3d \u00e9ppen a k\u00e9k sz\u00ednt k\u00f3dolja). Az egyes sz\u00ednek mennyis\u00e9g\u00e9t itt megadhatjuk sz\u00e1zal\u00e9kosan is, ekkor \u00e9rtelemszer\u0171en 0% \u00e9s 100% k\u00f6z\u00f6tti \u00e9rt\u00e9keket \u00edrunk mindenhova. P\u00e9ld\u00e1ul sz\u00e1zal\u00e9kos megad\u00e1s eset\u00e9n a k\u00e9k sz\u00edn k\u00f3dja a k\u00f6vetkez\u0151 lesz: rgb(0%, 0%, 100%) . A hexadecim\u00e1lis RGB-k\u00f3d is pontosan ugyan\u00edgy m\u0171k\u00f6dik, csak tal\u00e1n els\u0151 r\u00e1n\u00e9z\u00e9sre ez nem annyira vil\u00e1gos. A hexadecim\u00e1lis RGB-k\u00f3dban # (kett\u0151s kereszt) ut\u00e1n 6 darab, tizenhatos sz\u00e1mrendszerbeli sz\u00e1mjegyet adunk meg (teh\u00e1t minden sz\u00e1mjegy 0 \u00e9s F (= 15) k\u00f6z\u00f6tti). Az els\u0151 k\u00e9t sz\u00e1mjegy a v\u00f6r\u00f6s (Red), a m\u00e1sodik kett\u0151 a z\u00f6ld (Green), az utols\u00f3 kett\u0151 pedig a k\u00e9k (Blue) sz\u00edn mennyis\u00e9g\u00e9t k\u00f3dolja. P\u00e9ld\u00e1ul a #0000FF a k\u00e9k sz\u00ednt k\u00f3dolja, hiszen a v\u00f6r\u00f6s \u00e9s z\u00f6ld mennyis\u00e9ge 0, a k\u00e9k mennyis\u00e9ge pedig a maxim\u00e1lis (FF). Ha az adott (v\u00f6r\u00f6s, z\u00f6ld vagy k\u00e9k) sz\u00ednhez tartoz\u00f3 2 sz\u00e1mjegy megegyezik, akkor ezt r\u00f6vid\u00edtve is \u00edrhatjuk. P\u00e9ld\u00e1ul #0066FF helyett azt is \u00edrhatjuk, hogy #06F . A hexadecim\u00e1lis sz\u00ednk\u00f3d nem \u00e9rz\u00e9keny a kis- \u00e9s nagybet\u0171kre (teh\u00e1t p\u00e9ld\u00e1ul #12BD0F \u00e9s #12bd0f ugyanaz). Tipp Nyilv\u00e1n senki nem akarja fejb\u0151l megtanulni az \u00f6sszes l\u00e9tez\u0151 sz\u00ednk\u00f3dot. Szerencs\u00e9re vannak olyan online szoftverek (p\u00e9ld\u00e1ul ez ), amelyekkel manu\u00e1lisan kiv\u00e1laszthatunk egy nek\u00fcnk tetsz\u0151 sz\u00ednt a sz\u00ednpalett\u00e1r\u00f3l, \u00e9s megtudhatjuk annak az RGB-k\u00f3dj\u00e1t.","title":"\u00c9rt\u00e9kek, m\u00e9rt\u00e9kegys\u00e9gek"},{"location":"gyakorlat/gyak2/#szovegek-formazasa","text":"Az al\u00e1bbiakban \u00e1ttekintj\u00fck a sz\u00f6vegekkel kapcsolatos fontosabb CSS form\u00e1z\u00e1sokat. font-family : bet\u0171t\u00edpus \u00e9rt\u00e9kek\u00e9nt t\u00f6bb bet\u0171t\u00edpus is felsorolhat\u00f3 vessz\u0151vel elv\u00e1lasztva - ekkor a felsoroltak k\u00f6z\u00fcl a legels\u0151 telep\u00edtett bet\u0171t\u00edpus lesz be\u00e1ll\u00edtva a t\u00f6bb sz\u00f3b\u00f3l \u00e1ll\u00f3 bet\u0171t\u00edpusok nev\u00e9t (pl. Courier New) aposztr\u00f3fok k\u00f6z\u00f6tt ( '...' ) adjuk meg font-size : bet\u0171m\u00e9ret font-weight : bet\u0171vastags\u00e1g lehets\u00e9ges \u00e9rt\u00e9kei: normal (alap\u00e9rtelmezett vastags\u00e1g), bold (vastag), bolder (vastagabb), lighter (v\u00e9konyabb), 100 \u00e9s 900 k\u00f6z\u00f6tti sz\u00e1m font-style: italic - d\u0151lt bet\u0171ss\u00e9 t\u00e9tel color : bet\u0171sz\u00edn text-align : sz\u00f6veg v\u00edzszintes igaz\u00edt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: left (balra), right (jobbra), center (k\u00f6z\u00e9pre), justify (sorkiz\u00e1rt) text-transform : sz\u00f6veg \u00e1talak\u00edt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: uppercase (csupa nagybet\u0171s), lowercase (csupa kisbet\u0171s), capitalize (minden sz\u00f3 els\u0151 bet\u0171je nagybet\u0171), none (alap\u00e9rtelmezett) P\u00e9lda: N\u00e9h\u00e1ny sz\u00f6vegform\u00e1z\u00e1s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Sz\u00f6vegform\u00e1z\u00e1sok </ title > < meta charset = \"UTF-8\" /> < style > p { font-family : Arial , Verdana , sans-serif ; font-size : 20 px ; font-weight : bold ; color : darkblue ; } span { font-family : 'Courier New' ; font-style : italic ; color : #F00 ; /* v\u00f6r\u00f6s */ } </ style > </ head > < body > < p > A h\u00e1zimacska < span > (Felis silvestris catus) </ span > \u00e9letm\u00f3dja \u00e9s viselked\u00e9se </ p > </ body > </ html >","title":"Sz\u00f6vegek form\u00e1z\u00e1sa"},{"location":"gyakorlat/gyak2/#a-dobozmodell","text":"Minden HTML objektum felfoghat\u00f3 egy t\u00e9glalap alak\u00fa dobozk\u00e9nt. CSS-ben gyakran haszn\u00e1ljuk a dobozmodell fogalmat, amikor elemek elrendez\u00e9s\u00e9r\u0151l \u00e9s diz\u00e1jnol\u00e1s\u00e1r\u00f3l besz\u00e9l\u00fcnk. N\u00e9zz\u00fck meg az al\u00e1bbi \u00e1br\u00e1n, hogy mik is ennek a dobozmodellnek a r\u00e9szei! A content jelenti a doboz tartalm\u00e1t, ami \u00e1ltal\u00e1ban az elem sz\u00f6veges tartalma vagy egy k\u00e9p. A padding a tartalom k\u00f6r\u00fcl tal\u00e1lhat\u00f3 bels\u0151 t\u00e9rk\u00f6z. A border a tartalmon \u00e9s a bels\u0151 t\u00e9rk\u00f6z\u00f6n k\u00edv\u00fcl elhelyezkd\u0151 szeg\u00e9ly. A margin a szeg\u00e9lyen k\u00edv\u00fcl tal\u00e1lhat\u00f3 k\u00fcls\u0151 marg\u00f3.","title":"A dobozmodell"},{"location":"gyakorlat/gyak2/#elemek-meretezese","text":"Miut\u00e1n megismert\u00fck a CSS dobozmodellt, besz\u00e9lhet\u00fcnk a HTML elemek m\u00e9ret\u00e9r\u0151l (sz\u00e9less\u00e9g\u00e9r\u0151l \u00e9s magass\u00e1g\u00e1r\u00f3l). Egy elem sz\u00e9less\u00e9g\u00e9t a width , magass\u00e1g\u00e1t pedig a height CSS tulajdons\u00e1ggal adhatjuk meg. Ezek \u00e9rt\u00e9kek\u00e9nt megadhat\u00f3 a fentebb t\u00e1rgyalt abszol\u00fat \u00e9s relat\u00edv hossz\u00fas\u00e1gm\u00e9rt\u00e9kek valamelyike, vagy az auto speci\u00e1lis \u00e9rt\u00e9k (ekkor a b\u00f6ng\u00e9sz\u0151 hat\u00e1rozza meg a m\u00e9retet). Ehhez hasonl\u00f3an a min-width , max-width , min-height \u00e9s max-height tulajdons\u00e1gokkal rendre megadhatjuk egy elem minim\u00e1lis \u00e9s maxim\u00e1lis sz\u00e9less\u00e9g\u00e9t, valamint minim\u00e1lis \u00e9s maxim\u00e1lis magass\u00e1g\u00e1t. \u00c9rdemes megjegyezni, hogy egy HTML elem t\u00e9nyleges m\u00e9ret\u00e9be a tartalom, a bels\u0151 t\u00e9rk\u00f6z\u00f6k ( padding ) \u00e9s a szeg\u00e9lyek ( border ) is belesz\u00e1m\u00edtanak. N\u00e9zz\u00fck meg egy egyszer\u0171 p\u00e9ld\u00e1n, hogy mit jelent ez! P\u00e9lda Legyen adott egy 300 pixel sz\u00e9les HTML elem, amelyet egy minden ir\u00e1nyb\u00f3l 10 pixel sz\u00e9les bels\u0151 t\u00e9rk\u00f6z (padding) vesz k\u00f6rbe! Ezen k\u00edv\u00fcl rendelkezzen ez az elem egy minden ir\u00e1nyb\u00f3l 5 pixel vastag szeg\u00e9llyel is! Ekkor az elem t\u00e9nyleges sz\u00e9less\u00e9ge 330 pixel lesz. Ez \u00fagy j\u00f6n ki, hogy \u00f6sszeadjuk az eredeti sz\u00e9less\u00e9get (300 pixel), a bal \u00e9s jobb oldali, egyenk\u00e9nt 10 pixel sz\u00e9les padding-et (20 pixel), valamint a bal \u00e9s jobb oldali, egyenk\u00e9nt 5 pixel sz\u00e9les szeg\u00e9lyt (10 pixel). Az \u00f6sszeg val\u00f3ban 300+20+10 = 330 pixel lesz.","title":"Elemek m\u00e9retez\u00e9se"},{"location":"gyakorlat/gyak2/#terkozok-megadasa","text":"A padding-top , padding-right , padding-bottom \u00e9s padding-left CSS tulajdons\u00e1gokkal be\u00e1ll\u00edthatjuk egy elem fels\u0151, jobb oldali, als\u00f3 \u00e9s bal oldali t\u00e9rk\u00f6z\u00e9nek a m\u00e9rt\u00e9k\u00e9t. Ezek a jellemz\u0151k \u00f6sszevonva is megadhat\u00f3k a padding tulajdons\u00e1ggal, amelynek \u00e9rt\u00e9kek\u00e9nt megadjuk sorban a fels\u0151, jobb, als\u00f3 \u00e9s v\u00e9g\u00fcl a bal t\u00e9rk\u00f6z m\u00e9rt\u00e9k\u00e9t. Ha ezek k\u00f6z\u00fcl valamelyik param\u00e9tert elhagyjuk, akkor az a szemk\u00f6zti oldalt\u00f3l fogja \u00f6r\u00f6k\u00f6lni az \u00e9rt\u00e9ket. P\u00e9lda: T\u00e9rk\u00f6z megad\u00e1sa a padding tulajdons\u00e1ggal 1 2 3 4 5 6 7 8 9 10 . pelda1 { /* fels\u0151 t\u00e9rk\u00f6z: 10px, jobb t\u00e9rk\u00f6z: 20px, als\u00f3 t\u00e9rk\u00f6z: 30px, bal t\u00e9rk\u00f6z: 40px */ padding : 10 px 20 px 30 px 40 px ; } . pelda2 { /* fels\u0151 t\u00e9rk\u00f6z: 0px, jobb t\u00e9rk\u00f6z: 10px, als\u00f3 t\u00e9rk\u00f6z: 0px, bal t\u00e9rk\u00f6z: 10px */ /* (mert az als\u00f3 t\u00e9rk\u00f6z a fels\u0151t\u0151l, a bal t\u00e9rk\u00f6z a jobbt\u00f3l \u00f6r\u00f6kli a m\u00e9retet) */ padding : 0 10 px ; }","title":"T\u00e9rk\u00f6z\u00f6k megad\u00e1sa"},{"location":"gyakorlat/gyak2/#margok-megadasa","text":"Nagyon hasonl\u00f3an, mint ahogy azt a t\u00e9rk\u00f6z\u00f6kn\u00e9l l\u00e1ttuk, a marg\u00f3k is megadhat\u00f3k... ...k\u00fcl\u00f6n-k\u00fcl\u00f6n, a margin-top , margin-right , margin-bottom \u00e9s margin-left tulajdons\u00e1gokkal ...\u00f6sszevonva, a margin tulajdons\u00e1ggal (fels\u0151-jobb-als\u00f3-bal sorrendben itt is - ha valamelyik marg\u00f3 m\u00e9ret\u00e9t nem adjuk meg, akkor a szemk\u00f6zti oldalt\u00f3l \u00f6r\u00f6kli azt). A margin-left \u00e9s margin-right tulajdons\u00e1gokn\u00e1l az auto \u00e9rt\u00e9ket felhaszn\u00e1lhatjuk az elem v\u00edzszintes igaz\u00edt\u00e1s\u00e1ra: margin-left: auto : v\u00edzszintesen jobbra igaz\u00edtja az elemet margin-right: auto : v\u00edzszintesen balra igaz\u00edtja az elemet ha mind a bal, mind a jobb marg\u00f3 \u00e9rt\u00e9ke auto , akkor v\u00edzszintesen k\u00f6z\u00e9pre igazodik az elem. P\u00e9lda: Elem v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A CSS dobozmodell </ title > < meta charset = \"UTF-8\" /> < style > div { border : 3 px solid black ; /* szeg\u00e9ly (a szeml\u00e9letess\u00e9g kedv\u00e9\u00e9rt) */ } . centered { width : 300 px ; /* az elem sz\u00e9less\u00e9g\u00e9t 300 pixelre cs\u00f6kkentj\u00fck */ margin-left : auto ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edtjuk az elemet */ margin-right : auto ; text-align : center ; /* a sz\u00f6veges tartalmat is k\u00f6z\u00e9pre igaz\u00edtjuk */ } </ style > </ head > < body > < div class = \"centered\" > Ezt akarjuk k\u00f6z\u00e9pre igaz\u00edtani... </ div > </ body > </ html >","title":"Marg\u00f3k megad\u00e1sa"},{"location":"gyakorlat/gyak2/#szegelyek-megadasa","text":"A HTML elem k\u00f6r\u00fcli szeg\u00e9lyek be\u00e1ll\u00edt\u00e1s\u00e1ra a border CSS tulajdons\u00e1g szolg\u00e1l. Ennek \u00e9rt\u00e9kek\u00e9nt 3 param\u00e9tert adunk meg: rendre a szeg\u00e9ly vastags\u00e1g\u00e1t, st\u00edlus\u00e1t \u00e9s sz\u00edn\u00e9t. Ezeket egy\u00e9bk\u00e9nt k\u00fcl\u00f6n-k\u00fcl\u00f6n is megadhatjuk a border-width , border-style \u00e9s border-color tulajdons\u00e1gokkal. A szeg\u00e9ly vastags\u00e1ga ( border-width ) lehet a thin (v\u00e9kony), medium (k\u00f6zepes) \u00e9s thick (vastag) kulcsszavak valamelyike, de ha enn\u00e9l pontosabbak szeretn\u00e9nk lenni, akkor ak\u00e1r pixelben is megadhatjuk a szeg\u00e9lyvastags\u00e1got. A szeg\u00e9ly st\u00edlus\u00e1nak ( border-style ) \u00e9rt\u00e9ke lehet solid (folytonos), dashed (szaggatott), dotted (pontozott), double (dupla), groove (faragott), ridge (kidomborod\u00f3), outset (kiemelked\u0151), inset (s\u00fcllyesztett), none (nincs szeg\u00e9ly) vagy hidden (rejtett). Ha nem szeretn\u00e9nk minden ir\u00e1nyb\u00f3l szeg\u00e9lyt adni egy objektumnak, akkor a border-top , border-right , border-bottom \u00e9s border-left tulajdons\u00e1gokkal k\u00fcl\u00f6n-k\u00fcl\u00f6n is megadhatjuk a fels\u0151, jobb, als\u00f3 \u00e9s bal szeg\u00e9lyek \u00e9rt\u00e9k\u00e9t. P\u00e9lda: Szeg\u00e9lyek megad\u00e1sa 1 2 3 4 5 6 7 8 9 . pelda1 { /* 3 pixel vastag, folytonos fekete szeg\u00e9ly minden ir\u00e1nyb\u00f3l */ border : 3 px solid black ; } . pelda2 { /* vastag, dupla vonalas, piros sz\u00edn\u0171 als\u00f3 szeg\u00e9ly */ border-bottom : thick double red ; }","title":"Szeg\u00e9lyek megad\u00e1sa"},{"location":"gyakorlat/gyak2/#a-hatter-formazasa","text":"Ebben a r\u00e9szben megismerked\u00fcnk n\u00e9h\u00e1ny fontosabb, a h\u00e1tt\u00e9r form\u00e1z\u00e1s\u00e1val kapcsolatos CSS tulajdons\u00e1ggal. background-color : h\u00e1tt\u00e9rsz\u00edn \u00e9rt\u00e9kek\u00e9nt megadhat\u00f3 egy sz\u00edn vagy a transparent (\u00e1tl\u00e1tsz\u00f3) kulcssz\u00f3 background-image : h\u00e1tt\u00e9rk\u00e9p a h\u00e1tt\u00e9rk\u00e9nt be\u00e1ll\u00edtani k\u00edv\u00e1nt k\u00e9p el\u00e9r\u00e9si \u00fatvonal\u00e1t az url('el\u00e9r\u00e9si_\u00fatvonal') seg\u00edts\u00e9g\u00e9vel adjuk meg background-repeat : h\u00e1tt\u00e9rk\u00e9p ism\u00e9tl\u0151d\u00e9se lehets\u00e9ges \u00e9rt\u00e9kek: repeat (v\u00edzszintes \u00e9s f\u00fcgg\u0151leges ism\u00e9tl\u0151d\u00e9s, alap\u00e9rtelmezett), repeat-x (v\u00edzszintes ism\u00e9tl\u0151d\u00e9s), repeat-y (f\u00fcgg\u0151leges ism\u00e9tl\u0151d\u00e9s), no-repeat (nem ism\u00e9tli) background-position : h\u00e1tt\u00e9rk\u00e9p poz\u00edci\u00f3ja k\u00e9t \u00e9rt\u00e9ket v\u00e1r: rendre a v\u00edzszintes \u00e9s a f\u00fcgg\u0151leges poz\u00edci\u00f3t a v\u00edzszintes poz\u00edci\u00f3 \u00e9rt\u00e9kei: left (bal), right (jobb), center (k\u00f6z\u00e9pre) a f\u00fcgg\u0151leges poz\u00edci\u00f3 \u00e9rt\u00e9kei: top (fent), bottom (lent), center (k\u00f6z\u00e9pre) a fenti kulcsszavak helyett megadhat\u00f3k sz\u00e1zal\u00e9kos \u00e9rt\u00e9kek is a poz\u00edci\u00f3k hely\u00e9n nem k\u00f6telez\u0151 mindk\u00e9t \u00e9rt\u00e9ket megadni (ha elhagyjuk a m\u00e1sodik param\u00e9tert, akkor f\u00fcgg\u0151legesen k\u00f6z\u00e9pre lesz poz\u00edcion\u00e1lva az elem) background-size : h\u00e1tt\u00e9rk\u00e9p m\u00e9rete k\u00e9t \u00e9rt\u00e9ket v\u00e1r: rendre a v\u00edzszintes \u00e9s a f\u00fcgg\u0151leges m\u00e9retet nem k\u00f6telez\u0151 mindk\u00e9t \u00e9rt\u00e9ket megadni megadhat\u00f3 abszol\u00fat vagy relat\u00edv hossz, vagy a lenti kulcsszavak valamelyike auto : automatikus (alap\u00e9rtelmezett) cover : kit\u00f6lti a h\u00e1tteret az eredeti m\u00e9retar\u00e1nyok megtart\u00e1s\u00e1val contain : a legnagyobb m\u00e9retre sk\u00e1l\u00e1z, az eredeti m\u00e9retar\u00e1nyok megtart\u00e1s\u00e1val Tipp A h\u00e1tt\u00e9r tulajdons\u00e1gai \u00f6sszevonva is megadhat\u00f3k a background CSS tulajdons\u00e1ggal. B\u0151vebben itt . A linear-gradient() \u00e9s radial-gradient() f\u00fcggv\u00e9nyek seg\u00edts\u00e9g\u00e9vel sz\u00edn\u00e1tmenetes h\u00e1ttereket is haszn\u00e1lhatunk. B\u0151vebb le\u00edr\u00e1s itt \u00e9s itt . P\u00e9lda: Teljes k\u00e9perny\u0151s h\u00e1tt\u00e9rk\u00e9p 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Teljes k\u00e9perny\u0151s h\u00e1tt\u00e9rk\u00e9p </ title > < meta charset = \"UTF-8\" /> < style > html , body { height : 100 % ; margin : 0 ; } body { background : url ( 'bg.jpg' ) center / cover no-repeat ; } h1 { background-color : darkblue ; /* a r\u00e9gebbi b\u00f6ng\u00e9sz\u0151k lehet, hogy nem ismerik a linear-gradient()-et */ background : linear-gradient ( 90 deg , darkblue , blue ); color : #fff ; text-align : center ; margin-top : 0 ; font-family : Arial , sans-serif ; } </ style > </ head > < body > < h1 > \u00dcdv\u00f6z\u00f6llek a weboldalamon! </ h1 > </ body > </ html >","title":"A h\u00e1tt\u00e9r form\u00e1z\u00e1sa"},{"location":"gyakorlat/gyak2/#elem-megjelenitese","text":"A HTML elemek megjelen\u00edt\u00e9s\u00e9t a display CSS tulajdons\u00e1ggal szab\u00e1lyozhatjuk. N\u00e9h\u00e1ny lehets\u00e9ges \u00e9rt\u00e9ke: inline : sorszint\u0171 elem (sz\u00e9less\u00e9g\u00e9t a tartalom sz\u00e9less\u00e9ge hat\u00e1rozza meg, nem kezd\u0151dik \u00faj sorban) block : blokkszint\u0171 elem (sz\u00e9less\u00e9ge a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9g, \u00faj sorban kezd\u0151dik) inline-block : inline, de megadhat\u00f3k a m\u00e9retei (sz\u00e9less\u00e9ge, magass\u00e1ga) none : elem elt\u00fcntet\u00e9se manaps\u00e1g nagy n\u00e9pszer\u0171s\u00e9gnek \u00f6rvend m\u00e9g a flexbox \u00e9s a grid . P\u00e9lda: K\u00e9p v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa, elem elt\u00fcntet\u00e9se 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A display tulajdons\u00e1g </ title > < meta charset = \"UTF-8\" /> < style > /* k\u00e9p v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1sa */ # my-pic { display : block ; /* el\u0151sz\u00f6r blokkszint\u0171v\u00e9 tessz\u00fck */ margin : 0 auto ; /* azt\u00e1n a v\u00edzszintes marg\u00f3kat auto-ra \u00e1ll\u00edtjuk */ } /* elem elt\u00fcntet\u00e9se */ . magical { display : none ; } </ style > </ head > < body > < img id = \"my-pic\" src = \"cat.jpg\" alt = \"Egy klassz macsek\" /> < p class = \"magical\" > Sitty-sutty, elt\u00fcntem </ p > < p > \u00c9n pedig itt maradtam </ p > </ body > </ html >","title":"Elem megjelen\u00edt\u00e9se"},{"location":"gyakorlat/gyak3/","text":"3. gyakorlat \u00b6 A gyakorlat anyaga \u00b6 A HTML5 szemantikus tagek \u00e9s a HTML DOM. Tov\u00e1bbi CSS form\u00e1z\u00e1sok, \u00f6sszetettebb szelektorok, \u00f6r\u00f6kl\u0151d\u00e9s \u00e9s rangsor, helyzetmegad\u00e1s. A HTML5 szemantikus tagek \u00b6 Az 1. gyakorlaton l\u00e1ttunk p\u00e9ld\u00e1t a weboldalak tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra. Eml\u00e9keztet\u0151\u00fcl: a <div> \u00e9s <span> tagekkel \u00e1ltal\u00e1nos c\u00e9l\u00fa szakaszokat, tartalmi egys\u00e9geket alak\u00edtottunk ki. A <div> egy blokkszint\u0171 (block) objektum, ami azt jelenti, hogy mindig \u00faj sorban kezd\u0151dik, \u00e9s kihaszn\u00e1lja a teljes rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get. Ezzel szemben a <span> egy sorszint\u0171 (inline) elem, teh\u00e1t nem kezd\u0151dik \u00faj sorban, \u00e9s sz\u00e9less\u00e9ge is csak akkora, mint amekkora helyre sz\u00fcks\u00e9ge van. A HTML5 szabv\u00e1nyban ezen \u00e1ltal\u00e1nos c\u00e9l\u00fa szakaszok mell\u00e9 \u00faj, szemantikus jelent\u00e9ssel b\u00edr\u00f3 struktur\u00e1lis elemeket vezettek be: <header>...</header> : az oldal vagy egy tartalmi egys\u00e9g fejl\u00e9ce <footer>...</footer> : az oldal vagy egy tartalmi egys\u00e9g l\u00e1bl\u00e9ce <nav>...</nav> : navig\u00e1ci\u00f3s men\u00fc <aside>...</aside> : \u00e9rint\u0151legesen kapcsol\u00f3d\u00f3 tartalom (jellemz\u0151en oldals\u00e1v) <main>...</main> : f\u0151 tartalom <section>...</section> : logikai egys\u00e9g <article>...</article> : \u00f6n\u00e1ll\u00f3 tartalom. A fenti tagek kiv\u00e9tel n\u00e9lk\u00fcl blokkszint\u0171 (block) elemek (a <div> -hez hasonl\u00f3an). Ezek a tagek - az \u00e1ltal\u00e1nos c\u00e9l\u00fa <div> \u00e9s <span> tagekkel ellent\u00e9tben - szemantikai jelent\u00e9ssel b\u00edrnak, teh\u00e1t egy\u00e9rtelm\u0171en meghat\u00e1rozz\u00e1k a tartalmuk jelent\u00e9s\u00e9t (pl. egy <header> -r\u0151l tudjuk, hogy egy fejl\u00e9cet jel\u00f6l). A HTML5-ben bevezetett szemantikus tageket felhaszn\u00e1lva prec\u00edzebben le\u00edrhatjuk egy weboldal szerkezet\u00e9t. Felhaszn\u00e1l\u00e1sukkal p\u00e9ld\u00e1ul k\u00e9sz\u00edthet\u00fcnk az al\u00e1bbihoz hasonl\u00f3 elrendez\u00e9s\u0171 weboldalt. Megjegyz\u00e9s Ahhoz, hogy az \u00e1br\u00e1n l\u00e1totthoz hasonl\u00f3 elrendez\u00e9st kapjunk, a tanult tagek haszn\u00e1lata \u00f6nmag\u00e1ban nem elegend\u0151 (pl. az <aside> nem fog automatikusan oldalra ker\u00fclni). Az elemek helyzet\u00e9nek megad\u00e1s\u00e1ra a CSS-beli pozicion\u00e1l\u00e1st haszn\u00e1lhatjuk. A HTML DOM \u00b6 Val\u00f3sz\u00edn\u0171leg mindenkinek felt\u0171nt, hogy a HTML dokumentumok l\u00e9nyeg\u00e9ben HTML objektumok (tagek) egym\u00e1sba \u00e1gyaz\u00e1s\u00e1b\u00f3l \u00e1llnak. Ezek az objektumok egy hierarchikus fastrukt\u00far\u00e1t alkotnak a dokumentumban. Amikor egy weboldal bet\u00f6lt\u0151dik, akkor a b\u00f6ng\u00e9sz\u0151 elk\u00e9sz\u00edti a HTML objektumokb\u00f3l az \u00fagynevezett dokumentum-objektum modellt - ezt a tov\u00e1bbiakban r\u00f6viden csak DOM-nak fogjuk nevezni. A DOM fa (DOM tree) seg\u00edts\u00e9g\u00e9vel k\u00f6nnyen \u00e1tl\u00e1thatjuk a HTML elemek hierarchikus viszonyait. P\u00e9lda: Egy egyszer\u0171 HTML k\u00f3d \u00e9s a hozz\u00e1 tartoz\u00f3 DOM fa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Az oldal c\u00edme </ h1 > < img src = \"my-image.png\" alt = \"Valami klassz k\u00e9p\" /> < p > < a href = \"https://u-szeged.hu\" > SZTE </ a > </ p > </ body > </ html > HTML objektumok viszonyai \u00b6 Ahhoz, hogy a tov\u00e1bbiakban egyszer\u0171en tudjunk besz\u00e9lni a HTML objektumok viszonyair\u00f3l, bevezet\u00fcnk n\u00e9h\u00e1ny fogalmat. Ha az A objektum k\u00f6zvetlen\u00fcl tartalmazza a B objektumot, akkor azt mondjuk, hogy az A objektum a B objektum sz\u00fcl\u0151 je, a B objektum pedig A gyerek e. P\u00e9ld\u00e1ul a fenti k\u00f3dban \u00e9s az ahhoz tartoz\u00f3 DOM f\u00e1ban a <body> objektum a <h1> , <img> \u00e9s <p> elemek sz\u00fcl\u0151je, vagy m\u00e1sk\u00e9pp mondva: a <h1> , <img> \u00e9s <p> elemek a <body> gyerekei. Az viszont p\u00e9ld\u00e1ul nem igaz, hogy az <a> objektum a <body> gyereke lenne, hiszen itt a tartalmaz\u00e1s nem k\u00f6zvetlen. Ha az A \u00e9s B objektumok sz\u00fcl\u0151je megegyezik, akkor A \u00e9s B egym\u00e1s testv\u00e9r ei. P\u00e9ld\u00e1ul a fenti k\u00f3dban \u00e9s az ahhoz tartoz\u00f3 DOM f\u00e1ban a <h1> , <img> \u00e9s <p> objektumok egym\u00e1s testv\u00e9rei, hiszen mindh\u00e1rom objektum sz\u00fcl\u0151je a <body> . A DOM fa tetej\u00e9n l\u00e9v\u0151, sz\u00fcl\u0151vel nem rendelkez\u0151 elemet gy\u00f6k\u00e9relem nek nevezz\u00fck. A teljes HTML DOM-ban ez a gy\u00f6k\u00e9relem mindig a <html> tag lesz (ugyanis ebbe \u00e1gyazunk be minden tov\u00e1bbi HTML elemet). A DOM gyakorlati jelent\u0151s\u00e9ge \u00b6 A k\u00f6vetkez\u0151 fejezetben l\u00e1tni fogjuk, hogy CSS-ben haszn\u00e1lunk olyan szelektorokat is, amelyek egym\u00e1shoz val\u00f3 viszonyuk alapj\u00e1n jel\u00f6lnek ki HTML objektumokat. Emellett a webes vil\u00e1gban gyakran el\u0151fordul, hogy a DOM f\u00e1t manipul\u00e1lni szeretn\u00e9nk - pl. szeretn\u00e9nk egy objektumot m\u00f3dos\u00edtani vagy t\u00f6r\u00f6lni, esetleg egy \u00faj objektumot akarunk a f\u00e1ba besz\u00farni. Erre biztos\u00edtanak lehet\u0151s\u00e9get a JavaScript DOM-m\u0171veletei. Ezen a kurzuson nem t\u00e1rgyaljuk a JavaScriptet, viszont a Szkriptnyelvek \u00e9s Multim\u00e9dia kurzusokon r\u00e9szletesen tanulhatunk a k\u00fcl\u00f6nb\u00f6z\u0151 DOM-manipul\u00e1ci\u00f3s lehet\u0151s\u00e9gekr\u0151l. Tov\u00e1bbi CSS szelektorok \u00b6 A m\u00falt \u00f3r\u00e1n megismerkedt\u00fcnk a legalapvet\u0151bb CSS szelektorokkal (elem szelektor, class szelektor, id szelektor, univerz\u00e1lis szelektor). Ebben a r\u00e9szben n\u00e9h\u00e1ny tov\u00e1bbi szelektort\u00edpusr\u00f3l fogunk tanulni. Megjegyz\u00e9s A gyakorlaton csak a gyakrabban haszn\u00e1lt szelektorokat t\u00e1rgyaljuk. Ezek mellett vannak m\u00e9g egy\u00e9b kijel\u00f6l\u0151k is, amelyeknek a r\u00e9szletes list\u00e1j\u00e1t megtal\u00e1lhatjuk itt . Szelektorok csoportos\u00edt\u00e1sa \u00b6 Amikor t\u00f6bb szelektorra is ugyanazok a form\u00e1z\u00e1sok vonatkoznak, akkor a szelektorokat vessz\u0151vel elv\u00e1lasztva soroljuk fel egym\u00e1s ut\u00e1n. P\u00e9lda: Az \u00f6sszes <h1> \u00e9s <h2> objektum, valamint a class=\"warning\" attrib\u00fatummal rendelkez\u0151 elemek piros bet\u0171sz\u00edn\u0171v\u00e9 t\u00e9tele 1 2 3 h1 , h2 , . warning { color : red ; } Kijel\u00f6l\u00e9s kapcsolat alapj\u00e1n \u00b6 CSS-ben haszn\u00e1lunk olyan szelektorokat is, amelyek egym\u00e1shoz val\u00f3 viszonyaik, kapcsolataik alapj\u00e1n jel\u00f6lnek ki elemeket: E1 E2 : minden olyan E2 elemet kijel\u00f6l, amely egy E1 -ben tal\u00e1lhat\u00f3 E1 > E2 minden olyan E2 -t kijel\u00f6l, amelynek k\u00f6zvetlen sz\u00fcl\u0151je E1 E1 ~ E2 : minden olyan E2 -t kijel\u00f6l, amely E1 -nek testv\u00e9re \u00e9s E1 ut\u00e1n k\u00f6vetkezik a k\u00f3dban E1 + E2 : minden olyan E2 -t kijel\u00f6l, amely E1 -nek testv\u00e9re \u00e9s k\u00f6zvetlen\u00fcl E1 ut\u00e1n k\u00f6vetkezik a k\u00f3dban. P\u00e9lda: A body p szelektor kijel\u00f6li az \u00f6sszes olyan bekezd\u00e9st, ami a <body> -ban tal\u00e1lhat\u00f3. A body > p azokat a bekezd\u00e9seket jel\u00f6li ki, amelyeknek k\u00f6zvetlen sz\u00fcl\u0151je a <body> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> < style > body p { background-color : lightblue ; } /* vil\u00e1gosk\u00e9k h\u00e1tt\u00e9r */ body > p { border : 3 px solid darkred ; } /* s\u00f6t\u00e9tv\u00f6r\u00f6s szeg\u00e9ly */ </ style > </ head > < body > < p > Els\u0151 bekezd\u00e9s </ p > < div > < p > M\u00e1sodik bekezd\u00e9s </ p > </ div > < p > Harmadik bekezd\u00e9s </ p > </ body > </ html > P\u00e9lda: A p ~ p szelektor kijel\u00f6l minden olyan bekezd\u00e9st, amely egy m\u00e1sik bekezd\u00e9s testv\u00e9re \u00e9s valahol a m\u00e1sik bekezd\u00e9s ut\u00e1n tal\u00e1lhat\u00f3 a k\u00f3dban. A p + p szelektorn\u00e1l m\u00e9g azt is megk\u00f6vetelj\u00fck, hogy k\u00f6zvetlen\u00fcl (r\u00f6gt\u00f6n) a m\u00e1sik bekezd\u00e9s ut\u00e1n szerepeljen az elem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> < style > p ~ p { background-color : lightblue ; } /* vil\u00e1gosk\u00e9k h\u00e1tt\u00e9r */ p + p { border : 3 px solid darkred ; } /* s\u00f6t\u00e9tv\u00f6r\u00f6s szeg\u00e9ly */ </ style > </ head > < body > < p > Els\u0151 bekezd\u00e9s </ p > < div > < p > M\u00e1sodik bekezd\u00e9s </ p > </ div > < p > Harmadik bekezd\u00e9s </ p > < p > Negyedik bekezd\u00e9s </ p > </ body > </ html > A kapcsolat alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9sre haszn\u00e1lhatunk m\u00e9g \u00fagynevezett pseudo-class -okat is, a szelektor:pseudoclass szintaxissal. Ez a szintaxis a szelektor \u00e1ltal kijel\u00f6lt elemek k\u00f6z\u00fcl kiv\u00e1laszt minden olyant, amelyre pseudoclass teljes\u00fcl. N\u00e9zz\u00fcnk n\u00e9h\u00e1ny fontosabb p\u00e9ld\u00e1t pseudo-class-okra, a teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl! E1:first-child : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek legels\u0151 gyereke E1:nth-child(n) : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek n -edik gyereke E1:last-child : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek az utols\u00f3 gyereke E1:first-of-type : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl a legels\u0151 E1:nth-of-type(n) : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az n -edik E1:last-of-type : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az utols\u00f3 P\u00e9lda: N\u00e9h\u00e1ny pseudo-class haszn\u00e1lata egy t\u00e1bl\u00e1zatra 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > tr : first-of-type { /* Minden olyan <tr>, aki a <tr> t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl a legels\u0151 */ background-color : #CC6633 ; color : white ; } tr : nth-child ( even ) { /* Minden olyan <tr>, aki a sz\u00fcl\u0151j\u00e9nek p\u00e1rosadik (2., 4., 6., ...) gyereke */ background-color : #F2F2F2 ; } td : last-of-type { /* Minden olyan <td>, aki a <td> t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az utols\u00f3 */ color : darkred ; } th , td { padding : 5 px ; } </ style > </ head > < body > < table > < tr > < th > Pizza neve </ th > < th > \u00c1r </ th > </ tr > < tr > < td > Sonk\u00e1s-kukoric\u00e1s </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > Kolb\u00e1szos </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > N\u00e9gysajtos </ td > < td > 2000 Ft </ td > </ tr > < tr > < td > Veget\u00e1ri\u00e1nius </ td > < td > 2200 Ft </ td > </ tr > </ table > </ body > </ html > Kijel\u00f6l\u00e9s attrib\u00fatum alapj\u00e1n \u00b6 A HTML elemeket attrib\u00fatumaik alapj\u00e1n is ki tudjuk jel\u00f6lni CSS-ben. A k\u00e9t legalapvet\u0151bb szelektort\u00edpus erre a c\u00e9lra: E1[attr] : kijel\u00f6li az \u00f6sszes olyan E1 -et, amely rendelkezik az attr attrib\u00fatummal E1[attr=\"val\"] : kijel\u00f6li az \u00f6sszes olyan E1 -et, amelynek attr attrib\u00fatum\u00e1nak \u00e9rt\u00e9ke val . P\u00e9lda: Az a[target] szelektor kijel\u00f6l minden olyan hivatkoz\u00e1st, amely rendelkezik a target attrib\u00fatummal. Az a[target=\"_blank\"] azokat a hivatkoz\u00e1sokat jel\u00f6li ki, amelyek target attrib\u00fatum\u00e1nak \u00e9rt\u00e9ke _blank . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > a { margin-right : 10 px ; } a [ target ] { text-transform : uppercase ; font-weight : bold ; } /* f\u00e9lk\u00f6v\u00e9r, nagybet\u0171s */ a [ target = \"_blank\" ] { color : red ; } /* piros bet\u0171sz\u00edn */ </ style > </ head > < body > < a href = \"https://youtu.be/NUYvbT6vTPs\" > Els\u0151 link </ a > < a href = \"https://youtu.be/yBLdQ1a4-JI\" target = \"_blank\" > M\u00e1sodik link </ a > < a href = \"https://youtu.be/dQw4w9WgXcQ\" target = \"_blank\" > Harmadik link </ a > < a href = \"https://youtu.be/sAn7baRbhx4\" target = \"_self\" > Negyedik link </ a > </ body > </ html > Kijel\u00f6l\u00e9s \u00e1llapot alapj\u00e1n \u00b6 A CSS lehet\u0151s\u00e9get biztos\u00edt arra is, hogy \u00e1llapotuk alapj\u00e1n jel\u00f6lj\u00fcnk HTML elemeket. Az ilyen kijel\u00f6l\u00e9seket pseudo-class-ok seg\u00edts\u00e9g\u00e9vel fogjuk megval\u00f3s\u00edtani. Az \u00e1llapot alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9sre tal\u00e1n a legszeml\u00e9letesebb p\u00e9lda a hivatkoz\u00e1sok (linkek) \u00e1llapotai. Egy hivatkoz\u00e1snak \u00f6sszesen 4 \u00e1llapota lehet, amelyekre a k\u00f6vetkez\u0151k\u00e9ppen hivatkozhatunk CSS-ben: a:link : m\u00e9g nem kerest\u00fck fel a hivatkozott c\u00e9lt a:visited : m\u00e1r felkerest\u00fck a hivatkozott c\u00e9lt a:hover : a kurzor a hivatkoz\u00e1s f\u00f6l\u00f6tt \u00e1ll a:active : a hivatkoz\u00e1s akt\u00edv (r\u00e1kattintunk). Figyelem Ahhoz, hogy a fenti szelektorok mindegyike hat\u00e1sos legyen... ...az a:hover -nek az a:link \u00e9s a:visited ut\u00e1n kell szerepelni a k\u00f3dban ...az a:active -nak az a:hover ut\u00e1n kell szerepelnie a k\u00f3dban. P\u00e9lda: Hivatkoz\u00e1sok form\u00e1z\u00e1sa \u00e1llapot alapj\u00e1n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > a : link { color : green ; } a : visited { color : gray ; } a : hover { color : orange ; } a : active { color : red ; } </ style > </ head > < body > < p >< a href = \"https://theuselessweb.com/\" > Ez egy hivatkoz\u00e1s </ a ></ p > </ body > </ html > A fenti pseudo-class-ok k\u00f6z\u00fcl a :hover \u00e9s az :active nem csak hivatkoz\u00e1sokra, hanem b\u00e1rmilyen HTML objektumra is haszn\u00e1lhat\u00f3k. Egy\u00e9b CSS form\u00e1z\u00e1sok \u00b6 A text-decoration tulajdons\u00e1g \u00b6 \u00c9szrevehett\u00fck, hogy a hivatkoz\u00e1sokat (linkeket) a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban k\u00e9k bet\u0171sz\u00ednnel, al\u00e1h\u00fazva jelen\u00edtik meg. Ezt persze b\u00e1rmikor \u00edzl\u00e9s\u00fcnkre szabhatjuk: a sz\u00ednt \u00e1t\u00e1ll\u00edthatjuk, illetve a link dekor\u00e1ci\u00f3j\u00e1t (az al\u00e1h\u00faz\u00e1st) is szab\u00e1lyozhatjuk a text-decoration CSS tulajdons\u00e1ggal. A text-decoration -nek rendre 3 param\u00e9tert adhatunk meg: a sz\u00f6vegdekor\u00e1ci\u00f3 fajt\u00e1j\u00e1t (k\u00f6telez\u0151 megadni): lehets\u00e9ges \u00e9rt\u00e9kek: underline (al\u00e1h\u00fazott), overline (vonal az elem f\u00f6l\u00f6tt), line-through (\u00e1th\u00fazott), none (nincs vonal), initial (alap\u00e9rtelmezett \u00e9rt\u00e9k) a vonal st\u00edlus\u00e1t (opcion\u00e1lis): lehets\u00e9ges \u00e9rt\u00e9kek: solid (folytonos), dashed (szaggatott), dotted (pontozott), wavy (hull\u00e1mos) a vonal sz\u00edn\u00e9t (opcion\u00e1lis). A text-decoration tulajdons\u00e1g egy\u00e9bk\u00e9nt nem csak hivatkoz\u00e1sokra, hanem tetsz\u0151leges sz\u00f6vegelemre is haszn\u00e1lhat\u00f3. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A text-decoration tulajdons\u00e1g </ title > < meta charset = \"UTF-8\" /> < style > a { text-decoration : none ; } . decorated { text-decoration : underline dotted red ; } </ style > </ head > < body > < p >< a href = \"https://theuselessweb.com/\" > Hivatkoz\u00e1s, al\u00e1h\u00faz\u00e1s n\u00e9lk\u00fcl </ a ></ p > < p class = \"decorated\" > Egy piros szaggatott vonallal al\u00e1h\u00fazott sz\u00f6veg </ p > </ body > </ html > List\u00e1k form\u00e1z\u00e1sa \u00b6 A m\u00falt \u00f3r\u00e1n megismerkedt\u00fcnk a HTML-ben tal\u00e1lhat\u00f3 rendezetlen \u00e9s rendezett list\u00e1kkal. Az al\u00e1bbi t\u00e1bl\u00e1zatban \u00f6sszefoglaljuk a list\u00e1kkal kapcsolatos fontosabb form\u00e1z\u00e1sokat. CSS tulajdons\u00e1g neve Szerepe A tulajdons\u00e1g \u00e9rt\u00e9ke list-style-type listajel m\u00f3dos\u00edt\u00e1sa - Rendezetlen list\u00e1k eset\u00e9n: disc (teli karika), circle (\u00fcres karika), square (teli n\u00e9gyzet), none (nincs listajel) - Rendezett list\u00e1k eset\u00e9n: decimal (arab sz\u00e1m), lower-roman / upper-roman (r\u00f3mai sz\u00e1m), lower-alpha / upper-alpha (kisbet\u0171/nagybet\u0171), none (nincs listajel) list-style-image k\u00e9p be\u00e1ll\u00edt\u00e1sa listajelk\u00e9nt A k\u00e9p el\u00e9r\u00e9si \u00fatvonal\u00e1t az url('el\u00e9r\u00e9si_\u00fatvonal') seg\u00edts\u00e9g\u00e9vel adjuk meg list-style-position felsorol\u00e1sjelek poz\u00edci\u00f3j\u00e1nak be\u00e1ll\u00edt\u00e1sa - outside : a felsorol\u00e1s f\u00fcgg\u0151leges vonal\u00e1ba a felsorolt tartalom ker\u00fcl - inside : a felsorol\u00e1s f\u00fcgg\u0151leges vonal\u00e1ba a listajelek ker\u00fclnek T\u00e1bl\u00e1zatok form\u00e1z\u00e1sa \u00b6 A HTML t\u00e1bl\u00e1zatokra, azok soraira \u00e9s cell\u00e1ira is haszn\u00e1lhat\u00f3k a kor\u00e1bban tanult h\u00e1tt\u00e9r- \u00e9s sz\u00f6vegform\u00e1z\u00e1sok, valamint a t\u00e9rk\u00f6zre, marg\u00f3ra \u00e9s szeg\u00e9lyre vonatkoz\u00f3 utas\u00edt\u00e1sok. A t\u00e1bl\u00e1zatnak \u00e9s a cell\u00e1knak a m\u00e1r j\u00f3l ismert border tulajdons\u00e1ggal adhatunk szeg\u00e9lyt. Alap\u00e9rtelmezett m\u00f3don a t\u00e1bl\u00e1zat szeg\u00e9lyei \u00e9s a cell\u00e1k szeg\u00e9lyei el vannak v\u00e1lasztva egym\u00e1st\u00f3l, ez\u00e9rt \u00fagy t\u0171nhet, mintha a t\u00e1bl\u00e1zatban mindenhol dupla szeg\u00e9lyek lenn\u00e9nek. A border-collapse: collapse utas\u00edt\u00e1ssal ezek a szeg\u00e9lyek \u00f6sszevonhat\u00f3k. A t\u00e1bl\u00e1zatnak a szok\u00e1sos m\u00f3don megadhatjuk a sz\u00e9less\u00e9g\u00e9t \u00e9s magass\u00e1g\u00e1t ( width \u00e9s height tulajdons\u00e1gok), valamint a v\u00edzszintes marg\u00f3k \u00e9rt\u00e9k\u00e9nek auto -ra \u00e1ll\u00edt\u00e1s\u00e1val v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edthatjuk a t\u00e1bl\u00e1zatot az oldalon bel\u00fcl. Ha egy t\u00e1bl\u00e1zat rendelkezik c\u00edmmel (amit a <caption> taggel adtunk meg), akkor ez a c\u00edm alap\u00e9rtelmezett m\u00f3don a t\u00e1bl\u00e1zat f\u00f6l\u00f6tt jelenik meg. A caption-side: bottom utas\u00edt\u00e1ssal viszont \u00e1thelyezhet\u0151 a t\u00e1bl\u00e1zat al\u00e1. A vertical-align: middle utas\u00edt\u00e1ssal egy t\u00e1bl\u00e1zatcella tartalm\u00e1t f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edthatjuk. A tartalom v\u00edzszintes igaz\u00edt\u00e1s\u00e1ra a kor\u00e1bban l\u00e1tott text-align tulajdons\u00e1got haszn\u00e1ljuk. P\u00e9lda: Egy t\u00e1bl\u00e1zat form\u00e1z\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > T\u00e1bl\u00e1zatok form\u00e1z\u00e1sa </ title > < meta charset = \"UTF-8\" /> < style > table { border : 1 px solid black ; /* a t\u00e1bl\u00e1zat k\u00f6r\u00fcli szeg\u00e9ly */ border-collapse : collapse ; /* szeg\u00e9lyek \u00f6sszevon\u00e1sa */ width : 60 % ; /* a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9g 60%-a */ margin : 0 auto ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1s */ } th , td { border : 1 px solid black ; /* a cell\u00e1k k\u00f6r\u00fcli szeg\u00e9ly */ vertical-align : middle ; /* tartalom igaz\u00edt\u00e1sa f\u00fcgg\u0151legesen k\u00f6z\u00e9pre */ text-align : center ; /* tartalom igaz\u00edt\u00e1sa v\u00edzszintesen k\u00f6z\u00e9pre */ padding : 5 px ; } th { background-color : #CC6633 ; color : white ; } /* minden p\u00e1ros sornak adunk h\u00e1tt\u00e9rsz\u00ednt */ tr : nth-of-type ( even ) { background-color : #F2F2F2 ; } /* ha a kurzor egy sor f\u00f6l\u00f6tt \u00e1ll, megv\u00e1ltoztatjuk a sor h\u00e1tt\u00e9rsz\u00edn\u00e9t */ tr : hover { background-color : #E5E5E5 ; } </ style > </ head > < body > < h1 > K\u00edn\u00e1latunk </ h1 > < table > < tr >< th > Pizza neve </ th >< th > \u00c1r </ th ></ tr > < tr >< td > Sonk\u00e1s-kukoric\u00e1s </ td >< td > 1800 Ft </ td ></ tr > < tr >< td > Kolb\u00e1szos </ td >< td > 1800 Ft </ td ></ tr > < tr >< td > N\u00e9gysajtos </ td >< td > 2000 Ft </ td ></ tr > < tr >< td > Veget\u00e1ri\u00e1nius </ td >< td > 2200 Ft </ td ></ tr > </ table > </ body > </ html > A box-sizing tulajdons\u00e1g \u00b6 A fenti k\u00f3dp\u00e9ld\u00e1ban a t\u00e1bl\u00e1zat sz\u00e9less\u00e9g\u00e9t sz\u00e1zal\u00e9kban adtuk meg. Ha egy m\u00e1sik elemen bel\u00fcl elhelyezked\u0151 objektum m\u00e9ret\u00e9t sz\u00e1zal\u00e9kban adjuk meg, akkor el\u0151fordulhat, hogy a k\u00f6vetkez\u0151 jelens\u00e9ggel tal\u00e1ljuk szemben magunkat: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > # parent { border : 10 px solid black ; } # child { width : 100 % ; border : 10 px solid gray ; } </ style > </ head > < body > < div id = \"parent\" > < div id = \"child\" > Be\u00e1gyazott objektum </ div > </ div > </ body > </ html > L\u00e1that\u00f3, hogy a be\u00e1gyazott objektum szeg\u00e9lye \"kil\u00f3g\" az \u0151t tartalmaz\u00f3 objektumb\u00f3l, ami k\u00f6zel sem mondhat\u00f3 sz\u00e9pnek. Ennek a jelens\u00e9g az oka, hogy az elemek m\u00e9ret\u00e9be alap\u00e9rtelmezett m\u00f3don csak az elem tartalma tartozik bele, a t\u00e9rk\u00f6z\u00f6k \u00e9s a szeg\u00e9lyek nem. Ha azt szeretn\u00e9nk, hogy az elem m\u00e9ret\u00e9be a tartalom mellett a t\u00e9rk\u00f6z\u00f6k \u00e9s a szeg\u00e9lyek is beletartozzanak, haszn\u00e1ljuk a box-sizing: border-box utas\u00edt\u00e1st! Az el\u0151z\u0151 k\u00f3d ennek megfelel\u0151en \u00e1t\u00edrva: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > # parent { border : 10 px solid black ; } # child { width : 100 % ; border : 10 px solid gray ; box-sizing : border-box ; } </ style > </ head > < body > < div id = \"parent\" > < div id = \"child\" > Be\u00e1gyazott objektum </ div > </ div > </ body > </ html > A CSS \u00f6r\u00f6kl\u0151d\u00e9s \u00b6 CSS-ben l\u00e9tezik \u00f6r\u00f6kl\u0151d\u00e9s , ami azt jelenti, hogy egy objektum bizonyos CSS tulajdons\u00e1gait \u00f6r\u00f6k\u00f6lhetik az objektum gyerekei. Ennek k\u00f6sz\u00f6nhet\u0151en bizonyos tulajdons\u00e1gokat elegend\u0151 csak egyszer defini\u00e1lnunk a sz\u00fcl\u0151 objektumra, \u00e9s ekkor a gyerekek is automatikusan meg\u00f6r\u00f6klik ezeket. Fontos megjegyezni viszont, hogy nem minden CSS tulajdons\u00e1g \u00f6r\u00f6k\u00f6l\u0151dik. Az al\u00e1bbi t\u00e1bl\u00e1zatban \u00f6sszefoglaljuk a fontosabb \u00f6r\u00f6kl\u0151d\u0151, illetve nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gokat. \u00d6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gok Nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gok color , font-family , font-size , font-weight , list-style , text-align , text-indent , text-transform , visibility , white-space , word-space , letter-spacing , line-height background , border , display , float , width , height , margin , outline , overflow , padding , position , text-decoration , vertical-align , z-index , ... Amennyiben egy nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1got m\u00e9gis \u00f6r\u00f6k\u00f6ltetni szeretn\u00e9nk, akkor ezt az inherit speci\u00e1lis \u00e9rt\u00e9kkel tehetj\u00fck meg. P\u00e9lda: A font-family \u00e9s color tulajdons\u00e1gok automatikusan \u00f6r\u00f6kl\u0151dnek, viszont a border alapb\u00f3l nem. Az inherit kulcssz\u00f3val viszont a border is \u00f6r\u00f6k\u00f6ltethet\u0151 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS \u00f6r\u00f6kl\u0151d\u00e9s </ title > < meta charset = \"UTF-8\" /> < style > # parent { font-family : Arial ; color : blue ; border : 3 px solid black ; } # child { border : inherit } /* en\u00e9lk\u00fcl a szeg\u00e9ly nem \u00f6r\u00f6kl\u0151dne! */ </ style > </ head > < body > < div id = \"parent\" > Sz\u00fcl\u0151 objektum < div id = \"child\" > Gyerek objektum </ div > </ div > </ body > </ html > A CSS rangsor \u00b6 Felmer\u00fclhet a k\u00e9rd\u00e9s, hogy ha egy objektumra t\u00f6bb, egym\u00e1snak ellentmond\u00f3 CSS form\u00e1z\u00e1st adunk ki (pl. egy bekezd\u00e9s sz\u00edn\u00e9t k\u00e9kre, majd k\u00e9s\u0151bb pirosra szeretn\u00e9nk \u00e1ll\u00edtani), akkor ezek k\u00f6z\u00fcl vajon melyik lesz \u00e9rv\u00e9nyes. Pontosan erre ad v\u00e1laszt a CSS rangsor , amely k\u00fcl\u00f6nb\u00f6z\u0151 priorit\u00e1s \u00e9rt\u00e9keket rendel az egyes form\u00e1z\u00e1sokhoz, \u00e9s ezek alapj\u00e1n d\u00f6nti el, hogy v\u00e9g\u00fcl mely form\u00e1z\u00e1s fog \u00e9rv\u00e9nyes\u00fclni. A priorit\u00e1sok a k\u00f6vetkez\u0151k\u00e9ppen alakulnak (leger\u0151sebbt\u0151l a leggyeng\u00e9bbig): !important kulcssz\u00f3val megadott form\u00e1z\u00e1sok inline CSS (a tagek style attrib\u00fatumak\u00e9nt adjuk meg) id szelektorral megadott form\u00e1z\u00e1sok class szelektorral megadott form\u00e1z\u00e1sok elem szelektorral megadott form\u00e1z\u00e1sok. P\u00e9lda: Az al\u00e1bbi k\u00f3dban az els\u0151 bekezd\u00e9s piros (hiszen a #first id szelektor er\u0151sebb, mint a .blue class szelektor), a m\u00e1sodik k\u00e9k (hiszen az inline CSS er\u0151sebb, mint az id szelektor), a harmadik pedig narancss\u00e1rga lesz (hiszen a az !important kulcssz\u00f3val megadott form\u00e1z\u00e1s a leger\u0151sebb) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS \u00f6r\u00f6kl\u0151d\u00e9s </ title > < meta charset = \"UTF-8\" /> < style > . blue { color : blue ; } # first { color : red ; } # second { color : green ; } # third { color : orange !important ; } </ style > </ head > < body > < p id = \"first\" class = \"blue\" > Els\u0151 bekezd\u00e9s </ p > < p id = \"second\" style = \"color: blue;\" > M\u00e1sodik bekezd\u00e9s </ p > < p id = \"third\" style = \"color: purple;\" > Harmadik bekezd\u00e9s </ p > </ body > </ html > Megjegyz\u00e9s A felhaszn\u00e1l\u00f3 \u00e1ltal !important kulcssz\u00f3val defini\u00e1lt form\u00e1z\u00e1sok er\u0151sebbek, mint a webfejleszt\u0151k \u00e1ltal ugyanezzel a kulcssz\u00f3val defini\u00e1lt st\u00edlusok. Ugyanakkor a felhaszn\u00e1l\u00f3 \u00e1ltal defini\u00e1lt egy\u00e9b st\u00edlusok \u00f6nmagukban nem er\u0151sebbek, mint a webfejleszt\u0151 \u00e1ltal defini\u00e1ltak. Az \u00f6sszetett szelektorok - teh\u00e1t azok a szelektorok, amelyek t\u00f6bb r\u00e9szszelektorb\u00f3l \u00e9p\u00fclnek fel - eset\u00e9n a r\u00e9szszelektorok priorit\u00e1sai \u00f6sszead\u00f3dnak. Az \u00edgy kapott \u00f6sszeg lesz a szelektor priorit\u00e1sa. P\u00e9lda Legyenek adottak a k\u00f6vetkez\u0151 szelektor-priorit\u00e1s p\u00e1rok: elem szelektor - 1, class szelektor - 10, id szelektor - 100. Ekkor a #main .container p \u00f6sszetett szelektor priorit\u00e1sa: 100+10+1 = 111. Ha az eddigiek alapj\u00e1n nem d\u0151lt el a rangsor, akkor a k\u00f3dban k\u00e9s\u0151bb szerepl\u0151 form\u00e1z\u00e1s lesz az \u00e9rv\u00e9nyes. Helyzetmegad\u00e1s \u00b6 A webfejleszt\u00e9s sor\u00e1n gyakran el\u0151fordul, hogy egy weboldal elrendez\u00e9s\u00e9nek kialak\u00edt\u00e1sakor meg akarjuk v\u00e1ltoztatni bizonyos objektumok alap\u00e9rtelmezett poz\u00edci\u00f3j\u00e1t. Erre szolg\u00e1l a pozicion\u00e1l\u00e1s \u00e9s helyzetmegad\u00e1s. A position tulajdons\u00e1g \u00b6 A HTML objektumok poz\u00edci\u00f3j\u00e1t a position CSS tulajdons\u00e1ggal adhatjuk meg. \u00c9rt\u00e9kei: static : a norm\u00e1l sz\u00f6vegfolyamban l\u00e9v\u0151 hely, a pozicion\u00e1l\u00e1soknak nincs hat\u00e1sa (alap\u00e9rtelmezett) relative : a norm\u00e1l sz\u00f6vegfolyambeli hely\u00e9hez k\u00e9pest elmozd\u00edtja az elemet a k\u00e9rt m\u00e9rt\u00e9kben absolute : a legk\u00f6zelebbi, nem static helyzet\u0171 sz\u00fcl\u0151objektum bels\u0151 sz\u00e9l\u00e9hez (vagy ilyen sz\u00fcl\u0151 hi\u00e1ny\u00e1ban a viewport sz\u00e9l\u00e9hez) k\u00e9pest pozicion\u00e1l fixed : az elem g\u00f6rd\u00edt\u00e9skor is r\u00f6gz\u00edtett helyen marad. Az elemek f\u00fcgg\u0151leges pozicion\u00e1l\u00e1s\u00e1ra a top \u00e9s bottom , m\u00edg v\u00edzszintes pozicion\u00e1l\u00e1sra a left \u00e9s right CSS tulajdons\u00e1gokat haszn\u00e1lhatjuk. A static m\u00f3don pozicion\u00e1lt elemek eset\u00e9n ezeknek az utas\u00edt\u00e1soknak nincs hat\u00e1sa! P\u00e9lda: A position tulajdons\u00e1g haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Elemek pozicion\u00e1l\u00e1sa </ title > < meta charset = \"UTF-8\" /> < style > . box { padding : 20 px 10 px ; } . container { position : relative ; height : 800 px ; background : lightblue ; } . first { position : absolute ; top : 0 ; right : 0 ; background : tomato ; } . second { /* top: 500px; */ background : mediumaquamarine ; } . third { position : fixed ; background : lightgreen ; } </ style > </ head > < body > < div class = \"container\" > < p > Pozicion\u00e1l\u00e1s </ p > < div class = \"first box\" > Els\u0151 </ div > < div class = \"second box\" > M\u00e1sodik </ div > < div class = \"third box\" > Harmadik </ div > </ div > </ body > </ html > A fenti p\u00e9lda magyar\u00e1zata: Az absolute m\u00f3don pozicion\u00e1lt, \"Els\u0151\" felirat\u00fa elem az \u0151t be\u00e1gyaz\u00f3 nem static (hanem jelen esetben relative ) helyzet\u0171 elem (ez most a class=\"container\" attrib\u00fatum\u00fa <div> ) jobb fels\u0151 sark\u00e1hoz igazodik. A \"M\u00e1sodik\" felirat\u00fa elem static helyzet\u0171, \u00edgy a pozicion\u00e1l\u00e1snak nincs hat\u00e1sa. A fixed helyzet\u0171, \"Harmadik\" felirat\u00fa elem g\u00f6rd\u00edt\u00e9skor is r\u00f6gz\u00edtett helyen marad. Tipp Manaps\u00e1g gyakran szokt\u00e1k haszn\u00e1lni a sticky kulcssz\u00f3t is elemek pozicion\u00e1l\u00e1sa sor\u00e1n. Err\u0151l itt olvashatunk r\u00e9szletesebben. \u00dasztat\u00e1s \u00b6 A float CSS tulajdons\u00e1ggal lehet\u0151s\u00e9g\u00fcnk van egy elem \u00fasztat\u00e1s\u00e1ra. Ekkor az \u00fasztatott elemet a tartalom a m\u00e1sik ir\u00e1nyb\u00f3l k\u00f6rbefutja (teh\u00e1t p\u00e9ld\u00e1ul ha balra \u00fasztatunk egy elemet, akkor jobbr\u00f3l fogja \u0151t k\u00f6rbefutni a tartalom). A tulajdons\u00e1g lehets\u00e9ges \u00e9rt\u00e9kei: left (balra \u00fasztat\u00e1s), right (jobbra \u00fasztat\u00e1s), none (nincs \u00fasztat\u00e1s). P\u00e9lda: Egy k\u00e9p balra \u00fasztat\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > \u00dasztat\u00e1s </ title > < meta charset = \"UTF-8\" /> < style > . floating-img { height : 140 px ; float : left ; margin-right : 10 px ; } </ style > </ head > < body > < img class = \"floating-img\" src = \"giraffe.jpg\" alt = \"Zsir\u00e1f\" /> < p > A zsir\u00e1f (Giraffa camelopardalis) Afrik\u00e1ban \u00e9l\u0151 p\u00e1rosujj\u00fa pat\u00e1s eml\u0151s, a legmagasabb \u00e9s leghosszabb nyak\u00fa sz\u00e1razf\u00f6ldi \u00e9l\u0151l\u00e9ny. A szavann\u00e1k lak\u00f3ja az \u00f3kort\u00f3l kedvelt attrakci\u00f3 volt - R\u00f3m\u00e1ban el\u0151sz\u00f6r Julius Caesar mutatott be zsir\u00e1fokat az amfite\u00e1trumi j\u00e1t\u00e9kokon - \u00e9s ma is n\u00e9pszer\u0171 szafarikon \u00e9s \u00e1llatkertekben. Neve arab eredet\u0171, olasz k\u00f6zvet\u00edt\u00e9ssel jutott el a magyarba a k\u00e9s\u0151 k\u00f6z\u00e9pkorban. A tudom\u00e1nyos nev\u00e9ben szerepl\u0151 szerepl\u0151 camelopardalis a faj addig haszn\u00e1lt nev\u00e9re, a g\u00f6r\u00f6g kam\u00e9lopardaliszra (\"tevep\u00e1rduc\") utal. </ p > </ body > </ html > Ha meg szeretn\u00e9nk akad\u00e1lyozni egy objektum k\u00f6r\u00fcl egy m\u00e1sik, \u00fasztatott objektum elhelyez\u00e9s\u00e9t, akkor ezt a clear CSS tulajdons\u00e1ggal tudjuk megtenni. Lehets\u00e9ges \u00e9rt\u00e9kei: left (balr\u00f3l nem lehet \u00fasztatott elem), right (jobbr\u00f3l nem lehet \u00fasztatott elem), both (sem balr\u00f3l, sem jobbr\u00f3l nem lehet \u00fasztatott elem), none (balr\u00f3l \u00e9s jobbr\u00f3l is lehet \u00fasztatott elem).","title":"3. gyakorlat"},{"location":"gyakorlat/gyak3/#3-gyakorlat","text":"","title":"3. gyakorlat"},{"location":"gyakorlat/gyak3/#a-gyakorlat-anyaga","text":"A HTML5 szemantikus tagek \u00e9s a HTML DOM. Tov\u00e1bbi CSS form\u00e1z\u00e1sok, \u00f6sszetettebb szelektorok, \u00f6r\u00f6kl\u0151d\u00e9s \u00e9s rangsor, helyzetmegad\u00e1s.","title":"A gyakorlat anyaga"},{"location":"gyakorlat/gyak3/#a-html5-szemantikus-tagek","text":"Az 1. gyakorlaton l\u00e1ttunk p\u00e9ld\u00e1t a weboldalak tartalm\u00e1nak struktur\u00e1l\u00e1s\u00e1ra. Eml\u00e9keztet\u0151\u00fcl: a <div> \u00e9s <span> tagekkel \u00e1ltal\u00e1nos c\u00e9l\u00fa szakaszokat, tartalmi egys\u00e9geket alak\u00edtottunk ki. A <div> egy blokkszint\u0171 (block) objektum, ami azt jelenti, hogy mindig \u00faj sorban kezd\u0151dik, \u00e9s kihaszn\u00e1lja a teljes rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9get. Ezzel szemben a <span> egy sorszint\u0171 (inline) elem, teh\u00e1t nem kezd\u0151dik \u00faj sorban, \u00e9s sz\u00e9less\u00e9ge is csak akkora, mint amekkora helyre sz\u00fcks\u00e9ge van. A HTML5 szabv\u00e1nyban ezen \u00e1ltal\u00e1nos c\u00e9l\u00fa szakaszok mell\u00e9 \u00faj, szemantikus jelent\u00e9ssel b\u00edr\u00f3 struktur\u00e1lis elemeket vezettek be: <header>...</header> : az oldal vagy egy tartalmi egys\u00e9g fejl\u00e9ce <footer>...</footer> : az oldal vagy egy tartalmi egys\u00e9g l\u00e1bl\u00e9ce <nav>...</nav> : navig\u00e1ci\u00f3s men\u00fc <aside>...</aside> : \u00e9rint\u0151legesen kapcsol\u00f3d\u00f3 tartalom (jellemz\u0151en oldals\u00e1v) <main>...</main> : f\u0151 tartalom <section>...</section> : logikai egys\u00e9g <article>...</article> : \u00f6n\u00e1ll\u00f3 tartalom. A fenti tagek kiv\u00e9tel n\u00e9lk\u00fcl blokkszint\u0171 (block) elemek (a <div> -hez hasonl\u00f3an). Ezek a tagek - az \u00e1ltal\u00e1nos c\u00e9l\u00fa <div> \u00e9s <span> tagekkel ellent\u00e9tben - szemantikai jelent\u00e9ssel b\u00edrnak, teh\u00e1t egy\u00e9rtelm\u0171en meghat\u00e1rozz\u00e1k a tartalmuk jelent\u00e9s\u00e9t (pl. egy <header> -r\u0151l tudjuk, hogy egy fejl\u00e9cet jel\u00f6l). A HTML5-ben bevezetett szemantikus tageket felhaszn\u00e1lva prec\u00edzebben le\u00edrhatjuk egy weboldal szerkezet\u00e9t. Felhaszn\u00e1l\u00e1sukkal p\u00e9ld\u00e1ul k\u00e9sz\u00edthet\u00fcnk az al\u00e1bbihoz hasonl\u00f3 elrendez\u00e9s\u0171 weboldalt. Megjegyz\u00e9s Ahhoz, hogy az \u00e1br\u00e1n l\u00e1totthoz hasonl\u00f3 elrendez\u00e9st kapjunk, a tanult tagek haszn\u00e1lata \u00f6nmag\u00e1ban nem elegend\u0151 (pl. az <aside> nem fog automatikusan oldalra ker\u00fclni). Az elemek helyzet\u00e9nek megad\u00e1s\u00e1ra a CSS-beli pozicion\u00e1l\u00e1st haszn\u00e1lhatjuk.","title":"A HTML5 szemantikus tagek"},{"location":"gyakorlat/gyak3/#a-html-dom","text":"Val\u00f3sz\u00edn\u0171leg mindenkinek felt\u0171nt, hogy a HTML dokumentumok l\u00e9nyeg\u00e9ben HTML objektumok (tagek) egym\u00e1sba \u00e1gyaz\u00e1s\u00e1b\u00f3l \u00e1llnak. Ezek az objektumok egy hierarchikus fastrukt\u00far\u00e1t alkotnak a dokumentumban. Amikor egy weboldal bet\u00f6lt\u0151dik, akkor a b\u00f6ng\u00e9sz\u0151 elk\u00e9sz\u00edti a HTML objektumokb\u00f3l az \u00fagynevezett dokumentum-objektum modellt - ezt a tov\u00e1bbiakban r\u00f6viden csak DOM-nak fogjuk nevezni. A DOM fa (DOM tree) seg\u00edts\u00e9g\u00e9vel k\u00f6nnyen \u00e1tl\u00e1thatjuk a HTML elemek hierarchikus viszonyait. P\u00e9lda: Egy egyszer\u0171 HTML k\u00f3d \u00e9s a hozz\u00e1 tartoz\u00f3 DOM fa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Az oldal c\u00edme </ h1 > < img src = \"my-image.png\" alt = \"Valami klassz k\u00e9p\" /> < p > < a href = \"https://u-szeged.hu\" > SZTE </ a > </ p > </ body > </ html >","title":"A HTML DOM"},{"location":"gyakorlat/gyak3/#html-objektumok-viszonyai","text":"Ahhoz, hogy a tov\u00e1bbiakban egyszer\u0171en tudjunk besz\u00e9lni a HTML objektumok viszonyair\u00f3l, bevezet\u00fcnk n\u00e9h\u00e1ny fogalmat. Ha az A objektum k\u00f6zvetlen\u00fcl tartalmazza a B objektumot, akkor azt mondjuk, hogy az A objektum a B objektum sz\u00fcl\u0151 je, a B objektum pedig A gyerek e. P\u00e9ld\u00e1ul a fenti k\u00f3dban \u00e9s az ahhoz tartoz\u00f3 DOM f\u00e1ban a <body> objektum a <h1> , <img> \u00e9s <p> elemek sz\u00fcl\u0151je, vagy m\u00e1sk\u00e9pp mondva: a <h1> , <img> \u00e9s <p> elemek a <body> gyerekei. Az viszont p\u00e9ld\u00e1ul nem igaz, hogy az <a> objektum a <body> gyereke lenne, hiszen itt a tartalmaz\u00e1s nem k\u00f6zvetlen. Ha az A \u00e9s B objektumok sz\u00fcl\u0151je megegyezik, akkor A \u00e9s B egym\u00e1s testv\u00e9r ei. P\u00e9ld\u00e1ul a fenti k\u00f3dban \u00e9s az ahhoz tartoz\u00f3 DOM f\u00e1ban a <h1> , <img> \u00e9s <p> objektumok egym\u00e1s testv\u00e9rei, hiszen mindh\u00e1rom objektum sz\u00fcl\u0151je a <body> . A DOM fa tetej\u00e9n l\u00e9v\u0151, sz\u00fcl\u0151vel nem rendelkez\u0151 elemet gy\u00f6k\u00e9relem nek nevezz\u00fck. A teljes HTML DOM-ban ez a gy\u00f6k\u00e9relem mindig a <html> tag lesz (ugyanis ebbe \u00e1gyazunk be minden tov\u00e1bbi HTML elemet).","title":"HTML objektumok viszonyai"},{"location":"gyakorlat/gyak3/#a-dom-gyakorlati-jelentosege","text":"A k\u00f6vetkez\u0151 fejezetben l\u00e1tni fogjuk, hogy CSS-ben haszn\u00e1lunk olyan szelektorokat is, amelyek egym\u00e1shoz val\u00f3 viszonyuk alapj\u00e1n jel\u00f6lnek ki HTML objektumokat. Emellett a webes vil\u00e1gban gyakran el\u0151fordul, hogy a DOM f\u00e1t manipul\u00e1lni szeretn\u00e9nk - pl. szeretn\u00e9nk egy objektumot m\u00f3dos\u00edtani vagy t\u00f6r\u00f6lni, esetleg egy \u00faj objektumot akarunk a f\u00e1ba besz\u00farni. Erre biztos\u00edtanak lehet\u0151s\u00e9get a JavaScript DOM-m\u0171veletei. Ezen a kurzuson nem t\u00e1rgyaljuk a JavaScriptet, viszont a Szkriptnyelvek \u00e9s Multim\u00e9dia kurzusokon r\u00e9szletesen tanulhatunk a k\u00fcl\u00f6nb\u00f6z\u0151 DOM-manipul\u00e1ci\u00f3s lehet\u0151s\u00e9gekr\u0151l.","title":"A DOM gyakorlati jelent\u0151s\u00e9ge"},{"location":"gyakorlat/gyak3/#tovabbi-css-szelektorok","text":"A m\u00falt \u00f3r\u00e1n megismerkedt\u00fcnk a legalapvet\u0151bb CSS szelektorokkal (elem szelektor, class szelektor, id szelektor, univerz\u00e1lis szelektor). Ebben a r\u00e9szben n\u00e9h\u00e1ny tov\u00e1bbi szelektort\u00edpusr\u00f3l fogunk tanulni. Megjegyz\u00e9s A gyakorlaton csak a gyakrabban haszn\u00e1lt szelektorokat t\u00e1rgyaljuk. Ezek mellett vannak m\u00e9g egy\u00e9b kijel\u00f6l\u0151k is, amelyeknek a r\u00e9szletes list\u00e1j\u00e1t megtal\u00e1lhatjuk itt .","title":"Tov\u00e1bbi CSS szelektorok"},{"location":"gyakorlat/gyak3/#szelektorok-csoportositasa","text":"Amikor t\u00f6bb szelektorra is ugyanazok a form\u00e1z\u00e1sok vonatkoznak, akkor a szelektorokat vessz\u0151vel elv\u00e1lasztva soroljuk fel egym\u00e1s ut\u00e1n. P\u00e9lda: Az \u00f6sszes <h1> \u00e9s <h2> objektum, valamint a class=\"warning\" attrib\u00fatummal rendelkez\u0151 elemek piros bet\u0171sz\u00edn\u0171v\u00e9 t\u00e9tele 1 2 3 h1 , h2 , . warning { color : red ; }","title":"Szelektorok csoportos\u00edt\u00e1sa"},{"location":"gyakorlat/gyak3/#kijeloles-kapcsolat-alapjan","text":"CSS-ben haszn\u00e1lunk olyan szelektorokat is, amelyek egym\u00e1shoz val\u00f3 viszonyaik, kapcsolataik alapj\u00e1n jel\u00f6lnek ki elemeket: E1 E2 : minden olyan E2 elemet kijel\u00f6l, amely egy E1 -ben tal\u00e1lhat\u00f3 E1 > E2 minden olyan E2 -t kijel\u00f6l, amelynek k\u00f6zvetlen sz\u00fcl\u0151je E1 E1 ~ E2 : minden olyan E2 -t kijel\u00f6l, amely E1 -nek testv\u00e9re \u00e9s E1 ut\u00e1n k\u00f6vetkezik a k\u00f3dban E1 + E2 : minden olyan E2 -t kijel\u00f6l, amely E1 -nek testv\u00e9re \u00e9s k\u00f6zvetlen\u00fcl E1 ut\u00e1n k\u00f6vetkezik a k\u00f3dban. P\u00e9lda: A body p szelektor kijel\u00f6li az \u00f6sszes olyan bekezd\u00e9st, ami a <body> -ban tal\u00e1lhat\u00f3. A body > p azokat a bekezd\u00e9seket jel\u00f6li ki, amelyeknek k\u00f6zvetlen sz\u00fcl\u0151je a <body> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> < style > body p { background-color : lightblue ; } /* vil\u00e1gosk\u00e9k h\u00e1tt\u00e9r */ body > p { border : 3 px solid darkred ; } /* s\u00f6t\u00e9tv\u00f6r\u00f6s szeg\u00e9ly */ </ style > </ head > < body > < p > Els\u0151 bekezd\u00e9s </ p > < div > < p > M\u00e1sodik bekezd\u00e9s </ p > </ div > < p > Harmadik bekezd\u00e9s </ p > </ body > </ html > P\u00e9lda: A p ~ p szelektor kijel\u00f6l minden olyan bekezd\u00e9st, amely egy m\u00e1sik bekezd\u00e9s testv\u00e9re \u00e9s valahol a m\u00e1sik bekezd\u00e9s ut\u00e1n tal\u00e1lhat\u00f3 a k\u00f3dban. A p + p szelektorn\u00e1l m\u00e9g azt is megk\u00f6vetelj\u00fck, hogy k\u00f6zvetlen\u00fcl (r\u00f6gt\u00f6n) a m\u00e1sik bekezd\u00e9s ut\u00e1n szerepeljen az elem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > DOM p\u00e9lda </ title > < meta charset = \"UTF-8\" /> < style > p ~ p { background-color : lightblue ; } /* vil\u00e1gosk\u00e9k h\u00e1tt\u00e9r */ p + p { border : 3 px solid darkred ; } /* s\u00f6t\u00e9tv\u00f6r\u00f6s szeg\u00e9ly */ </ style > </ head > < body > < p > Els\u0151 bekezd\u00e9s </ p > < div > < p > M\u00e1sodik bekezd\u00e9s </ p > </ div > < p > Harmadik bekezd\u00e9s </ p > < p > Negyedik bekezd\u00e9s </ p > </ body > </ html > A kapcsolat alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9sre haszn\u00e1lhatunk m\u00e9g \u00fagynevezett pseudo-class -okat is, a szelektor:pseudoclass szintaxissal. Ez a szintaxis a szelektor \u00e1ltal kijel\u00f6lt elemek k\u00f6z\u00fcl kiv\u00e1laszt minden olyant, amelyre pseudoclass teljes\u00fcl. N\u00e9zz\u00fcnk n\u00e9h\u00e1ny fontosabb p\u00e9ld\u00e1t pseudo-class-okra, a teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl! E1:first-child : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek legels\u0151 gyereke E1:nth-child(n) : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek n -edik gyereke E1:last-child : minden olyan E1 -et kijel\u00f6l, aki a sz\u00fcl\u0151j\u00e9nek az utols\u00f3 gyereke E1:first-of-type : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl a legels\u0151 E1:nth-of-type(n) : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az n -edik E1:last-of-type : minden olyan E1 -et kijel\u00f6l, aki az azonos ( E1 ) t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az utols\u00f3 P\u00e9lda: N\u00e9h\u00e1ny pseudo-class haszn\u00e1lata egy t\u00e1bl\u00e1zatra 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > tr : first-of-type { /* Minden olyan <tr>, aki a <tr> t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl a legels\u0151 */ background-color : #CC6633 ; color : white ; } tr : nth-child ( even ) { /* Minden olyan <tr>, aki a sz\u00fcl\u0151j\u00e9nek p\u00e1rosadik (2., 4., 6., ...) gyereke */ background-color : #F2F2F2 ; } td : last-of-type { /* Minden olyan <td>, aki a <td> t\u00edpus\u00fa testv\u00e9rei k\u00f6z\u00fcl az utols\u00f3 */ color : darkred ; } th , td { padding : 5 px ; } </ style > </ head > < body > < table > < tr > < th > Pizza neve </ th > < th > \u00c1r </ th > </ tr > < tr > < td > Sonk\u00e1s-kukoric\u00e1s </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > Kolb\u00e1szos </ td > < td > 1800 Ft </ td > </ tr > < tr > < td > N\u00e9gysajtos </ td > < td > 2000 Ft </ td > </ tr > < tr > < td > Veget\u00e1ri\u00e1nius </ td > < td > 2200 Ft </ td > </ tr > </ table > </ body > </ html >","title":"Kijel\u00f6l\u00e9s kapcsolat alapj\u00e1n"},{"location":"gyakorlat/gyak3/#kijeloles-attributum-alapjan","text":"A HTML elemeket attrib\u00fatumaik alapj\u00e1n is ki tudjuk jel\u00f6lni CSS-ben. A k\u00e9t legalapvet\u0151bb szelektort\u00edpus erre a c\u00e9lra: E1[attr] : kijel\u00f6li az \u00f6sszes olyan E1 -et, amely rendelkezik az attr attrib\u00fatummal E1[attr=\"val\"] : kijel\u00f6li az \u00f6sszes olyan E1 -et, amelynek attr attrib\u00fatum\u00e1nak \u00e9rt\u00e9ke val . P\u00e9lda: Az a[target] szelektor kijel\u00f6l minden olyan hivatkoz\u00e1st, amely rendelkezik a target attrib\u00fatummal. Az a[target=\"_blank\"] azokat a hivatkoz\u00e1sokat jel\u00f6li ki, amelyek target attrib\u00fatum\u00e1nak \u00e9rt\u00e9ke _blank . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > a { margin-right : 10 px ; } a [ target ] { text-transform : uppercase ; font-weight : bold ; } /* f\u00e9lk\u00f6v\u00e9r, nagybet\u0171s */ a [ target = \"_blank\" ] { color : red ; } /* piros bet\u0171sz\u00edn */ </ style > </ head > < body > < a href = \"https://youtu.be/NUYvbT6vTPs\" > Els\u0151 link </ a > < a href = \"https://youtu.be/yBLdQ1a4-JI\" target = \"_blank\" > M\u00e1sodik link </ a > < a href = \"https://youtu.be/dQw4w9WgXcQ\" target = \"_blank\" > Harmadik link </ a > < a href = \"https://youtu.be/sAn7baRbhx4\" target = \"_self\" > Negyedik link </ a > </ body > </ html >","title":"Kijel\u00f6l\u00e9s attrib\u00fatum alapj\u00e1n"},{"location":"gyakorlat/gyak3/#kijeloles-allapot-alapjan","text":"A CSS lehet\u0151s\u00e9get biztos\u00edt arra is, hogy \u00e1llapotuk alapj\u00e1n jel\u00f6lj\u00fcnk HTML elemeket. Az ilyen kijel\u00f6l\u00e9seket pseudo-class-ok seg\u00edts\u00e9g\u00e9vel fogjuk megval\u00f3s\u00edtani. Az \u00e1llapot alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9sre tal\u00e1n a legszeml\u00e9letesebb p\u00e9lda a hivatkoz\u00e1sok (linkek) \u00e1llapotai. Egy hivatkoz\u00e1snak \u00f6sszesen 4 \u00e1llapota lehet, amelyekre a k\u00f6vetkez\u0151k\u00e9ppen hivatkozhatunk CSS-ben: a:link : m\u00e9g nem kerest\u00fck fel a hivatkozott c\u00e9lt a:visited : m\u00e1r felkerest\u00fck a hivatkozott c\u00e9lt a:hover : a kurzor a hivatkoz\u00e1s f\u00f6l\u00f6tt \u00e1ll a:active : a hivatkoz\u00e1s akt\u00edv (r\u00e1kattintunk). Figyelem Ahhoz, hogy a fenti szelektorok mindegyike hat\u00e1sos legyen... ...az a:hover -nek az a:link \u00e9s a:visited ut\u00e1n kell szerepelni a k\u00f3dban ...az a:active -nak az a:hover ut\u00e1n kell szerepelnie a k\u00f3dban. P\u00e9lda: Hivatkoz\u00e1sok form\u00e1z\u00e1sa \u00e1llapot alapj\u00e1n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > a : link { color : green ; } a : visited { color : gray ; } a : hover { color : orange ; } a : active { color : red ; } </ style > </ head > < body > < p >< a href = \"https://theuselessweb.com/\" > Ez egy hivatkoz\u00e1s </ a ></ p > </ body > </ html > A fenti pseudo-class-ok k\u00f6z\u00fcl a :hover \u00e9s az :active nem csak hivatkoz\u00e1sokra, hanem b\u00e1rmilyen HTML objektumra is haszn\u00e1lhat\u00f3k.","title":"Kijel\u00f6l\u00e9s \u00e1llapot alapj\u00e1n"},{"location":"gyakorlat/gyak3/#egyeb-css-formazasok","text":"","title":"Egy\u00e9b CSS form\u00e1z\u00e1sok"},{"location":"gyakorlat/gyak3/#a-text-decoration-tulajdonsag","text":"\u00c9szrevehett\u00fck, hogy a hivatkoz\u00e1sokat (linkeket) a b\u00f6ng\u00e9sz\u0151k \u00e1ltal\u00e1ban k\u00e9k bet\u0171sz\u00ednnel, al\u00e1h\u00fazva jelen\u00edtik meg. Ezt persze b\u00e1rmikor \u00edzl\u00e9s\u00fcnkre szabhatjuk: a sz\u00ednt \u00e1t\u00e1ll\u00edthatjuk, illetve a link dekor\u00e1ci\u00f3j\u00e1t (az al\u00e1h\u00faz\u00e1st) is szab\u00e1lyozhatjuk a text-decoration CSS tulajdons\u00e1ggal. A text-decoration -nek rendre 3 param\u00e9tert adhatunk meg: a sz\u00f6vegdekor\u00e1ci\u00f3 fajt\u00e1j\u00e1t (k\u00f6telez\u0151 megadni): lehets\u00e9ges \u00e9rt\u00e9kek: underline (al\u00e1h\u00fazott), overline (vonal az elem f\u00f6l\u00f6tt), line-through (\u00e1th\u00fazott), none (nincs vonal), initial (alap\u00e9rtelmezett \u00e9rt\u00e9k) a vonal st\u00edlus\u00e1t (opcion\u00e1lis): lehets\u00e9ges \u00e9rt\u00e9kek: solid (folytonos), dashed (szaggatott), dotted (pontozott), wavy (hull\u00e1mos) a vonal sz\u00edn\u00e9t (opcion\u00e1lis). A text-decoration tulajdons\u00e1g egy\u00e9bk\u00e9nt nem csak hivatkoz\u00e1sokra, hanem tetsz\u0151leges sz\u00f6vegelemre is haszn\u00e1lhat\u00f3. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > A text-decoration tulajdons\u00e1g </ title > < meta charset = \"UTF-8\" /> < style > a { text-decoration : none ; } . decorated { text-decoration : underline dotted red ; } </ style > </ head > < body > < p >< a href = \"https://theuselessweb.com/\" > Hivatkoz\u00e1s, al\u00e1h\u00faz\u00e1s n\u00e9lk\u00fcl </ a ></ p > < p class = \"decorated\" > Egy piros szaggatott vonallal al\u00e1h\u00fazott sz\u00f6veg </ p > </ body > </ html >","title":"A text-decoration tulajdons\u00e1g"},{"location":"gyakorlat/gyak3/#listak-formazasa","text":"A m\u00falt \u00f3r\u00e1n megismerkedt\u00fcnk a HTML-ben tal\u00e1lhat\u00f3 rendezetlen \u00e9s rendezett list\u00e1kkal. Az al\u00e1bbi t\u00e1bl\u00e1zatban \u00f6sszefoglaljuk a list\u00e1kkal kapcsolatos fontosabb form\u00e1z\u00e1sokat. CSS tulajdons\u00e1g neve Szerepe A tulajdons\u00e1g \u00e9rt\u00e9ke list-style-type listajel m\u00f3dos\u00edt\u00e1sa - Rendezetlen list\u00e1k eset\u00e9n: disc (teli karika), circle (\u00fcres karika), square (teli n\u00e9gyzet), none (nincs listajel) - Rendezett list\u00e1k eset\u00e9n: decimal (arab sz\u00e1m), lower-roman / upper-roman (r\u00f3mai sz\u00e1m), lower-alpha / upper-alpha (kisbet\u0171/nagybet\u0171), none (nincs listajel) list-style-image k\u00e9p be\u00e1ll\u00edt\u00e1sa listajelk\u00e9nt A k\u00e9p el\u00e9r\u00e9si \u00fatvonal\u00e1t az url('el\u00e9r\u00e9si_\u00fatvonal') seg\u00edts\u00e9g\u00e9vel adjuk meg list-style-position felsorol\u00e1sjelek poz\u00edci\u00f3j\u00e1nak be\u00e1ll\u00edt\u00e1sa - outside : a felsorol\u00e1s f\u00fcgg\u0151leges vonal\u00e1ba a felsorolt tartalom ker\u00fcl - inside : a felsorol\u00e1s f\u00fcgg\u0151leges vonal\u00e1ba a listajelek ker\u00fclnek","title":"List\u00e1k form\u00e1z\u00e1sa"},{"location":"gyakorlat/gyak3/#tablazatok-formazasa","text":"A HTML t\u00e1bl\u00e1zatokra, azok soraira \u00e9s cell\u00e1ira is haszn\u00e1lhat\u00f3k a kor\u00e1bban tanult h\u00e1tt\u00e9r- \u00e9s sz\u00f6vegform\u00e1z\u00e1sok, valamint a t\u00e9rk\u00f6zre, marg\u00f3ra \u00e9s szeg\u00e9lyre vonatkoz\u00f3 utas\u00edt\u00e1sok. A t\u00e1bl\u00e1zatnak \u00e9s a cell\u00e1knak a m\u00e1r j\u00f3l ismert border tulajdons\u00e1ggal adhatunk szeg\u00e9lyt. Alap\u00e9rtelmezett m\u00f3don a t\u00e1bl\u00e1zat szeg\u00e9lyei \u00e9s a cell\u00e1k szeg\u00e9lyei el vannak v\u00e1lasztva egym\u00e1st\u00f3l, ez\u00e9rt \u00fagy t\u0171nhet, mintha a t\u00e1bl\u00e1zatban mindenhol dupla szeg\u00e9lyek lenn\u00e9nek. A border-collapse: collapse utas\u00edt\u00e1ssal ezek a szeg\u00e9lyek \u00f6sszevonhat\u00f3k. A t\u00e1bl\u00e1zatnak a szok\u00e1sos m\u00f3don megadhatjuk a sz\u00e9less\u00e9g\u00e9t \u00e9s magass\u00e1g\u00e1t ( width \u00e9s height tulajdons\u00e1gok), valamint a v\u00edzszintes marg\u00f3k \u00e9rt\u00e9k\u00e9nek auto -ra \u00e1ll\u00edt\u00e1s\u00e1val v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edthatjuk a t\u00e1bl\u00e1zatot az oldalon bel\u00fcl. Ha egy t\u00e1bl\u00e1zat rendelkezik c\u00edmmel (amit a <caption> taggel adtunk meg), akkor ez a c\u00edm alap\u00e9rtelmezett m\u00f3don a t\u00e1bl\u00e1zat f\u00f6l\u00f6tt jelenik meg. A caption-side: bottom utas\u00edt\u00e1ssal viszont \u00e1thelyezhet\u0151 a t\u00e1bl\u00e1zat al\u00e1. A vertical-align: middle utas\u00edt\u00e1ssal egy t\u00e1bl\u00e1zatcella tartalm\u00e1t f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edthatjuk. A tartalom v\u00edzszintes igaz\u00edt\u00e1s\u00e1ra a kor\u00e1bban l\u00e1tott text-align tulajdons\u00e1got haszn\u00e1ljuk. P\u00e9lda: Egy t\u00e1bl\u00e1zat form\u00e1z\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > T\u00e1bl\u00e1zatok form\u00e1z\u00e1sa </ title > < meta charset = \"UTF-8\" /> < style > table { border : 1 px solid black ; /* a t\u00e1bl\u00e1zat k\u00f6r\u00fcli szeg\u00e9ly */ border-collapse : collapse ; /* szeg\u00e9lyek \u00f6sszevon\u00e1sa */ width : 60 % ; /* a rendelkez\u00e9sre \u00e1ll\u00f3 sz\u00e9less\u00e9g 60%-a */ margin : 0 auto ; /* v\u00edzszintesen k\u00f6z\u00e9pre igaz\u00edt\u00e1s */ } th , td { border : 1 px solid black ; /* a cell\u00e1k k\u00f6r\u00fcli szeg\u00e9ly */ vertical-align : middle ; /* tartalom igaz\u00edt\u00e1sa f\u00fcgg\u0151legesen k\u00f6z\u00e9pre */ text-align : center ; /* tartalom igaz\u00edt\u00e1sa v\u00edzszintesen k\u00f6z\u00e9pre */ padding : 5 px ; } th { background-color : #CC6633 ; color : white ; } /* minden p\u00e1ros sornak adunk h\u00e1tt\u00e9rsz\u00ednt */ tr : nth-of-type ( even ) { background-color : #F2F2F2 ; } /* ha a kurzor egy sor f\u00f6l\u00f6tt \u00e1ll, megv\u00e1ltoztatjuk a sor h\u00e1tt\u00e9rsz\u00edn\u00e9t */ tr : hover { background-color : #E5E5E5 ; } </ style > </ head > < body > < h1 > K\u00edn\u00e1latunk </ h1 > < table > < tr >< th > Pizza neve </ th >< th > \u00c1r </ th ></ tr > < tr >< td > Sonk\u00e1s-kukoric\u00e1s </ td >< td > 1800 Ft </ td ></ tr > < tr >< td > Kolb\u00e1szos </ td >< td > 1800 Ft </ td ></ tr > < tr >< td > N\u00e9gysajtos </ td >< td > 2000 Ft </ td ></ tr > < tr >< td > Veget\u00e1ri\u00e1nius </ td >< td > 2200 Ft </ td ></ tr > </ table > </ body > </ html >","title":"T\u00e1bl\u00e1zatok form\u00e1z\u00e1sa"},{"location":"gyakorlat/gyak3/#a-box-sizing-tulajdonsag","text":"A fenti k\u00f3dp\u00e9ld\u00e1ban a t\u00e1bl\u00e1zat sz\u00e9less\u00e9g\u00e9t sz\u00e1zal\u00e9kban adtuk meg. Ha egy m\u00e1sik elemen bel\u00fcl elhelyezked\u0151 objektum m\u00e9ret\u00e9t sz\u00e1zal\u00e9kban adjuk meg, akkor el\u0151fordulhat, hogy a k\u00f6vetkez\u0151 jelens\u00e9ggel tal\u00e1ljuk szemben magunkat: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > # parent { border : 10 px solid black ; } # child { width : 100 % ; border : 10 px solid gray ; } </ style > </ head > < body > < div id = \"parent\" > < div id = \"child\" > Be\u00e1gyazott objektum </ div > </ div > </ body > </ html > L\u00e1that\u00f3, hogy a be\u00e1gyazott objektum szeg\u00e9lye \"kil\u00f3g\" az \u0151t tartalmaz\u00f3 objektumb\u00f3l, ami k\u00f6zel sem mondhat\u00f3 sz\u00e9pnek. Ennek a jelens\u00e9g az oka, hogy az elemek m\u00e9ret\u00e9be alap\u00e9rtelmezett m\u00f3don csak az elem tartalma tartozik bele, a t\u00e9rk\u00f6z\u00f6k \u00e9s a szeg\u00e9lyek nem. Ha azt szeretn\u00e9nk, hogy az elem m\u00e9ret\u00e9be a tartalom mellett a t\u00e9rk\u00f6z\u00f6k \u00e9s a szeg\u00e9lyek is beletartozzanak, haszn\u00e1ljuk a box-sizing: border-box utas\u00edt\u00e1st! Az el\u0151z\u0151 k\u00f3d ennek megfelel\u0151en \u00e1t\u00edrva: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Tov\u00e1bbi CSS szelektorok </ title > < meta charset = \"UTF-8\" /> < style > # parent { border : 10 px solid black ; } # child { width : 100 % ; border : 10 px solid gray ; box-sizing : border-box ; } </ style > </ head > < body > < div id = \"parent\" > < div id = \"child\" > Be\u00e1gyazott objektum </ div > </ div > </ body > </ html >","title":"A box-sizing tulajdons\u00e1g"},{"location":"gyakorlat/gyak3/#a-css-oroklodes","text":"CSS-ben l\u00e9tezik \u00f6r\u00f6kl\u0151d\u00e9s , ami azt jelenti, hogy egy objektum bizonyos CSS tulajdons\u00e1gait \u00f6r\u00f6k\u00f6lhetik az objektum gyerekei. Ennek k\u00f6sz\u00f6nhet\u0151en bizonyos tulajdons\u00e1gokat elegend\u0151 csak egyszer defini\u00e1lnunk a sz\u00fcl\u0151 objektumra, \u00e9s ekkor a gyerekek is automatikusan meg\u00f6r\u00f6klik ezeket. Fontos megjegyezni viszont, hogy nem minden CSS tulajdons\u00e1g \u00f6r\u00f6k\u00f6l\u0151dik. Az al\u00e1bbi t\u00e1bl\u00e1zatban \u00f6sszefoglaljuk a fontosabb \u00f6r\u00f6kl\u0151d\u0151, illetve nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gokat. \u00d6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gok Nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1gok color , font-family , font-size , font-weight , list-style , text-align , text-indent , text-transform , visibility , white-space , word-space , letter-spacing , line-height background , border , display , float , width , height , margin , outline , overflow , padding , position , text-decoration , vertical-align , z-index , ... Amennyiben egy nem \u00f6r\u00f6kl\u0151d\u0151 CSS tulajdons\u00e1got m\u00e9gis \u00f6r\u00f6k\u00f6ltetni szeretn\u00e9nk, akkor ezt az inherit speci\u00e1lis \u00e9rt\u00e9kkel tehetj\u00fck meg. P\u00e9lda: A font-family \u00e9s color tulajdons\u00e1gok automatikusan \u00f6r\u00f6kl\u0151dnek, viszont a border alapb\u00f3l nem. Az inherit kulcssz\u00f3val viszont a border is \u00f6r\u00f6k\u00f6ltethet\u0151 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS \u00f6r\u00f6kl\u0151d\u00e9s </ title > < meta charset = \"UTF-8\" /> < style > # parent { font-family : Arial ; color : blue ; border : 3 px solid black ; } # child { border : inherit } /* en\u00e9lk\u00fcl a szeg\u00e9ly nem \u00f6r\u00f6kl\u0151dne! */ </ style > </ head > < body > < div id = \"parent\" > Sz\u00fcl\u0151 objektum < div id = \"child\" > Gyerek objektum </ div > </ div > </ body > </ html >","title":"A CSS \u00f6r\u00f6kl\u0151d\u00e9s"},{"location":"gyakorlat/gyak3/#a-css-rangsor","text":"Felmer\u00fclhet a k\u00e9rd\u00e9s, hogy ha egy objektumra t\u00f6bb, egym\u00e1snak ellentmond\u00f3 CSS form\u00e1z\u00e1st adunk ki (pl. egy bekezd\u00e9s sz\u00edn\u00e9t k\u00e9kre, majd k\u00e9s\u0151bb pirosra szeretn\u00e9nk \u00e1ll\u00edtani), akkor ezek k\u00f6z\u00fcl vajon melyik lesz \u00e9rv\u00e9nyes. Pontosan erre ad v\u00e1laszt a CSS rangsor , amely k\u00fcl\u00f6nb\u00f6z\u0151 priorit\u00e1s \u00e9rt\u00e9keket rendel az egyes form\u00e1z\u00e1sokhoz, \u00e9s ezek alapj\u00e1n d\u00f6nti el, hogy v\u00e9g\u00fcl mely form\u00e1z\u00e1s fog \u00e9rv\u00e9nyes\u00fclni. A priorit\u00e1sok a k\u00f6vetkez\u0151k\u00e9ppen alakulnak (leger\u0151sebbt\u0151l a leggyeng\u00e9bbig): !important kulcssz\u00f3val megadott form\u00e1z\u00e1sok inline CSS (a tagek style attrib\u00fatumak\u00e9nt adjuk meg) id szelektorral megadott form\u00e1z\u00e1sok class szelektorral megadott form\u00e1z\u00e1sok elem szelektorral megadott form\u00e1z\u00e1sok. P\u00e9lda: Az al\u00e1bbi k\u00f3dban az els\u0151 bekezd\u00e9s piros (hiszen a #first id szelektor er\u0151sebb, mint a .blue class szelektor), a m\u00e1sodik k\u00e9k (hiszen az inline CSS er\u0151sebb, mint az id szelektor), a harmadik pedig narancss\u00e1rga lesz (hiszen a az !important kulcssz\u00f3val megadott form\u00e1z\u00e1s a leger\u0151sebb) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > CSS \u00f6r\u00f6kl\u0151d\u00e9s </ title > < meta charset = \"UTF-8\" /> < style > . blue { color : blue ; } # first { color : red ; } # second { color : green ; } # third { color : orange !important ; } </ style > </ head > < body > < p id = \"first\" class = \"blue\" > Els\u0151 bekezd\u00e9s </ p > < p id = \"second\" style = \"color: blue;\" > M\u00e1sodik bekezd\u00e9s </ p > < p id = \"third\" style = \"color: purple;\" > Harmadik bekezd\u00e9s </ p > </ body > </ html > Megjegyz\u00e9s A felhaszn\u00e1l\u00f3 \u00e1ltal !important kulcssz\u00f3val defini\u00e1lt form\u00e1z\u00e1sok er\u0151sebbek, mint a webfejleszt\u0151k \u00e1ltal ugyanezzel a kulcssz\u00f3val defini\u00e1lt st\u00edlusok. Ugyanakkor a felhaszn\u00e1l\u00f3 \u00e1ltal defini\u00e1lt egy\u00e9b st\u00edlusok \u00f6nmagukban nem er\u0151sebbek, mint a webfejleszt\u0151 \u00e1ltal defini\u00e1ltak. Az \u00f6sszetett szelektorok - teh\u00e1t azok a szelektorok, amelyek t\u00f6bb r\u00e9szszelektorb\u00f3l \u00e9p\u00fclnek fel - eset\u00e9n a r\u00e9szszelektorok priorit\u00e1sai \u00f6sszead\u00f3dnak. Az \u00edgy kapott \u00f6sszeg lesz a szelektor priorit\u00e1sa. P\u00e9lda Legyenek adottak a k\u00f6vetkez\u0151 szelektor-priorit\u00e1s p\u00e1rok: elem szelektor - 1, class szelektor - 10, id szelektor - 100. Ekkor a #main .container p \u00f6sszetett szelektor priorit\u00e1sa: 100+10+1 = 111. Ha az eddigiek alapj\u00e1n nem d\u0151lt el a rangsor, akkor a k\u00f3dban k\u00e9s\u0151bb szerepl\u0151 form\u00e1z\u00e1s lesz az \u00e9rv\u00e9nyes.","title":"A CSS rangsor"},{"location":"gyakorlat/gyak3/#helyzetmegadas","text":"A webfejleszt\u00e9s sor\u00e1n gyakran el\u0151fordul, hogy egy weboldal elrendez\u00e9s\u00e9nek kialak\u00edt\u00e1sakor meg akarjuk v\u00e1ltoztatni bizonyos objektumok alap\u00e9rtelmezett poz\u00edci\u00f3j\u00e1t. Erre szolg\u00e1l a pozicion\u00e1l\u00e1s \u00e9s helyzetmegad\u00e1s.","title":"Helyzetmegad\u00e1s"},{"location":"gyakorlat/gyak3/#a-position-tulajdonsag","text":"A HTML objektumok poz\u00edci\u00f3j\u00e1t a position CSS tulajdons\u00e1ggal adhatjuk meg. \u00c9rt\u00e9kei: static : a norm\u00e1l sz\u00f6vegfolyamban l\u00e9v\u0151 hely, a pozicion\u00e1l\u00e1soknak nincs hat\u00e1sa (alap\u00e9rtelmezett) relative : a norm\u00e1l sz\u00f6vegfolyambeli hely\u00e9hez k\u00e9pest elmozd\u00edtja az elemet a k\u00e9rt m\u00e9rt\u00e9kben absolute : a legk\u00f6zelebbi, nem static helyzet\u0171 sz\u00fcl\u0151objektum bels\u0151 sz\u00e9l\u00e9hez (vagy ilyen sz\u00fcl\u0151 hi\u00e1ny\u00e1ban a viewport sz\u00e9l\u00e9hez) k\u00e9pest pozicion\u00e1l fixed : az elem g\u00f6rd\u00edt\u00e9skor is r\u00f6gz\u00edtett helyen marad. Az elemek f\u00fcgg\u0151leges pozicion\u00e1l\u00e1s\u00e1ra a top \u00e9s bottom , m\u00edg v\u00edzszintes pozicion\u00e1l\u00e1sra a left \u00e9s right CSS tulajdons\u00e1gokat haszn\u00e1lhatjuk. A static m\u00f3don pozicion\u00e1lt elemek eset\u00e9n ezeknek az utas\u00edt\u00e1soknak nincs hat\u00e1sa! P\u00e9lda: A position tulajdons\u00e1g haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > Elemek pozicion\u00e1l\u00e1sa </ title > < meta charset = \"UTF-8\" /> < style > . box { padding : 20 px 10 px ; } . container { position : relative ; height : 800 px ; background : lightblue ; } . first { position : absolute ; top : 0 ; right : 0 ; background : tomato ; } . second { /* top: 500px; */ background : mediumaquamarine ; } . third { position : fixed ; background : lightgreen ; } </ style > </ head > < body > < div class = \"container\" > < p > Pozicion\u00e1l\u00e1s </ p > < div class = \"first box\" > Els\u0151 </ div > < div class = \"second box\" > M\u00e1sodik </ div > < div class = \"third box\" > Harmadik </ div > </ div > </ body > </ html > A fenti p\u00e9lda magyar\u00e1zata: Az absolute m\u00f3don pozicion\u00e1lt, \"Els\u0151\" felirat\u00fa elem az \u0151t be\u00e1gyaz\u00f3 nem static (hanem jelen esetben relative ) helyzet\u0171 elem (ez most a class=\"container\" attrib\u00fatum\u00fa <div> ) jobb fels\u0151 sark\u00e1hoz igazodik. A \"M\u00e1sodik\" felirat\u00fa elem static helyzet\u0171, \u00edgy a pozicion\u00e1l\u00e1snak nincs hat\u00e1sa. A fixed helyzet\u0171, \"Harmadik\" felirat\u00fa elem g\u00f6rd\u00edt\u00e9skor is r\u00f6gz\u00edtett helyen marad. Tipp Manaps\u00e1g gyakran szokt\u00e1k haszn\u00e1lni a sticky kulcssz\u00f3t is elemek pozicion\u00e1l\u00e1sa sor\u00e1n. Err\u0151l itt olvashatunk r\u00e9szletesebben.","title":"A position tulajdons\u00e1g"},{"location":"gyakorlat/gyak3/#usztatas","text":"A float CSS tulajdons\u00e1ggal lehet\u0151s\u00e9g\u00fcnk van egy elem \u00fasztat\u00e1s\u00e1ra. Ekkor az \u00fasztatott elemet a tartalom a m\u00e1sik ir\u00e1nyb\u00f3l k\u00f6rbefutja (teh\u00e1t p\u00e9ld\u00e1ul ha balra \u00fasztatunk egy elemet, akkor jobbr\u00f3l fogja \u0151t k\u00f6rbefutni a tartalom). A tulajdons\u00e1g lehets\u00e9ges \u00e9rt\u00e9kei: left (balra \u00fasztat\u00e1s), right (jobbra \u00fasztat\u00e1s), none (nincs \u00fasztat\u00e1s). P\u00e9lda: Egy k\u00e9p balra \u00fasztat\u00e1sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > \u00dasztat\u00e1s </ title > < meta charset = \"UTF-8\" /> < style > . floating-img { height : 140 px ; float : left ; margin-right : 10 px ; } </ style > </ head > < body > < img class = \"floating-img\" src = \"giraffe.jpg\" alt = \"Zsir\u00e1f\" /> < p > A zsir\u00e1f (Giraffa camelopardalis) Afrik\u00e1ban \u00e9l\u0151 p\u00e1rosujj\u00fa pat\u00e1s eml\u0151s, a legmagasabb \u00e9s leghosszabb nyak\u00fa sz\u00e1razf\u00f6ldi \u00e9l\u0151l\u00e9ny. A szavann\u00e1k lak\u00f3ja az \u00f3kort\u00f3l kedvelt attrakci\u00f3 volt - R\u00f3m\u00e1ban el\u0151sz\u00f6r Julius Caesar mutatott be zsir\u00e1fokat az amfite\u00e1trumi j\u00e1t\u00e9kokon - \u00e9s ma is n\u00e9pszer\u0171 szafarikon \u00e9s \u00e1llatkertekben. Neve arab eredet\u0171, olasz k\u00f6zvet\u00edt\u00e9ssel jutott el a magyarba a k\u00e9s\u0151 k\u00f6z\u00e9pkorban. A tudom\u00e1nyos nev\u00e9ben szerepl\u0151 szerepl\u0151 camelopardalis a faj addig haszn\u00e1lt nev\u00e9re, a g\u00f6r\u00f6g kam\u00e9lopardaliszra (\"tevep\u00e1rduc\") utal. </ p > </ body > </ html > Ha meg szeretn\u00e9nk akad\u00e1lyozni egy objektum k\u00f6r\u00fcl egy m\u00e1sik, \u00fasztatott objektum elhelyez\u00e9s\u00e9t, akkor ezt a clear CSS tulajdons\u00e1ggal tudjuk megtenni. Lehets\u00e9ges \u00e9rt\u00e9kei: left (balr\u00f3l nem lehet \u00fasztatott elem), right (jobbr\u00f3l nem lehet \u00fasztatott elem), both (sem balr\u00f3l, sem jobbr\u00f3l nem lehet \u00fasztatott elem), none (balr\u00f3l \u00e9s jobbr\u00f3l is lehet \u00fasztatott elem).","title":"\u00dasztat\u00e1s"},{"location":"gyakorlat/gyak4/","text":"4. gyakorlat \u00b6 A gyakorlat anyaga \u00b6 HTML5 \u0171rlapok l\u00e9trehoz\u00e1sa \u00e9s form\u00e1z\u00e1sa, n\u00e9h\u00e1ny fontosabb \u0171rlapelem megismer\u00e9se. Az \u0171rlapok szerepe \u00b6 Az eddigiek sor\u00e1n f\u0151k\u00e9nt a weboldalak megjelen\u00e9s\u00e9n volt a hangs\u00faly: k\u00fcl\u00f6nf\u00e9le elemeket helyezt\u00fcnk el a weboldalon HTML-ben, majd CSS-ben form\u00e1z\u00e1sokkal l\u00e1ttuk el \u0151ket. A HTML \u0171rlapok lehet\u0151s\u00e9get biztos\u00edtanak arra, hogy a weboldalaink felhaszn\u00e1l\u00f3i bemenetet is tudjanak fogadni, amit k\u00e9s\u0151bb fel tudunk dolgozni. Az \u0171rlapok a modern weboldalak szerves r\u00e9szei, nap mint nap tal\u00e1lkozunk vel\u00fck webes kalandoz\u00e1saink sor\u00e1n: p\u00e9ld\u00e1ul ha be szeretn\u00e9nk l\u00e9pni a kedvenc k\u00f6z\u00f6ss\u00e9gi oldalunkra, akkor egy - az al\u00e1bbihoz hasonl\u00f3 - bejelentkez\u00e9si \u0171rlapon adjuk meg a bel\u00e9p\u00e9shez sz\u00fcks\u00e9ges adatainkat. Ennek a leck\u00e9nek a c\u00e9lja, hogy megtanuljunk HTML \u0171rlapokat k\u00e9sz\u00edteni. Term\u00e9szetesen a gyakorlatban fel is szoktuk dolgozni a felhaszn\u00e1l\u00f3 \u00e1ltal megadott \u0171rlapadatokat, viszont az \u0171rlapok feldolgoz\u00e1s\u00e1val majd csak a PHP t\u00e9mak\u00f6r\u00e9ben fogunk foglalkozni. \u0170rlapok l\u00e9trehoz\u00e1sa \u00b6 HTML-ben a <form>...</form> tagp\u00e1rral hozhatunk l\u00e9tre \u0171rlapokat. Term\u00e9szetesen az \u0171rlapok - mint minden megjelen\u00edtend\u0151 elem a weboldalon - a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9be ( body ) ker\u00fclnek. A <form> tagnek adhat\u00f3 fontosabb attrib\u00fatumok: action : az \u0171rlap elk\u00fcld\u00e9sekor v\u00e9grehajtand\u00f3 feladat (jellemz\u0151en egy PHP szkript) method : az \u0171rlapadatok tov\u00e1bb\u00edt\u00e1s\u00e1nak m\u00f3dja lehets\u00e9ges \u00e9rt\u00e9kei: GET (az \u0171rlapadatok az URL-ben ker\u00fclnek tov\u00e1bb\u00edt\u00e1sra, alap\u00e9rtelmezett), POST (az \u0171rlapadatok a h\u00e1tt\u00e9rben tov\u00e1bb\u00edt\u00f3dnak) enctype : az \u0171rlapadatok k\u00f3dol\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: application/x-www-form-urlencoded (alap\u00e9rtelmezett), multipart/form-data (f\u00e1jlfelt\u00f6lt\u00e9st tartalmaz\u00f3 \u0171rlapokn\u00e1l ezt kell haszn\u00e1lnunk), text/plain autocomplete : automatikus kit\u00f6lt\u00e9si javaslatok enged\u00e9lyez\u00e9se vagy letilt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: on (kit\u00f6lt\u00e9si javaslatok enged\u00e9lyez\u00e9se), off (kit\u00f6lt\u00e9si javaslatok letilt\u00e1sa) novalidate : letiltja az \u0171rlap elk\u00fcld\u00e9sekor v\u00e9grehajtand\u00f3 ellen\u0151rz\u00e9seket. Kiemelten fontos megjegyezni, hogy mivel a method=\"GET\" attrib\u00fatummal rendelkez\u0151 \u0171rlapok adatai az URL-ben lesznek tov\u00e1bb\u00edtva, ez\u00e9rt ez a m\u00f3dszer NEM alkalmas bizalmas adatok (pl. jelszavak) biztons\u00e1gos tov\u00e1bb\u00edt\u00e1s\u00e1ra (v\u00e9lhet\u0151en senki nem \u00f6r\u00fclne annak, ha a jelszav\u00e1t b\u00e1rki l\u00e1thatn\u00e1 az URL s\u00e1vban)! Ha egy \u0171rlapon bizalmas adatokat (pl. jelszavakat) szeretn\u00e9nk tov\u00e1bb\u00edtani, akkor mindenk\u00e9ppen a method=\"POST\" attrib\u00fatumot haszn\u00e1ljuk! Fontosabb \u0171rlapelemek \u00b6 Ebben a fejezetben megismerked\u00fcnk n\u00e9h\u00e1ny fontosabb vez\u00e9rl\u0151elemmel, amelyeket gyakran szoktunk HTML \u0171rlapokon haszn\u00e1lni. Egysoros beviteli mez\u0151 \u00b6 A HTML \u0171rlapokon leggyakrabban az <input/> p\u00e1ratlan taget haszn\u00e1ljuk. Ez sz\u00e1mos k\u00fcl\u00f6nf\u00e9le \u0171rlapelem (pl. sz\u00f6veges beviteli mez\u0151, v\u00e1laszt\u00f3gomb, jel\u00f6l\u0151n\u00e9gyzet, elk\u00fcld\u00e9s gomb) l\u00e9trehoz\u00e1s\u00e1ra alkalmas. Glob\u00e1lis attrib\u00fatumok \u00b6 M\u00e9g miel\u0151tt \u00e1ttekinten\u00e9nk a k\u00fcl\u00f6nf\u00e9le beviteli mez\u0151 t\u00edpusokat, el\u0151sz\u00f6r ismerkedj\u00fcnk meg az <input> tagnek adhat\u00f3 fontosabb attrib\u00fatumokkal: name : mez\u0151n\u00e9v, ami alapj\u00e1n le tudjuk k\u00e9rni a beviteli mez\u0151be \u00edrt \u00e9rt\u00e9ket size : a beviteli mez\u0151 sz\u00e9less\u00e9ge (karakterben) teh\u00e1t nem a be\u00edrhat\u00f3 karakterek sz\u00e1m\u00e1t korl\u00e1tozza, hanem csak a megjelen\u0151 \u0171rlapmez\u0151 sz\u00e9less\u00e9g\u00e9t (vesd \u00f6ssze: maxlength ) maxlength : a be\u00edrhat\u00f3 karakterek maxim\u00e1lis sz\u00e1ma value : a mez\u0151be \u00edrt alap\u00e9rtelmezett \u00e9rt\u00e9k placeholder : minta\u00e9rt\u00e9k a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra (akkor jelenik meg, ha a mez\u0151 \u00fcres) autocomplete : ugyan\u00fagy m\u0171k\u00f6dik, mint a <form> -n\u00e1l ( on / off \u00e9rt\u00e9kek) required : a mez\u0151t k\u00f6telez\u0151 kit\u00f6lteni readonly : a mez\u0151 csak olvashat\u00f3, nem m\u00f3dos\u00edthat\u00f3 disabled : a mez\u0151 letilt\u00e1sa (halv\u00e1nyan jelenik meg, nem lehet bele \u00edrni) type : az \u0171rlapmez\u0151 t\u00edpusa. Fontosabb beviteli mez\u0151 t\u00edpusok \u00b6 Az <input> tag type attrib\u00fatum\u00e1val megadhatjuk a beviteli mez\u0151 t\u00edpus\u00e1t. N\u00e9h\u00e1ny, sz\u00e1munkra \u00e9rdekesebb mez\u0151t\u00edpus, amik k\u00f6z\u00fcl v\u00e1logathatunk: <input type=\"text\"/> : r\u00f6vid sz\u00f6veg <input type=\"password\"/> : jelsz\u00f3 a be\u00edrt karakterek helyett pontok vagy csillagok jelennek meg a jelszavak szerverre val\u00f3 tov\u00e1bb\u00edt\u00e1s\u00e1n\u00e1l nincs titkos\u00edt\u00e1s(!) <input type=\"number\"/> : sz\u00e1m <input type=\"range\"/> : intervallum min attrib\u00fatum: a legkisebb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9k max attrib\u00fatum: a legnagyobb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9k step attrib\u00fatum: l\u00e9p\u00e9sk\u00f6z <input type=\"tel\"/> : telefonsz\u00e1m <input type=\"email\"/> : e-mail c\u00edm (ellen\u0151rzi a form\u00e1tum\u00e1t) <input type=\"url\"/> : URL (ellen\u0151rzi a form\u00e1tum\u00e1t) <input type=\"color\"/> : sz\u00edn <input type=\"date\"/> : d\u00e1tum a min \u00e9s max attrib\u00fatummal megadhatjuk a legkisebb \u00e9s legnagyobb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9ket a d\u00e1tumok megad\u00e1sa \u00c9\u00c9\u00c9\u00c9-HH-NN form\u00e1tumban t\u00f6rt\u00e9nik <input type=\"time\"/> : id\u0151pont <input type=\"datetime\"/> : d\u00e1tum \u00e9s id\u0151pont <input type=\"file\"/> : f\u00e1jlfelt\u00f6lt\u00e9s <input type=\"search\"/> : keresend\u0151 sz\u00f6veg <input type=\"radio\"/> : v\u00e1laszt\u00f3gomb az egy csoportba tartoz\u00f3 v\u00e1laszt\u00f3gombok k\u00f6z\u00fcl pontosan 1 opci\u00f3 jel\u00f6lhet\u0151 meg a v\u00e1laszt\u00f3gombok csoportos\u00edt\u00e1sa a name attrib\u00fatum alapj\u00e1n t\u00f6rt\u00e9nik: az azonos name \u00e9rt\u00e9kkel rendelkez\u0151 v\u00e1laszt\u00f3gombok alkotnak egy csoportot checked attrib\u00fatum: az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor <input type=\"checkbox\"/> : jel\u00f6l\u0151n\u00e9gyzet egyszerre t\u00f6bb opci\u00f3 is megjel\u00f6lhet\u0151 checked attrib\u00fatum: az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor <input type=\"button\"/> : egyszer\u0171 nyom\u00f3gomb <input type=\"submit\"/> : elk\u00fcld\u00e9s gomb (ha r\u00e1kattintunk, elk\u00fcldi az \u0171rlapadatokat) <input type=\"reset\"/> : vissza\u00e1ll\u00edtja az \u0171rlapmez\u0151k eredeti \u00e9rt\u00e9keit <input type=\"hidden\"/> : rejtett mez\u0151 (technikai c\u00e9lokra). P\u00e9lda: Egy egyszer\u0171 bejelentkez\u00e9si \u0171rlap (form\u00e1z\u00e1s n\u00e9lk\u00fcl) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Bejelentkez\u00e9s </ h1 > < form method = \"POST\" > < input type = \"text\" name = \"username\" placeholder = \"Felhaszn\u00e1l\u00f3n\u00e9v...\" required /> < br />< br /> < input type = \"password\" name = \"passwd\" placeholder = \"Jelsz\u00f3...\" required /> < br />< br /> < input type = \"submit\" value = \"Bejelentkez\u00e9s\" /> </ form > </ body > </ html > T\u00f6bb soros beviteli mez\u0151 \u00b6 A <textarea>...</textarea> tag seg\u00edts\u00e9g\u00e9vel t\u00f6bb soros sz\u00f6veg bevitel\u00e9re alkalmas \u0171rlapmez\u0151t hozhatunk l\u00e9tre. Az ilyen beviteli mez\u0151ket gyakran haszn\u00e1ljuk p\u00e9ld\u00e1ul felhaszn\u00e1l\u00f3i visszajelz\u00e9sek, kommentek bek\u00e9r\u00e9s\u00e9re. Enn\u00e9l a tagn\u00e9l is haszn\u00e1lhat\u00f3k a kor\u00e1bban t\u00e1rgyalt name , placeholder , maxlength , required , readonly \u00e9s disabled attrib\u00fatumok. Ezek mellett a rows attrib\u00fatummal megadhatjuk a megjelen\u0151 sorok sz\u00e1m\u00e1t, a cols attrib\u00fatummal pedig az oszlopok sz\u00e1m\u00e1t. P\u00e9lda: Felhaszn\u00e1l\u00f3i visszajelz\u00e9s bek\u00e9r\u00e9se 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form > < textarea name = \"feedback\" rows = \"5\" cols = \"50\" maxlength = \"200\" placeholder = \"\u00cdrd meg a v\u00e9lem\u00e9nyedet (max. 200 karakter)!\" ></ textarea > < br /> < br /> < input type = \"submit\" /> </ form > </ body > </ html > V\u00e1laszt\u00f3lista \u00b6 A <select>...</select> tagp\u00e1rral egy lenyithat\u00f3 v\u00e1laszt\u00f3list\u00e1t hozhatunk l\u00e9tre egy \u0171rlapon bel\u00fcl, amelynek seg\u00edts\u00e9g\u00e9vel k\u00fcl\u00f6nb\u00f6z\u0151 opci\u00f3k k\u00f6z\u00fcl v\u00e1laszthat a felhaszn\u00e1l\u00f3. A kor\u00e1bban t\u00e1rgyalt name , required \u00e9s disabled attrib\u00fatumokat erre az \u0171rlapelemre is alkalmazhatjuk. A v\u00e1laszt\u00f3list\u00e1hoz tartoz\u00f3 opci\u00f3kat az <option>...</option> taggel adhatjuk meg. A tag fontosabb attrib\u00fatumai: value : az \u0171rlap feldolgoz\u00e1sakor a szervernek elk\u00fcld\u00f6tt \u00e9rt\u00e9k selected : az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor disabled : az opci\u00f3t nem lehet kiv\u00e1lasztani. Alap\u00e9rtelmezett m\u00f3don egy v\u00e1laszt\u00f3list\u00e1ban mindig csak egy opci\u00f3t tud kiv\u00e1lasztani a felhaszn\u00e1l\u00f3. Ha enged\u00e9lyezni szeretn\u00e9nk t\u00f6bb opci\u00f3 kiv\u00e1laszt\u00e1s\u00e1t, akkor ezt a <select> tagnek adott multiple attrib\u00fatummal tehetj\u00fck meg. P\u00e9lda: Egy egyszer\u0171 v\u00e1laszt\u00f3lista 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form > A kedvenc fagyi \u00edzed: < select > < option value = \"vanilla\" > Van\u00edlia </ option > < option value = \"chocolate\" selected > Csokol\u00e1d\u00e9 </ option > < option value = \"pistachio\" > Piszt\u00e1cia </ option > < option value = \"lemon\" > Citrom </ option > < option value = \"raspberry\" > Egy\u00e9b </ option > </ select > </ form > </ body > </ html > Elemfelirat \u00b6 Az egyes \u0171rlapelemekhez k\u00e9sz\u00edthet\u00fcnk elemfeliratot is a <label>...</label> tagp\u00e1rral. Ekkor, ha a felhaszn\u00e1l\u00f3 az elemfeliratra kattint, akkor automatikusan az elemfelirathoz tartoz\u00f3 \u0171rlapmez\u0151be ker\u00fcl a kurzor. Egy \u0171rlapelemhez k\u00e9tf\u00e9lek\u00e9ppen t\u00e1rs\u00edthatunk elemfeliratot: az elemfelirathoz tartoz\u00f3 \u0171rlapelemet <label> \u00e9s </label> k\u00f6z\u00e9 helyezz\u00fck az \u0171rlapelemnek adunk egy egyedi azonos\u00edt\u00f3t ( id ), majd az elemhez tartoz\u00f3 <label> tag for attrib\u00fatum\u00e1nak \u00e9rt\u00e9kek\u00e9nt megadjuk ezt az azonos\u00edt\u00f3t. P\u00e9lda: Elemfeliratok t\u00e1rs\u00edt\u00e1sa \u0171rlapmez\u0151kh\u00f6z 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> < style > input { margin-bottom : 10 px ; } </ style > </ head > < body > < h1 > Bejelentkez\u00e9s </ h1 > < form method = \"POST\" > <!-- Az egyik m\u00f3dszer: a <label> k\u00f6zrefogja az \u0171rlapelemet --> < label > Felhaszn\u00e1l\u00f3n\u00e9v: < input type = \"text\" name = \"username\" required /></ label > < br /> <!-- A m\u00e1sik m\u00f3dszer: id \u00e9rt\u00e9k alapj\u00e1n t\u00f6rt\u00e9n\u0151 t\u00e1rs\u00edt\u00e1s --> < label for = \"my-passwd\" > Jelsz\u00f3: </ label > < input type = \"password\" id = \"my-passwd\" name = \"passwd\" required /> < br /> < input type = \"submit\" value = \"Bejelentkez\u00e9s\" /> </ form > </ body > </ html > Mez\u0151csoportos\u00edt\u00e1s \u00b6 Az \u0171rlapok elk\u00e9sz\u00edt\u00e9sekor \u00e9rdemes lehet az \u0171rlapelemeket struktur\u00e1lni, az azonos t\u00e9m\u00e1hoz tartoz\u00f3 \u0171rlapmez\u0151ket csoportos\u00edtani. Az ilyen mez\u0151csoportos\u00edt\u00e1sok kialak\u00edt\u00e1s\u00e1t a <fieldset>...</fieldset> tagp\u00e1rral v\u00e9gezhetj\u00fck. A <legend>...</legend> taggel megadhatjuk egy mez\u0151csoportos\u00edt\u00e1s felirat\u00e1t. P\u00e9lda: Mez\u0151csoportos\u00edt\u00e1s haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form method = \"POST\" > < fieldset > < legend > Szem\u00e9lyes adatok </ legend > < label for = \"full-name\" > Teljes n\u00e9v: </ label > < input type = \"text\" id = \"full-name\" name = \"full-name\" /> < br />< br /> < label for = \"email\" > E-mail c\u00edm: </ label > < input type = \"email\" id = \"email\" name = \"email\" /> < br />< br /> < label for = \"passwd\" > Jelsz\u00f3: </ label > < input type = \"password\" id = \"passwd\" name = \"passwd\" /> < br />< br /> < input type = \"submit\" /> </ fieldset > </ form > </ body > </ html > \u0170rlapok form\u00e1z\u00e1sa \u00b6 Mint minden HTML elemet, az \u0171rlapelemeket is lehet\u0151s\u00e9g\u00fcnk van CSS form\u00e1z\u00e1sokkal ell\u00e1tni. A b\u00f6ng\u00e9sz\u0151k sok tulajdons\u00e1gnak adnak alap\u00e9rt\u00e9ket, ez\u00e9rt alaposnak kell lenn\u00fcnk, ha egy \u0171rlapot szeretn\u00e9nk testre szabni. Az \u0171rlapok form\u00e1z\u00e1s\u00e1ra haszn\u00e1lhatjuk a kor\u00e1bbi leck\u00e9kben megismert valamennyi CSS tulajdons\u00e1got. A form\u00e1zand\u00f3 \u0171rlapelemek kijel\u00f6l\u00e9sekor gyakran el\u0151ker\u00fcl a m\u00falt \u00f3r\u00e1n tanult attrib\u00fatum alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9s. P\u00e9ld\u00e1ul ha ki szeretn\u00e9nk jel\u00f6lni az \u00f6sszes <input type=\"text\"/> \u0171rlapelemet, akkor ezt az input[type=\"text\"] CSS szelektorral tudjuk megtenni. Az \u0171rlapok eset\u00e9n egy-egy \u0171rlapelem-csoport kijel\u00f6l\u00e9s\u00e9re haszn\u00e1lhatunk k\u00fcl\u00f6nf\u00e9le pseudo-class-okat is: :required : kijel\u00f6li a required attrib\u00fatummal rendelkez\u0151 elemeket :optional : kijel\u00f6li a required attrib\u00fatummal nem rendelkez\u0151 elemeket :focus : kijel\u00f6li a f\u00f3kuszban l\u00e9v\u0151 elemet :checked : kijel\u00f6li a bejel\u00f6lt radio, checkbox \u00e9s option elemeket :disabled : kijel\u00f6li a disabled attrib\u00fatummal rendelkez\u0151 (letiltott) elemeket :enabled : kijel\u00f6li a disabled attrib\u00fatummal nem rendelkez\u0151 (enged\u00e9lyezett) elemeket. Egy teljes p\u00e9lda \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> < style > input , select , textarea , fieldset { margin-bottom : 10 px ; } input [ type = \"reset\" ], input [ type = \"submit\" ] { background-color : #4CAF50 ; color : #FFF ; border : none ; outline : none ; font-size : 18 px ; width : 150 px ; height : 40 px ; } input : focus { background-color : #BFFFC3 ; } </ style > </ head > < body > < form > < fieldset > < legend > Regisztr\u00e1ci\u00f3s adatok </ legend > < label > Teljes n\u00e9v: < input type = \"text\" name = \"full-name\" size = \"25\" /></ label > < br /> < label > Felhaszn\u00e1l\u00f3n\u00e9v: < input type = \"text\" name = \"username\" required /></ label > < br /> < label > Jelsz\u00f3: < input type = \"password\" name = \"passwd\" required /></ label > < br /> < label > Jelsz\u00f3 ism\u00e9t: < input type = \"password\" name = \"passwd-check\" required /></ label > < br /> < label > Sz\u00fclet\u00e9si d\u00e1tum: < input type = \"date\" name = \"date-of-birth\" min = \"1920-01-01\" /></ label > < br /> < label > E-mail: < input type = \"email\" name = \"email\" required /></ label > < br /> < label > Felhaszn\u00e1l\u00f3i azonos\u00edt\u00f3: < input type = \"number\" name = \"user-id\" value = \"12345\" disabled /></ label > < br /> </ fieldset > < label for = \"education\" > Legmagasabb iskolai v\u00e9gzetts\u00e9g: </ label > < select id = \"education\" > < option value = \"elementary\" > 8 \u00e1ltal\u00e1nos </ option > < option value = \"highschool\" > \u00c9retts\u00e9gi </ option > < option value = \"university\" > Fels\u0151fok\u00fa v\u00e9gzetts\u00e9g </ option > < option value = \"other\" selected > Egy\u00e9b </ option > </ select > < br /> Nem: < label for = \"op1\" > F\u00e9rfi: </ label > < input type = \"radio\" id = \"op1\" name = \"sex\" value = \"m\" /> < label for = \"op2\" > N\u0151: </ label > < input type = \"radio\" id = \"op2\" name = \"sex\" value = \"f\" /> < label for = \"op3\" > Egy\u00e9b: </ label > < input type = \"radio\" id = \"op3\" name = \"sex\" value = \"other\" checked /> < br /> Hobbik: < label for = \"hobby-1\" > Fot\u00f3z\u00e1s: </ label > < input type = \"checkbox\" id = \"hobby-1\" name = \"hobby-1\" value = \"photo\" /> < label for = \"hobby-2\" > F\u0151z\u00e9s: </ label > < input type = \"checkbox\" id = \"hobby-2\" name = \"hobby-2\" value = \"cooking\" /> < label for = \"hobby-3\" > Sorozatn\u00e9z\u00e9s: </ label > < input type = \"checkbox\" id = \"hobby-3\" name = \"hobby-3\" value = \"series\" /> < br /> < label for = \"introduction\" > Bemutatkoz\u00e1s (max. 200 karakter): </ label > < br /> < textarea id = \"introduction\" maxlength = \"200\" ></ textarea > < br /> < input type = \"reset\" name = \"reset-btn\" value = \"Adatok t\u00f6rl\u00e9se\" /> < input type = \"submit\" name = \"submit-btn\" value = \"Adatok elk\u00fcld\u00e9se\" /> </ form > </ body > </ html >","title":"4. gyakorlat"},{"location":"gyakorlat/gyak4/#4-gyakorlat","text":"","title":"4. gyakorlat"},{"location":"gyakorlat/gyak4/#a-gyakorlat-anyaga","text":"HTML5 \u0171rlapok l\u00e9trehoz\u00e1sa \u00e9s form\u00e1z\u00e1sa, n\u00e9h\u00e1ny fontosabb \u0171rlapelem megismer\u00e9se.","title":"A gyakorlat anyaga"},{"location":"gyakorlat/gyak4/#az-urlapok-szerepe","text":"Az eddigiek sor\u00e1n f\u0151k\u00e9nt a weboldalak megjelen\u00e9s\u00e9n volt a hangs\u00faly: k\u00fcl\u00f6nf\u00e9le elemeket helyezt\u00fcnk el a weboldalon HTML-ben, majd CSS-ben form\u00e1z\u00e1sokkal l\u00e1ttuk el \u0151ket. A HTML \u0171rlapok lehet\u0151s\u00e9get biztos\u00edtanak arra, hogy a weboldalaink felhaszn\u00e1l\u00f3i bemenetet is tudjanak fogadni, amit k\u00e9s\u0151bb fel tudunk dolgozni. Az \u0171rlapok a modern weboldalak szerves r\u00e9szei, nap mint nap tal\u00e1lkozunk vel\u00fck webes kalandoz\u00e1saink sor\u00e1n: p\u00e9ld\u00e1ul ha be szeretn\u00e9nk l\u00e9pni a kedvenc k\u00f6z\u00f6ss\u00e9gi oldalunkra, akkor egy - az al\u00e1bbihoz hasonl\u00f3 - bejelentkez\u00e9si \u0171rlapon adjuk meg a bel\u00e9p\u00e9shez sz\u00fcks\u00e9ges adatainkat. Ennek a leck\u00e9nek a c\u00e9lja, hogy megtanuljunk HTML \u0171rlapokat k\u00e9sz\u00edteni. Term\u00e9szetesen a gyakorlatban fel is szoktuk dolgozni a felhaszn\u00e1l\u00f3 \u00e1ltal megadott \u0171rlapadatokat, viszont az \u0171rlapok feldolgoz\u00e1s\u00e1val majd csak a PHP t\u00e9mak\u00f6r\u00e9ben fogunk foglalkozni.","title":"Az \u0171rlapok szerepe"},{"location":"gyakorlat/gyak4/#urlapok-letrehozasa","text":"HTML-ben a <form>...</form> tagp\u00e1rral hozhatunk l\u00e9tre \u0171rlapokat. Term\u00e9szetesen az \u0171rlapok - mint minden megjelen\u00edtend\u0151 elem a weboldalon - a HTML dokumentum t\u00f6rzsr\u00e9sz\u00e9be ( body ) ker\u00fclnek. A <form> tagnek adhat\u00f3 fontosabb attrib\u00fatumok: action : az \u0171rlap elk\u00fcld\u00e9sekor v\u00e9grehajtand\u00f3 feladat (jellemz\u0151en egy PHP szkript) method : az \u0171rlapadatok tov\u00e1bb\u00edt\u00e1s\u00e1nak m\u00f3dja lehets\u00e9ges \u00e9rt\u00e9kei: GET (az \u0171rlapadatok az URL-ben ker\u00fclnek tov\u00e1bb\u00edt\u00e1sra, alap\u00e9rtelmezett), POST (az \u0171rlapadatok a h\u00e1tt\u00e9rben tov\u00e1bb\u00edt\u00f3dnak) enctype : az \u0171rlapadatok k\u00f3dol\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: application/x-www-form-urlencoded (alap\u00e9rtelmezett), multipart/form-data (f\u00e1jlfelt\u00f6lt\u00e9st tartalmaz\u00f3 \u0171rlapokn\u00e1l ezt kell haszn\u00e1lnunk), text/plain autocomplete : automatikus kit\u00f6lt\u00e9si javaslatok enged\u00e9lyez\u00e9se vagy letilt\u00e1sa lehets\u00e9ges \u00e9rt\u00e9kei: on (kit\u00f6lt\u00e9si javaslatok enged\u00e9lyez\u00e9se), off (kit\u00f6lt\u00e9si javaslatok letilt\u00e1sa) novalidate : letiltja az \u0171rlap elk\u00fcld\u00e9sekor v\u00e9grehajtand\u00f3 ellen\u0151rz\u00e9seket. Kiemelten fontos megjegyezni, hogy mivel a method=\"GET\" attrib\u00fatummal rendelkez\u0151 \u0171rlapok adatai az URL-ben lesznek tov\u00e1bb\u00edtva, ez\u00e9rt ez a m\u00f3dszer NEM alkalmas bizalmas adatok (pl. jelszavak) biztons\u00e1gos tov\u00e1bb\u00edt\u00e1s\u00e1ra (v\u00e9lhet\u0151en senki nem \u00f6r\u00fclne annak, ha a jelszav\u00e1t b\u00e1rki l\u00e1thatn\u00e1 az URL s\u00e1vban)! Ha egy \u0171rlapon bizalmas adatokat (pl. jelszavakat) szeretn\u00e9nk tov\u00e1bb\u00edtani, akkor mindenk\u00e9ppen a method=\"POST\" attrib\u00fatumot haszn\u00e1ljuk!","title":"\u0170rlapok l\u00e9trehoz\u00e1sa"},{"location":"gyakorlat/gyak4/#fontosabb-urlapelemek","text":"Ebben a fejezetben megismerked\u00fcnk n\u00e9h\u00e1ny fontosabb vez\u00e9rl\u0151elemmel, amelyeket gyakran szoktunk HTML \u0171rlapokon haszn\u00e1lni.","title":"Fontosabb \u0171rlapelemek"},{"location":"gyakorlat/gyak4/#egysoros-beviteli-mezo","text":"A HTML \u0171rlapokon leggyakrabban az <input/> p\u00e1ratlan taget haszn\u00e1ljuk. Ez sz\u00e1mos k\u00fcl\u00f6nf\u00e9le \u0171rlapelem (pl. sz\u00f6veges beviteli mez\u0151, v\u00e1laszt\u00f3gomb, jel\u00f6l\u0151n\u00e9gyzet, elk\u00fcld\u00e9s gomb) l\u00e9trehoz\u00e1s\u00e1ra alkalmas.","title":"Egysoros beviteli mez\u0151"},{"location":"gyakorlat/gyak4/#globalis-attributumok","text":"M\u00e9g miel\u0151tt \u00e1ttekinten\u00e9nk a k\u00fcl\u00f6nf\u00e9le beviteli mez\u0151 t\u00edpusokat, el\u0151sz\u00f6r ismerkedj\u00fcnk meg az <input> tagnek adhat\u00f3 fontosabb attrib\u00fatumokkal: name : mez\u0151n\u00e9v, ami alapj\u00e1n le tudjuk k\u00e9rni a beviteli mez\u0151be \u00edrt \u00e9rt\u00e9ket size : a beviteli mez\u0151 sz\u00e9less\u00e9ge (karakterben) teh\u00e1t nem a be\u00edrhat\u00f3 karakterek sz\u00e1m\u00e1t korl\u00e1tozza, hanem csak a megjelen\u0151 \u0171rlapmez\u0151 sz\u00e9less\u00e9g\u00e9t (vesd \u00f6ssze: maxlength ) maxlength : a be\u00edrhat\u00f3 karakterek maxim\u00e1lis sz\u00e1ma value : a mez\u0151be \u00edrt alap\u00e9rtelmezett \u00e9rt\u00e9k placeholder : minta\u00e9rt\u00e9k a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra (akkor jelenik meg, ha a mez\u0151 \u00fcres) autocomplete : ugyan\u00fagy m\u0171k\u00f6dik, mint a <form> -n\u00e1l ( on / off \u00e9rt\u00e9kek) required : a mez\u0151t k\u00f6telez\u0151 kit\u00f6lteni readonly : a mez\u0151 csak olvashat\u00f3, nem m\u00f3dos\u00edthat\u00f3 disabled : a mez\u0151 letilt\u00e1sa (halv\u00e1nyan jelenik meg, nem lehet bele \u00edrni) type : az \u0171rlapmez\u0151 t\u00edpusa.","title":"Glob\u00e1lis attrib\u00fatumok"},{"location":"gyakorlat/gyak4/#fontosabb-beviteli-mezo-tipusok","text":"Az <input> tag type attrib\u00fatum\u00e1val megadhatjuk a beviteli mez\u0151 t\u00edpus\u00e1t. N\u00e9h\u00e1ny, sz\u00e1munkra \u00e9rdekesebb mez\u0151t\u00edpus, amik k\u00f6z\u00fcl v\u00e1logathatunk: <input type=\"text\"/> : r\u00f6vid sz\u00f6veg <input type=\"password\"/> : jelsz\u00f3 a be\u00edrt karakterek helyett pontok vagy csillagok jelennek meg a jelszavak szerverre val\u00f3 tov\u00e1bb\u00edt\u00e1s\u00e1n\u00e1l nincs titkos\u00edt\u00e1s(!) <input type=\"number\"/> : sz\u00e1m <input type=\"range\"/> : intervallum min attrib\u00fatum: a legkisebb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9k max attrib\u00fatum: a legnagyobb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9k step attrib\u00fatum: l\u00e9p\u00e9sk\u00f6z <input type=\"tel\"/> : telefonsz\u00e1m <input type=\"email\"/> : e-mail c\u00edm (ellen\u0151rzi a form\u00e1tum\u00e1t) <input type=\"url\"/> : URL (ellen\u0151rzi a form\u00e1tum\u00e1t) <input type=\"color\"/> : sz\u00edn <input type=\"date\"/> : d\u00e1tum a min \u00e9s max attrib\u00fatummal megadhatjuk a legkisebb \u00e9s legnagyobb kiv\u00e1laszthat\u00f3 \u00e9rt\u00e9ket a d\u00e1tumok megad\u00e1sa \u00c9\u00c9\u00c9\u00c9-HH-NN form\u00e1tumban t\u00f6rt\u00e9nik <input type=\"time\"/> : id\u0151pont <input type=\"datetime\"/> : d\u00e1tum \u00e9s id\u0151pont <input type=\"file\"/> : f\u00e1jlfelt\u00f6lt\u00e9s <input type=\"search\"/> : keresend\u0151 sz\u00f6veg <input type=\"radio\"/> : v\u00e1laszt\u00f3gomb az egy csoportba tartoz\u00f3 v\u00e1laszt\u00f3gombok k\u00f6z\u00fcl pontosan 1 opci\u00f3 jel\u00f6lhet\u0151 meg a v\u00e1laszt\u00f3gombok csoportos\u00edt\u00e1sa a name attrib\u00fatum alapj\u00e1n t\u00f6rt\u00e9nik: az azonos name \u00e9rt\u00e9kkel rendelkez\u0151 v\u00e1laszt\u00f3gombok alkotnak egy csoportot checked attrib\u00fatum: az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor <input type=\"checkbox\"/> : jel\u00f6l\u0151n\u00e9gyzet egyszerre t\u00f6bb opci\u00f3 is megjel\u00f6lhet\u0151 checked attrib\u00fatum: az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor <input type=\"button\"/> : egyszer\u0171 nyom\u00f3gomb <input type=\"submit\"/> : elk\u00fcld\u00e9s gomb (ha r\u00e1kattintunk, elk\u00fcldi az \u0171rlapadatokat) <input type=\"reset\"/> : vissza\u00e1ll\u00edtja az \u0171rlapmez\u0151k eredeti \u00e9rt\u00e9keit <input type=\"hidden\"/> : rejtett mez\u0151 (technikai c\u00e9lokra). P\u00e9lda: Egy egyszer\u0171 bejelentkez\u00e9si \u0171rlap (form\u00e1z\u00e1s n\u00e9lk\u00fcl) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < h1 > Bejelentkez\u00e9s </ h1 > < form method = \"POST\" > < input type = \"text\" name = \"username\" placeholder = \"Felhaszn\u00e1l\u00f3n\u00e9v...\" required /> < br />< br /> < input type = \"password\" name = \"passwd\" placeholder = \"Jelsz\u00f3...\" required /> < br />< br /> < input type = \"submit\" value = \"Bejelentkez\u00e9s\" /> </ form > </ body > </ html >","title":"Fontosabb beviteli mez\u0151 t\u00edpusok"},{"location":"gyakorlat/gyak4/#tobb-soros-beviteli-mezo","text":"A <textarea>...</textarea> tag seg\u00edts\u00e9g\u00e9vel t\u00f6bb soros sz\u00f6veg bevitel\u00e9re alkalmas \u0171rlapmez\u0151t hozhatunk l\u00e9tre. Az ilyen beviteli mez\u0151ket gyakran haszn\u00e1ljuk p\u00e9ld\u00e1ul felhaszn\u00e1l\u00f3i visszajelz\u00e9sek, kommentek bek\u00e9r\u00e9s\u00e9re. Enn\u00e9l a tagn\u00e9l is haszn\u00e1lhat\u00f3k a kor\u00e1bban t\u00e1rgyalt name , placeholder , maxlength , required , readonly \u00e9s disabled attrib\u00fatumok. Ezek mellett a rows attrib\u00fatummal megadhatjuk a megjelen\u0151 sorok sz\u00e1m\u00e1t, a cols attrib\u00fatummal pedig az oszlopok sz\u00e1m\u00e1t. P\u00e9lda: Felhaszn\u00e1l\u00f3i visszajelz\u00e9s bek\u00e9r\u00e9se 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form > < textarea name = \"feedback\" rows = \"5\" cols = \"50\" maxlength = \"200\" placeholder = \"\u00cdrd meg a v\u00e9lem\u00e9nyedet (max. 200 karakter)!\" ></ textarea > < br /> < br /> < input type = \"submit\" /> </ form > </ body > </ html >","title":"T\u00f6bb soros beviteli mez\u0151"},{"location":"gyakorlat/gyak4/#valasztolista","text":"A <select>...</select> tagp\u00e1rral egy lenyithat\u00f3 v\u00e1laszt\u00f3list\u00e1t hozhatunk l\u00e9tre egy \u0171rlapon bel\u00fcl, amelynek seg\u00edts\u00e9g\u00e9vel k\u00fcl\u00f6nb\u00f6z\u0151 opci\u00f3k k\u00f6z\u00fcl v\u00e1laszthat a felhaszn\u00e1l\u00f3. A kor\u00e1bban t\u00e1rgyalt name , required \u00e9s disabled attrib\u00fatumokat erre az \u0171rlapelemre is alkalmazhatjuk. A v\u00e1laszt\u00f3list\u00e1hoz tartoz\u00f3 opci\u00f3kat az <option>...</option> taggel adhatjuk meg. A tag fontosabb attrib\u00fatumai: value : az \u0171rlap feldolgoz\u00e1sakor a szervernek elk\u00fcld\u00f6tt \u00e9rt\u00e9k selected : az opci\u00f3 alapb\u00f3l ki van v\u00e1lasztva a lap bet\u00f6lt\u00e9sekor disabled : az opci\u00f3t nem lehet kiv\u00e1lasztani. Alap\u00e9rtelmezett m\u00f3don egy v\u00e1laszt\u00f3list\u00e1ban mindig csak egy opci\u00f3t tud kiv\u00e1lasztani a felhaszn\u00e1l\u00f3. Ha enged\u00e9lyezni szeretn\u00e9nk t\u00f6bb opci\u00f3 kiv\u00e1laszt\u00e1s\u00e1t, akkor ezt a <select> tagnek adott multiple attrib\u00fatummal tehetj\u00fck meg. P\u00e9lda: Egy egyszer\u0171 v\u00e1laszt\u00f3lista 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form > A kedvenc fagyi \u00edzed: < select > < option value = \"vanilla\" > Van\u00edlia </ option > < option value = \"chocolate\" selected > Csokol\u00e1d\u00e9 </ option > < option value = \"pistachio\" > Piszt\u00e1cia </ option > < option value = \"lemon\" > Citrom </ option > < option value = \"raspberry\" > Egy\u00e9b </ option > </ select > </ form > </ body > </ html >","title":"V\u00e1laszt\u00f3lista"},{"location":"gyakorlat/gyak4/#elemfelirat","text":"Az egyes \u0171rlapelemekhez k\u00e9sz\u00edthet\u00fcnk elemfeliratot is a <label>...</label> tagp\u00e1rral. Ekkor, ha a felhaszn\u00e1l\u00f3 az elemfeliratra kattint, akkor automatikusan az elemfelirathoz tartoz\u00f3 \u0171rlapmez\u0151be ker\u00fcl a kurzor. Egy \u0171rlapelemhez k\u00e9tf\u00e9lek\u00e9ppen t\u00e1rs\u00edthatunk elemfeliratot: az elemfelirathoz tartoz\u00f3 \u0171rlapelemet <label> \u00e9s </label> k\u00f6z\u00e9 helyezz\u00fck az \u0171rlapelemnek adunk egy egyedi azonos\u00edt\u00f3t ( id ), majd az elemhez tartoz\u00f3 <label> tag for attrib\u00fatum\u00e1nak \u00e9rt\u00e9kek\u00e9nt megadjuk ezt az azonos\u00edt\u00f3t. P\u00e9lda: Elemfeliratok t\u00e1rs\u00edt\u00e1sa \u0171rlapmez\u0151kh\u00f6z 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> < style > input { margin-bottom : 10 px ; } </ style > </ head > < body > < h1 > Bejelentkez\u00e9s </ h1 > < form method = \"POST\" > <!-- Az egyik m\u00f3dszer: a <label> k\u00f6zrefogja az \u0171rlapelemet --> < label > Felhaszn\u00e1l\u00f3n\u00e9v: < input type = \"text\" name = \"username\" required /></ label > < br /> <!-- A m\u00e1sik m\u00f3dszer: id \u00e9rt\u00e9k alapj\u00e1n t\u00f6rt\u00e9n\u0151 t\u00e1rs\u00edt\u00e1s --> < label for = \"my-passwd\" > Jelsz\u00f3: </ label > < input type = \"password\" id = \"my-passwd\" name = \"passwd\" required /> < br /> < input type = \"submit\" value = \"Bejelentkez\u00e9s\" /> </ form > </ body > </ html >","title":"Elemfelirat"},{"location":"gyakorlat/gyak4/#mezocsoportositas","text":"Az \u0171rlapok elk\u00e9sz\u00edt\u00e9sekor \u00e9rdemes lehet az \u0171rlapelemeket struktur\u00e1lni, az azonos t\u00e9m\u00e1hoz tartoz\u00f3 \u0171rlapmez\u0151ket csoportos\u00edtani. Az ilyen mez\u0151csoportos\u00edt\u00e1sok kialak\u00edt\u00e1s\u00e1t a <fieldset>...</fieldset> tagp\u00e1rral v\u00e9gezhetj\u00fck. A <legend>...</legend> taggel megadhatjuk egy mez\u0151csoportos\u00edt\u00e1s felirat\u00e1t. P\u00e9lda: Mez\u0151csoportos\u00edt\u00e1s haszn\u00e1lata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> </ head > < body > < form method = \"POST\" > < fieldset > < legend > Szem\u00e9lyes adatok </ legend > < label for = \"full-name\" > Teljes n\u00e9v: </ label > < input type = \"text\" id = \"full-name\" name = \"full-name\" /> < br />< br /> < label for = \"email\" > E-mail c\u00edm: </ label > < input type = \"email\" id = \"email\" name = \"email\" /> < br />< br /> < label for = \"passwd\" > Jelsz\u00f3: </ label > < input type = \"password\" id = \"passwd\" name = \"passwd\" /> < br />< br /> < input type = \"submit\" /> </ fieldset > </ form > </ body > </ html >","title":"Mez\u0151csoportos\u00edt\u00e1s"},{"location":"gyakorlat/gyak4/#urlapok-formazasa","text":"Mint minden HTML elemet, az \u0171rlapelemeket is lehet\u0151s\u00e9g\u00fcnk van CSS form\u00e1z\u00e1sokkal ell\u00e1tni. A b\u00f6ng\u00e9sz\u0151k sok tulajdons\u00e1gnak adnak alap\u00e9rt\u00e9ket, ez\u00e9rt alaposnak kell lenn\u00fcnk, ha egy \u0171rlapot szeretn\u00e9nk testre szabni. Az \u0171rlapok form\u00e1z\u00e1s\u00e1ra haszn\u00e1lhatjuk a kor\u00e1bbi leck\u00e9kben megismert valamennyi CSS tulajdons\u00e1got. A form\u00e1zand\u00f3 \u0171rlapelemek kijel\u00f6l\u00e9sekor gyakran el\u0151ker\u00fcl a m\u00falt \u00f3r\u00e1n tanult attrib\u00fatum alapj\u00e1n t\u00f6rt\u00e9n\u0151 kijel\u00f6l\u00e9s. P\u00e9ld\u00e1ul ha ki szeretn\u00e9nk jel\u00f6lni az \u00f6sszes <input type=\"text\"/> \u0171rlapelemet, akkor ezt az input[type=\"text\"] CSS szelektorral tudjuk megtenni. Az \u0171rlapok eset\u00e9n egy-egy \u0171rlapelem-csoport kijel\u00f6l\u00e9s\u00e9re haszn\u00e1lhatunk k\u00fcl\u00f6nf\u00e9le pseudo-class-okat is: :required : kijel\u00f6li a required attrib\u00fatummal rendelkez\u0151 elemeket :optional : kijel\u00f6li a required attrib\u00fatummal nem rendelkez\u0151 elemeket :focus : kijel\u00f6li a f\u00f3kuszban l\u00e9v\u0151 elemet :checked : kijel\u00f6li a bejel\u00f6lt radio, checkbox \u00e9s option elemeket :disabled : kijel\u00f6li a disabled attrib\u00fatummal rendelkez\u0151 (letiltott) elemeket :enabled : kijel\u00f6li a disabled attrib\u00fatummal nem rendelkez\u0151 (enged\u00e9lyezett) elemeket.","title":"\u0170rlapok form\u00e1z\u00e1sa"},{"location":"gyakorlat/gyak4/#egy-teljes-pelda","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 <!DOCTYPE html> < html lang = \"hu\" > < head > < title > HTML \u0171rlapok </ title > < meta charset = \"UTF-8\" /> < style > input , select , textarea , fieldset { margin-bottom : 10 px ; } input [ type = \"reset\" ], input [ type = \"submit\" ] { background-color : #4CAF50 ; color : #FFF ; border : none ; outline : none ; font-size : 18 px ; width : 150 px ; height : 40 px ; } input : focus { background-color : #BFFFC3 ; } </ style > </ head > < body > < form > < fieldset > < legend > Regisztr\u00e1ci\u00f3s adatok </ legend > < label > Teljes n\u00e9v: < input type = \"text\" name = \"full-name\" size = \"25\" /></ label > < br /> < label > Felhaszn\u00e1l\u00f3n\u00e9v: < input type = \"text\" name = \"username\" required /></ label > < br /> < label > Jelsz\u00f3: < input type = \"password\" name = \"passwd\" required /></ label > < br /> < label > Jelsz\u00f3 ism\u00e9t: < input type = \"password\" name = \"passwd-check\" required /></ label > < br /> < label > Sz\u00fclet\u00e9si d\u00e1tum: < input type = \"date\" name = \"date-of-birth\" min = \"1920-01-01\" /></ label > < br /> < label > E-mail: < input type = \"email\" name = \"email\" required /></ label > < br /> < label > Felhaszn\u00e1l\u00f3i azonos\u00edt\u00f3: < input type = \"number\" name = \"user-id\" value = \"12345\" disabled /></ label > < br /> </ fieldset > < label for = \"education\" > Legmagasabb iskolai v\u00e9gzetts\u00e9g: </ label > < select id = \"education\" > < option value = \"elementary\" > 8 \u00e1ltal\u00e1nos </ option > < option value = \"highschool\" > \u00c9retts\u00e9gi </ option > < option value = \"university\" > Fels\u0151fok\u00fa v\u00e9gzetts\u00e9g </ option > < option value = \"other\" selected > Egy\u00e9b </ option > </ select > < br /> Nem: < label for = \"op1\" > F\u00e9rfi: </ label > < input type = \"radio\" id = \"op1\" name = \"sex\" value = \"m\" /> < label for = \"op2\" > N\u0151: </ label > < input type = \"radio\" id = \"op2\" name = \"sex\" value = \"f\" /> < label for = \"op3\" > Egy\u00e9b: </ label > < input type = \"radio\" id = \"op3\" name = \"sex\" value = \"other\" checked /> < br /> Hobbik: < label for = \"hobby-1\" > Fot\u00f3z\u00e1s: </ label > < input type = \"checkbox\" id = \"hobby-1\" name = \"hobby-1\" value = \"photo\" /> < label for = \"hobby-2\" > F\u0151z\u00e9s: </ label > < input type = \"checkbox\" id = \"hobby-2\" name = \"hobby-2\" value = \"cooking\" /> < label for = \"hobby-3\" > Sorozatn\u00e9z\u00e9s: </ label > < input type = \"checkbox\" id = \"hobby-3\" name = \"hobby-3\" value = \"series\" /> < br /> < label for = \"introduction\" > Bemutatkoz\u00e1s (max. 200 karakter): </ label > < br /> < textarea id = \"introduction\" maxlength = \"200\" ></ textarea > < br /> < input type = \"reset\" name = \"reset-btn\" value = \"Adatok t\u00f6rl\u00e9se\" /> < input type = \"submit\" name = \"submit-btn\" value = \"Adatok elk\u00fcld\u00e9se\" /> </ form > </ body > </ html >","title":"Egy teljes p\u00e9lda"},{"location":"gyakorlat/gyak5/","text":"5. gyakorlat \u00b6 TODO","title":"5. gyakorlat"},{"location":"gyakorlat/gyak5/#5-gyakorlat","text":"TODO","title":"5. gyakorlat"},{"location":"gyakorlat/gyak6/","text":"6. gyakorlat \u00b6 TODO","title":"6. gyakorlat"},{"location":"gyakorlat/gyak6/#6-gyakorlat","text":"TODO","title":"6. gyakorlat"},{"location":"gyakorlat/gyak7/","text":"7. gyakorlat \u00b6 TODO","title":"7. gyakorlat"},{"location":"gyakorlat/gyak7/#7-gyakorlat","text":"TODO","title":"7. gyakorlat"},{"location":"gyakorlat/gyak8/","text":"8. gyakorlat \u00b6 TODO","title":"8. gyakorlat"},{"location":"gyakorlat/gyak8/#8-gyakorlat","text":"TODO","title":"8. gyakorlat"},{"location":"gyakorlat/gyak9/","text":"9. gyakorlat \u00b6 TODO","title":"9. gyakorlat"},{"location":"gyakorlat/gyak9/#9-gyakorlat","text":"TODO","title":"9. gyakorlat"},{"location":"gyakorlat/kovetelmenyek/","text":"K\u00f6vetelm\u00e9nyek \u00b6 TODO","title":"K\u00f6vetelm\u00e9nyek"},{"location":"gyakorlat/kovetelmenyek/#kovetelmenyek","text":"TODO","title":"K\u00f6vetelm\u00e9nyek"}]}